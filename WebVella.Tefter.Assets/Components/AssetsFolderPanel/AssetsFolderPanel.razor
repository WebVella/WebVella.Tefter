@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@namespace WebVella.Tefter.Assets.Components
@inherits TfFormBaseComponent

<style>
	.asset-panel {
		--space-background-color: @TfAppState.Value.SpaceBackgkroundColor;
		--space-color: @TfAppState.Value.SpaceColorString;
	}
</style>
<FluentDialogHeader Style="display:none" />
<FluentDialogFooter Style="display:none" />
<FluentDialogBody>
	<div>
		@if (_isLoading)
		{
			<TfLoadingPane />
		}
		else if (Content.FolderId is null)
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">@LOC("Error")</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="TfConstants.CloseIcon.WithColor(Color.Neutral)" />
					</div>
				</div>
				<div class="asset-panel__body" style="padding:10px">
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("No folder is configured for this column!")</FluentMessageBar>
				</div>
			</div>
		}
		else if (_folder is null)
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">@LOC("Error")</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="TfConstants.CloseIcon.WithColor(Color.Neutral)" />
					</div>
				</div>
				<div class="asset-panel__body" style="padding:10px">
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("No folder is selected for this view column!")</FluentMessageBar>
				</div>
			</div>
		}
		else if (String.IsNullOrWhiteSpace(_folder.SharedKey))
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">@LOC("Error")</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="TfConstants.CloseIcon.WithColor(Color.Neutral)" />
					</div>
				</div>
				<div class="asset-panel__body" style="padding:10px">
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("The folder has no shared key set!")</FluentMessageBar>
				</div>
			</div>
		}
		else if (_skValue is null)
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">@LOC("Error")</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="TfConstants.CloseIcon.WithColor(Color.Neutral)" />
					</div>
				</div>
				<div class="asset-panel__body" style="padding:10px">
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("The selected dataset does not support the shared key '{0}' of folder '{1}'!", _folder.SharedKey, _folder.Name)</FluentMessageBar>
				</div>
			</div>
		}
		else if (_skValue == Guid.Empty)
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">@LOC("Error")</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="TfConstants.CloseIcon.WithColor(Color.Neutral)" />
					</div>
				</div>
				<div class="asset-panel__body" style="padding:10px">
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("The selected shared key '{0}' value is not yet generated for this row of the dataset!", _folder.SharedKey)</FluentMessageBar>
				</div>
			</div>
		}
		else
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">
						@($"{_folder.Name}")
					</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="TfConstants.CloseIcon.WithColor(Color.Neutral)" />
					</div>
				</div>
				<div class="asset-panel__subheader">
					<div class="asset-panel__subheader__left">
						<FluentStack VerticalAlignment="@VerticalAlignment.Center">
							<FluentButton Id="@_uploadId" Disabled="@(progressPercent > 0 && progressPercent < 100)" Style="width:100%"
										  Appearance="Appearance.Outline" IconStart="@TfConstants.GetIcon("Document")">@LOC("Add file")</FluentButton>
						</FluentStack>
						<FluentInputFile @ref="@fileUploader"
										 DragDropZoneVisible="false"
										 Mode="InputFileMode.SaveToTemporaryFolder"
										 Multiple="false"
										 AnchorId="@_uploadId"
										 MaximumFileSize="@(100 * 1024 * 1024)"
										 OnProgressChange="@_onProgress"
										 OnCompleted="@_onCompleted" />
					</div>
					<div class="asset-panel__subheader__right">
						<FluentButton Id="@_uploadId" Style="width:100%" OnClick="_addLink"
									  Appearance="Appearance.Outline" IconStart="@TfConstants.GetIcon("Link")">@LOC("Add link")</FluentButton>
					</div>
					<div class="asset-panel__subheader__bottom">
						<TfProgress Value="progressPercent" Visible="@((progressPercent > 0 && progressPercent < 100) || true)" LabelVisible="false" />
					</div>
				</div>
				<div class="asset-panel__body">
					@if (_items.Count == 0)
					{
						<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Info">@LOC("No assets in this folder yet")</FluentMessageBar>
					}
					@foreach (var asset in _items)
					{
						<div>@asset.Type</div>
					}
				</div>
			</div>
		}
	</div>
</FluentDialogBody>
