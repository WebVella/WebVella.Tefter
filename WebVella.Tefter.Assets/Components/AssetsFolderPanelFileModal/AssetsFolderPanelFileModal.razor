@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@namespace WebVella.Tefter.Assets.Components
@inherits TfFormBaseComponent
@* Header *@
<FluentDialogHeader ShowDismiss="true">
	<FluentLabel Typo="Typography.PaneHeader">@_title</FluentLabel>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	@if (String.IsNullOrWhiteSpace(_error))
	{
		<FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="_iconBtn"
					  Loading="_isSubmitting" Disabled="_isSubmitting">@_btnText</FluentButton>
	}
	<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">@LOC("Cancel")</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	@if (!string.IsNullOrWhiteSpace(_error))
	{
		<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>

	}
	else
	{
		<FluentEditForm EditContext="EditContext" OnValidSubmit="_save"
						FormName="submit-form" class="tf-form" novalidate>
			<DataAnnotationsValidator />
			<FluentGrid>
				<FluentGridItem xs="12">
					<FluentInputLabel Label="@LOC("File")" Required="true" />
					<FluentStack VerticalAlignment="@VerticalAlignment.Center">
						@if (!String.IsNullOrWhiteSpace(_form.FileName))
						{
							<FluentTextField ReadOnly="true" Value="@_form.FileName" Style="width:100%"/>
							<FluentButton OnClick="_clearFile" IconStart="@TfConstants.CloseIcon.WithColor(Color.Error)"/>
						}
						else
						{
							<FluentButton Id="@_uploadId" Disabled="@(progressPercent > 0 && progressPercent < 100)"
										  Appearance="Appearance.Outline" IconStart="@TfConstants.GetIcon("ArrowUpload")">@LOC("Upload file")</FluentButton>
							@if (progressPercent < 100)
							{
								<TfProgress Value="progressPercent" Visible="@(progressPercent > 0)" />
							}
							<FluentInputFile @ref="@fileUploader"
											 DragDropZoneVisible="false"
											 Mode="InputFileMode.SaveToTemporaryFolder"
											 Multiple="false"
											 AnchorId="@_uploadId"
											 MaximumFileSize="@(100 * 1024 * 1024)"
											 OnProgressChange="@_onProgress"
											 OnCompleted="@_onCompleted" />
						}
					</FluentStack>
					<FluentValidationMessage For="@(() => _form.LocalPath)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="12">
					<FluentInputLabel Label="@LOC("Label")" Required="true" />
					<FluentStack>
						<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=@_form.Label
										 Style="width:100%" AutoComplete="off" />
						<FluentButton IconStart="(new Icons.Regular.Size20.CloudArrowDown())" Title="@LOC("get file name")"
									  OnClick="@(()=>_getNameFromPath(true))" Appearance="@Appearance.Outline" />
					</FluentStack>
					<FluentValidationMessage For="@(() => _form.Label)" />
				</FluentGridItem>
			</FluentGrid>
		</FluentEditForm>
	}
</FluentDialogBody>
