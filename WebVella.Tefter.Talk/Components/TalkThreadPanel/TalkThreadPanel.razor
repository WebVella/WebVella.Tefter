@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@namespace WebVella.Tefter.Web.Components
@inherits TfFormBaseComponent

<style>
	.talk-panel {
		--message-editor-background: @TfAppState.Value.SpaceBackgkroundColor;
		--panel-header-label-color: @TfAppState.Value.SpaceColorString;
	}
</style>
@if (_activeThread is not null)
{
	<style>
		::part(control) {
			--dialog-width: 60vw;
		}
	</style>
}
<FluentDialogHeader Style="display:none" />
<FluentDialogFooter Style="display:none" />
<FluentDialogBody>
	<div>
		@if (_isLoading)
		{
			<TfLoadingPane />
		}
		else if (Content.ChannelId is null)
		{
			<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("No channel is configured for this column!")</FluentMessageBar>
		}
		else if (_channel is null)
		{
			<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("No talk channel is selected for this view column!")</FluentMessageBar>
		}
		else if (String.IsNullOrWhiteSpace(_channel.SharedKey))
		{
			<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("The talk channel has no shared key set!")</FluentMessageBar>
		}
		else if (_skValue is null)
		{
			<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("The selected dataset does not support the shared key '{0}' of channel '{1}'!", _channel.SharedKey, _channel.Name)</FluentMessageBar>
		}
		else if (_skValue == Guid.Empty)
		{
			<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("The selected shared key '{0}' value is not yet generated for this row of the dataset!", _channel.SharedKey)</FluentMessageBar>
		}
		else
		{
			<div class="talk-panel">
				<div class="talk-panel__left">
					<div class="talk-panel__left__header">
						<div class="talk-panel__left__header__left">
							<div class="talk-channel-label">@($"#{_channel.Name}")</div>
						</div>
					</div>
					<div class="talk-panel__left__body">
						@if (_threads.Count == 0)
						{
							<div class="talk-panel__left__body__info">
								<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Info">@LOC("No messages in this thread yet")</FluentMessageBar>
							</div>
						}
						else
						{
							<div class="talk-panel__left__body__messages">
								@foreach (TalkThread context in _threads)
								{
									<TalkMessage @key=context.Id Item="context"
												 Class="@_threadClassDict[context.Id]"
												 IsEdited="@(_threadEditedId == context.Id)"
												 IsSaving=@(_threadIdUpdateSaving == context.Id)
												 OnDelete="@(_ => _deleteThread(context))"
												 OnEdit="@(_ => _editThread(context))"
												 OnReply="@(_ => _replyToThread(context))"
												 OnEditSave="@(x => _saveMessage(context,x))"
												 OnEditCancel="@(_ => _cancelSaveMessage())" />
									var user = new TucUser(context.User);

								}
							</div>
						}
					</div>
					<div class="talk-panel__left__footer">
						<div class="talk-panel__left__footer__editor">
							<TfEditor @ref=_mainEditor Placeholder="Type a message in #general" @bind-Value="_primaryContent" OnEnter="_sendMessage" />
						</div>
						<div class="talk-panel__left__footer__actions">
							<div class="talk-panel__left__footer__actions__left">
								<span class="text-muted">Shift + Enter for new line. Enter to send.</span>
							</div>
							<div class="talk-panel__left__footer__actions__right">
								<FluentButton IconStart="@TfConstants.GetIcon("Send")" OnClick="_sendMessage"
											  Loading="_primarySending" Disabled="_primarySending">Send</FluentButton>
							</div>
						</div>
					</div>
				</div>
				<div class="talk-panel__right" style="@(_activeThread is null ? "display:none" : "")">
					<div class="talk-panel__right__header">

					</div>
					<div class="talk-panel__right__body">
					</div>
				</div>
			</div>
		}
	</div>
</FluentDialogBody>
