@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@inherits TfFormBaseComponent

@* Header *@
<FluentDialogHeader ShowDismiss="true">
	<FluentStack VerticalAlignment="VerticalAlignment.Center">
		<FluentIcon Value="@_icon" />
		<FluentLabel Typo="Typography.PaneHeader">@_title</FluentLabel>
	</FluentStack>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	@if (String.IsNullOrWhiteSpace(_error))
	{
		<FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="_icon">Save</FluentButton>
	}
	<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">Cancel</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	@if (_isBusy)
	{
		<TfLoadingPane />
	}
	else if (!string.IsNullOrWhiteSpace(_error))
	{
		<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>

	}
	else
	{
		<div>@CultureInfo.CurrentCulture</div>
		<FluentEditForm EditContext="EditContext" OnValidSubmit="_save" 
				FormName="submit-form" class="tf-form" novalidate>
			<DataAnnotationsValidator />
			<FluentGrid Spacing="10">
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Email" @bind-Value=_form.Email Label="@LC["Email"]" Id="email"
									 AutoComplete="off"></FluentTextField>
					<FluentValidationMessage For="@(() => _form.Email)" />
				</FluentGridItem>
			</FluentGrid>

		</FluentEditForm>
	}
</FluentDialogBody>
