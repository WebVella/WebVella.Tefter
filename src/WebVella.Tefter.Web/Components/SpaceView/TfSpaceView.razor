@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@{
	_renderedHs.Clear();
}

@if (SessionState.Value.SpaceView is not null)
{
	var columns = SessionState.Value.SpaceView.Meta.Columns.Where(x => x.IsVisible);
	<div class="tf-grid-wrapper">
		<table class="tf-grid">
			<thead class="tf-grid-thead">
				<tr class="tf-grid-thead-bkg" style="@($"background-color:{SessionState.Value.SpaceBorderColor}")"></tr>
				<tr class="tf-grid-tr">
					<th class="tf-grid-th tf-selection" @onclick=_onMultipleSelect>
						@if (_selectedItems.Count == 0)
						{
							<FluentIcon Value="@_iconUnselected" />
						}
						else if (_selectedItems.Count == _data.Count())
						{
							<FluentIcon Value="@_iconSelected" />
						}
						else
						{
							<FluentIcon Value="@_iconSelectedIndeterminete" />
						}
					</th>

					@foreach (var column in columns)
					{
						<th class="tf-grid-th" style="@column.WidthStyle">@column.Title</th>
					}
				</tr>
			</thead>
			<tbody class="tf-grid-tbody">
				@if (!_isGridLoading)
				{
					foreach (var context in _data)
					{
						if (_renderedHs.Contains(context.Id)) { continue; }
						else { _renderedHs.Add(context.Id); }
						<tr @key=context.Id class="tf-grid-tr">
							<td class="tf-grid-td tf-selection" @onclick=context.OnSelect>
								<div>
									@if (_selectedItems.Contains(context))
									{
										<FluentIcon Value="@_iconSelected" />
									}
									else
									{
										<FluentIcon Value="@_iconUnselected" />
									}
								</div>
							</td>
							@foreach (var column in columns)
							{
								<td class="tf-grid-td">
									@if (column.CellType is null) { }
									else
									{
										<DynamicComponent Type="@column.CellType" Parameters="@column.GetComponentParameters(context)" />
									}
								</td>
							}
						</tr>
					}
				}
				else
				{
					<tr class="tf-grid-tr">
						<td class="tf-grid-td" colspan="@columns.Count()">
							<TfLoadingPane />
						</td>
					</tr>

				}
			</tbody>
			@if (!_isGridLoading && !_allLoaded)
			{
				<tfoot class="tf-grid-tfoot">
					<tr class="tf-grid-tr">
						<td class="tf-grid-td" colspan="@columns.Count()" style="padding-left:0">
							<div style="padding-top:0.5rem;">
								<TfLoadMore Visible="@true" Loading="_isMoreLoading" Class="align-left no-border"
											OnClick="_loadMoreAsync" />
							</div>
						</td>
					</tr>
				</tfoot>
			}
		</table>

	</div>
}

