@namespace WebVella.Tefter.UI.Components
@inherits TfBaseComponent
<TucPageLayout Icon="@TfConstants.GetIcon("CloudDatabase")" Area="@LOC("Data Providers")"
			   Title="@_provider?.Name" SubTitle="@LOC("Datasets")" Color="TfConstants.AdminColor">
	<NavigationLeft>
		<TucAdminDataProviderDetailsContentToolbar />
	</NavigationLeft>
	<ChildContent>
		<TucErrorBoundry>
			<div style="padding:var(--tf-layout-content-padding)">
				@if (String.IsNullOrWhiteSpace(UriInitialized))
				{
					<TucSkeletonPageHeader />
				}
				else if (_provider is null)
				{
					<FluentMessageBar AllowDismiss=false Intent="@MessageIntent.Error">@LOC("Item not found")</FluentMessageBar>
				}
				else
				{
					<TucCard Title="@LOC("Datasets")"
							 SubTitle="@LOC("They provide the ability to manage how and what data is being used in the pages.")">
						<ToolbarTemplate>
							<FluentButton Appearance="@Appearance.Outline" OnClick="_createDataset">
								@LOC("New Dataset")
								<FluentIcon Value="@TfConstants.GetIcon("Add")" Color="@Color.Accent" Slot="start" />
							</FluentButton>
						</ToolbarTemplate>
						<ChildContent>
							<table class="tf-grid">
								<thead class="tf-grid-thead">
									<tr class="tf-grid-thead-bkg"></tr>
									<tr class="tf-grid-tr">
										<th class="tf-grid-th" style="width:110px;min-width:110px;"></th>
										<th class="tf-grid-th">name</th>
										<th class="tf-grid-th">columns</th>
										@* <th class="tf-grid-th" style="width:220px;min-width:220px;">details</th> *@
									</tr>
								</thead>
								<tbody class="tf-grid-tbody">
									@* @foreach (var context in _provider.Identities)
									{
										<tr @key=context.Id class="tf-grid-tr">
											<td class="tf-grid-td">
												<div>
													@if (context.DataIdentity == TfConstants.TF_ROW_ID_DATA_IDENTITY)
													{
														<FluentButton Appearance="@Appearance.Outline" IconStart="@TfConstants.GetIcon("LockClosed")"
																	  Title="@LOC("always implemented")" Disabled=true />
													}
													else
													{
														<FluentStack Wrap="false">
															<FluentButton Appearance="@Appearance.Outline" IconStart="@TfConstants.GetIcon("Edit")"
																		  Title="@LOC("Edit column")" OnClick="@(()=> _editDataset(context))" />
															<FluentButton Appearance="@Appearance.Outline" OnClick="@(() => _deleteDataset(context))" Title="@LOC("Delete")">
																<FluentIcon Color="@Color.Error" Value="@TfConstants.GetIcon("Delete")" />
															</FluentButton>
														</FluentStack>
													}
												</div>
											</td>
											<td class="tf-grid-td">
												<div>
													@context.DataIdentity
												</div>
											</td>
											<td class="tf-grid-td">
												<div>
													<FluentStack>
														@foreach (var item in context.Columns)
														{
															<FluentBadge Appearance="@Appearance.Neutral">@item</FluentBadge>
														}
													</FluentStack>
												</div>
											</td>
										</tr>
									} *@
									@if (_items.Count == 0)
									{
										<tr class="tf-grid-tr">
											<td class="tf-grid-td" colspan="3">
												<div>
													<FluentMessageBar AllowDismiss="false"
																	  Intent="@MessageIntent.Info">@LOC("There are no datasets for this provider. Without a dataset this data cannot be used")</FluentMessageBar>
												</div>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</ChildContent>
					</TucCard>
				}
			</div>
		</TucErrorBoundry>
	</ChildContent>
</TucPageLayout>