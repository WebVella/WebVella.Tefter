@namespace WebVella.Tefter.UI.Components
@inherits TfBaseComponent

<TucScreenRegionComponent RegionContext="@(new TfSpaceViewToolBarActionScreenRegionContext())" />
@if (SpaceView.Settings.CanCreateRows)
{
	<FluentButton OnClick="_onAddRowClick" Appearance="@Appearance.Outline">
		<FluentIcon Value="@TfConstants.GetIcon("Add")" Color="@Color.Accent" />
	</FluentButton>
}
@* Manage rows *@
@if (SpaceView.Settings.CanUpdateRows)
{
	@if (TucSpaceViewPageContent.GetEditAll())
	{
		<FluentButton OnClick="_onEditAllClick" BackgroundColor="var(--warning)" Color="transparent">
			<FluentIcon Value="@TfConstants.GetIcon("Edit")!.WithColor("white")" />
		</FluentButton>
	}
	else
	{
		<FluentButton OnClick="_onEditAllClick" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.GetIcon("Edit")" Color="@Color.Accent" />
		</FluentButton>
	}
	<FluentDivider Orientation="Orientation.Vertical"/>
}

<FluentButton Id="view-actions-selector" OnClick="OnActionClick" Appearance="@Appearance.Outline">
	<FluentIcon Value="@TfConstants.GetIcon("Connector")" Color="@Color.Accent" />
</FluentButton>
<FluentButton Id="view-share-selector" OnClick="OnExportClick" Appearance="@Appearance.Outline">
	<FluentIcon Value="@TfConstants.GetIcon("ShareAndroid")" Color="@Color.Accent" />
</FluentButton>
@if (_hasViewPersonalization)
{
	<div class="tf-hover-switch">
		<div class="tf-hover-switch__unhover">
			<FluentButton OnClick="OnClearPersonalizationClick" Title="@LOC("this view was personalized.Click to remove the personalization")"
			              Appearance="@Appearance.Outline"
			              IconStart="@TfConstants.GetIcon("PersonEdit")!.WithColor(Color.Warning)" />
		</div>
		<div class="tf-hover-switch__hover">
			<FluentButton OnClick="OnClearPersonalizationClick" Title="@LOC("this view was personalized.Click to remove the personalization")"
			              Appearance="@Appearance.Outline"
			              IconStart="@TfConstants.GetIcon("Dismiss")!.WithColor(Color.Error)" />
		</div>
	</div>
}

@*Search and Filters*@
<FluentDivider Orientation="Orientation.Vertical"/>
@if (_showClearFilter)
{
	<FluentButton OnClick="OnClearFilterClick" Title="@LOC("clear filters and sort")" Appearance="@Appearance.Outline">
		<FluentIcon Value="@TfConstants.GetIcon("FilterDismiss")" Color="@Color.Error" />
	</FluentButton>
}
<FluentSearch Value="@_navState.Search" ValueChanged="_searchChanged" AutoComplete="off" Placeholder="@LOC("search...")" />
<FluentButton Id="view-filter-selector" OnClick="OnFilterClick" Title="data filters" Appearance="@Appearance.Outline">
	@if ((_navState.Filters?.Count ?? 0) > 0)
	{
		<FluentIcon Value="@TfConstants.GetIcon("DataFunnel")" Slot="start" Color="@Color.Accent" />
		<FluentBadge Appearance="Appearance.Accent">@(_navState.Filters?.Count ?? 0)</FluentBadge>
	}
	else
	{
		<FluentIcon Value="@TfConstants.GetIcon("DataFunnel")" Color="@Color.Accent" />
	}
</FluentButton>
<FluentButton Id="view-sort-selector" OnClick="OnSortClick" Title="data sort" Appearance="@Appearance.Outline">
	@if ((_navState.Sorts?.Count ?? 0) > 0)
	{
		<FluentIcon Value="@TfConstants.GetIcon("ArrowSortDownLines")" Slot="start" Color="@Color.Accent" />
		<FluentBadge Appearance="Appearance.Accent">@(_navState.Sorts?.Count ?? 0)</FluentBadge>
	}
	else
	{
		<FluentIcon Value="@TfConstants.GetIcon("ArrowSortDownLines")" Color="@Color.Accent" />
	}
</FluentButton>

@* 		<FluentButton Id="grid-properties-selector" OnClick="OnGridPropertiesClick" Title="grid properties" Appearance="@Appearance.Outline">
		<FluentIcon Value="@TfConstants.GetIcon("TableSettings")" Color="@Color.Accent" />
		</FluentButton> *@

<TucSpaceViewActionSelector @ref="_actionSelector" SpaceView="SpaceView" SpaceData="SpaceData" User=Context.CurrentUser Data="Data" SelectedRows="SelectedRows" />
<TucSpaceViewShareSelector @ref="_shareSelector" SpaceView="SpaceView" Data="Data" SelectedRows="SelectedRows" />
