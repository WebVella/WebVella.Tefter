@namespace WebVella.Tefter.UI.Components
@inherits TfBaseComponent

<div class="@_css">
	<TucAnchor Href="@Item.Href" 
				  Id="@Item.Id" AdditionalAttributes=@_attributes
				  OnClick="@Item.OnClick" Appearance="@Appearance.Hypertext">
		@if (Item.Icon is not null && !String.IsNullOrWhiteSpace(Item.Text))
		{
			<span slot="start">
				@if (Item.Color is not null)
				{
					<FluentIcon Value="@Item.Icon.WithColor(Item.Color.GetColor().OKLCH)" />
				}

				else
				{
					<FluentIcon Value="@Item.Icon" />
				}
			</span>
		}
		else if (Item.Icon is not null)
		{
			@if (Item.Color is not null)
			{
				<FluentIcon Value="@Item.Icon.WithColor(Item.Color.GetColor().OKLCH)" />
			}

			else
			{
				<FluentIcon Value="@Item.Icon" />
			}
		}
		@if (!String.IsNullOrWhiteSpace(Item.Text))
		{
			<span class="tf-tabs__item__text" title="@Item.Text">
				@TfConverters.StringOverflow(Item.Text, EllipsesLimit)
			</span>
		}
		@if ((Item.IsSeparateChevron.HasValue && !Item.IsSeparateChevron.Value)
				|| Item.BadgeContent is not null)
		{
			<span slot="end">
				@if (Item.BadgeContent is not null)
				{
					<FluentBadge Appearance="Appearance.Neutral">@Item.BadgeContent</FluentBadge>
				}
				@if (Item.IsSeparateChevron.HasValue && !Item.IsSeparateChevron.Value)
				{
					<FluentIcon Value="@TfConstants.GetIcon("ChevronDown")" />
				}
			</span>
		}
		@* 		@if (Item.Color is not null)
		{
			<span class="tf-menu__item__color" style="@($"background-color:{Item.Color.GetAttribute().Value}")"></span>
		} *@
	</TucAnchor>
	@if (!Item.Disabled && Item.Items.Count > 0)
	{
		<FluentMenu UseMenuService="false"
					Open="@Item.Expanded"
					OpenChanged="@(async (x) => await Item.OnExpand.InvokeAsync(x))"
					Anchor="@Item.Id">
			@foreach (var node in Item.Items)
			{
				<TucMenuDropdownItem Item="node" EllipsesLimit="@EllipsesLimit" />
			}
		</FluentMenu>
	}
</div>
@if (_expandItem is not null)
{
	<TucMenuItem Item="_expandItem" Class="@_expandItemCss" />
}


