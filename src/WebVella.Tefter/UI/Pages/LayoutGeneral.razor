@page "/layout-general"
@inherits TfBasePage

@((MarkupString)_styles)

<TucLayoutGeneral>
	<SpaceHeader>
		<div class="tf-space-header">
			<div class="tf-space-header__icon">
				<FluentIcon Value="@TfConstants.GetIcon("Building", IconSize.Size24)" Focusable="false"></FluentIcon>
			</div>
			<div class="tf-space-header__meta">
				<div class="tf-space-header__meta__title">Sea tempor elitr sed clita illum erat</div>
			</div>
		</div>
	</SpaceHeader>
	<SpaceActions>
		<div class="tf-space-actions">
			<FluentButton Class="tf-button" IconStart="@TfConstants.GetIcon("AppFolder", IconSize.Size16)"
			              Appearance="@Appearance.Outline">spaces
			</FluentButton>
			<FluentButton Class="tf-button" IconStart="@TfConstants.GetIcon("Settings", IconSize.Size16)"
			              Appearance="@Appearance.Outline">settings
			</FluentButton>
		</div>
	</SpaceActions>
	<SideNav>
		<div class="tf-sidenav">
			<TucTreeView Items="_menu"/>
		</div>
	</SideNav>
	<PageTopbar>
		<div class="tf-topbar">
			<div class="tf-topbar__left">
				<FluentBreadcrumb>
					<FluentBreadcrumbItem Href="#">
						<FluentIcon Value="@TfConstants.GetIcon("AppFolder", IconSize.Size16)" Color="@Color.Neutral"
						            Slot="start"/>
						Spaces
					</FluentBreadcrumbItem>
					<FluentBreadcrumbItem Href="#">
						SpaceName
					</FluentBreadcrumbItem>
				</FluentBreadcrumb>
			</div>
			<div class="tf-topbar__right">
				<FluentButton Class="tf-button" Id="view-bookmark-selector" Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("Bookmark")"/>
				</FluentButton>
				<FluentButton Class="tf-button" Id="view-save-selector" Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("Link")"/>
				</FluentButton>
				<FluentButton Class="tf-button" Id="view-export-selector" Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("ShareAndroid")"/>
				</FluentButton>
				<FluentButton Class="tf-button" Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("Settings")"/>
				</FluentButton>
				<FluentDivider Orientation="Orientation.Vertical"/>
				<FluentButton Class="tf-button" Appearance="Appearance.Outline">Admin Space</FluentButton>
				<FluentButton Class="tf-button" IconEnd="@TfConstants.GetIcon("ChevronDown")"
				              Appearance="@Appearance.Outline">
					<TucAvatar User="@TfState.User"></TucAvatar>
				</FluentButton>
			</div>
		</div>
	</PageTopbar>
	<PageHeader>
		<div class="tf-header">
			<div class="tf-header__left">
				<div class="tf-header__meta">
					<div class="tf-header__meta__icon">
						<FluentIcon Value="@TfConstants.GetIcon("Document")"/>
					</div>
					<div class="tf-header__meta__title">Imperdiet eirmod sed amet et adipiscing sea et dignissim ipsum
					</div>
				</div>
			</div>
			<div class="tf-header__right">
				<FluentButton Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("Add")"/>
				</FluentButton>
				<FluentButton Id="select-all-menu-toggler" Title="@LOC("select all")" Appearance="Appearance.Outline">
					<FluentBadge Appearance="Appearance.Accent">5</FluentBadge>
					<FluentIcon Value="@TfConstants.GetIcon("CheckmarkStarburst")" Slot="start" Color="@Color.Accent"/>
				</FluentButton>

				<FluentButton BackgroundColor="var(--warning)" Color="transparent" Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("Edit")"/>
				</FluentButton>
				<FluentButton Id="view-action-selector" Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("Connector")"/>
				</FluentButton>
				<FluentDivider Orientation="Orientation.Vertical"/>
				<FluentSearch AutoComplete="off" Placeholder="@LOC("search...")"/>
				<FluentButton Id="view-filter-selector" Title="data filters" Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("DataFunnel")" Color="@Color.Accent"/>
				</FluentButton>
				<FluentButton Id="view-sort-selector" Title="data sort" Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("ArrowSortDownLines")" Color="@Color.Accent"/>
				</FluentButton>

			</div>
		</div>
	</PageHeader>
	<PageTabs>
		<div class="tf-header-tabs">
			<FluentTabs ActiveTabId="tab-1">
				<FluentTab Id="tab-1">
					<Header>
						<FluentIcon
							Value="@TfConstants.GetIcon("LeafOne").WithColor(TfColor.Amber500.GetColor().Value)"/>
						Dashboards
					</Header>
				</FluentTab>
				<FluentTab Id="tab-2">
					<Header>
						<FluentIcon Value="@TfConstants.GetIcon("LeafOne")"/>
						AllReports
					</Header>
				</FluentTab>
				<FluentTab Id="tab-3">
					<Header>
						<FluentIcon Value="@TfConstants.GetIcon("LeafOne")"/>
						Errors
					</Header>
				</FluentTab>
			</FluentTabs>
		</div>
	</PageTabs>
	<ChildContent>
		<TucCard>
			<TucSpaceViewPageContent Context="@_context"/>
		</TucCard>
	</ChildContent>
</TucLayoutGeneral>

@code {

	[CascadingParameter(Name = "TfState")]
	public TfState TfState { get; set; } = null!;

	[Inject] public ITfService TfService { get; set; } = null!;

	private List<TfMenuItem> _menu = new();
	private string _styles = String.Empty;
	private TfSpacePageAddonContext _context = new();

	protected override async Task OnInitializedAsync()
	{
		base.OnInitialized();
		_context.Mode = TfComponentMode.Read;
		_context.ComponentOptionsJson = @"{""DatasetId"":""82d669cb-4dd1-4a2d-a2b3-dccdf8f05e6a"",""SpaceViewId"":""615e9347-0123-4190-8a32-6d07cebf65e2""}";
		_context.SpacePage = TfService.GetSpacePage(new Guid("3a8912c0-0efd-471f-a2bd-d97ffc366fed"));
		_context.Space = TfService.GetSpace(_context.SpacePage.SpaceId);
		_context.CurrentUser = TfState.User;
		var user = await TfService.GetUserFromCookieAsync(
			jsRuntime: JSRuntime,
			authStateProvider: AuthenticationProvider);

		#region << Menu >>

		//Menu
		{
			var root = new TfMenuItem()
			{
				Id = $"tf-{Guid.NewGuid()}",
				IconCollapsed = TfConstants.GetIcon("People"),
				IconExpanded = TfConstants.GetIcon("People"),
				Selected = true,
				Url = "/layout-general",
				Text = "Dolores justo dolor",
				Expanded = true,
			};
			var sub1 = new TfMenuItem()
			{
				Id = $"tf-{Guid.NewGuid()}",
				IconCollapsed = TfConstants.GetIcon("People"),
				IconExpanded = TfConstants.GetIcon("People"),
				Selected = false,
				Url = "/layout-general",
				Text = "Sea dignissim"
			};
			var sub2 = new TfMenuItem()
			{
				Id = $"tf-{Guid.NewGuid()}",
				IconCollapsed = TfConstants.GetIcon("Table"),
				IconExpanded = TfConstants.GetIcon("Table"),
				Selected = false,
				Url = "/layout-general",
				Text = "Dolores justo dolor"
			};
			root.Items.Add(sub1);
			root.Items.Add(sub2);
			_menu.Add(root);
		}
		{
			var root = new TfMenuItem()
			{
				Id = $"tf-{Guid.NewGuid()}",
				IconCollapsed = TfConstants.GetIcon("People"),
				IconExpanded = TfConstants.GetIcon("People"),
				Selected = false,
				Url = "/layout-general",
				Text = "Dolores justo dolor"
			};
			var sub1 = new TfMenuItem()
			{
				Id = $"tf-{Guid.NewGuid()}",
				IconCollapsed = TfConstants.GetIcon("People"),
				IconExpanded = TfConstants.GetIcon("People"),
				Selected = false,
				Url = "/layout-general",
				Text = "Sea dignissim"
			};
			var sub2 = new TfMenuItem()
			{
				Id = $"tf-{Guid.NewGuid()}",
				IconCollapsed = TfConstants.GetIcon("Table"),
				IconExpanded = TfConstants.GetIcon("Table"),
				Selected = false,
				Url = "/layout-general",
				Text = "Dolores justo dolor"
			};
			root.Items.Add(sub1);
			root.Items.Add(sub2);
			_menu.Add(root);
		}

		#endregion

		_styles = TfColor.Red500.GenerateStylesForAccentColor();
	}

	private Task _onExpand(TfMenuItem item, bool expand)
	{
		item.Expanded = expand;
		StateHasChanged();
		return Task.CompletedTask;
	}

}