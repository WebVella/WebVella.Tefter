@namespace WebVella.Tefter.UI.Addons
@inherits TfLocalizedViewColumnComponent

<FluentGrid>
	<FluentGridItem xs="12">
		<FluentTextField Label="@LOC("Confirmation message")"
		                 Value="@Settings.ChangeConfirmationMessage" Style="width:100%"
		                 ValueChanged=@((x) => _onSettingsChangedAsync(nameof(Settings.ChangeConfirmationMessage), x))
		                 Placeholder="@LOC("empty for no confirmation")"/>
		<TucValidationMessage Field="@(nameof(Settings.ChangeConfirmationMessage))" Errors="ValidationErrors"/>
	</FluentGridItem>
</FluentGrid>
<FluentGrid>
	<FluentGridItem xs="12">
		<FluentTextField Label="@LOC("Not selected text")"
		                 Value="@Settings.NotSelectedString" Style="width:100%"
		                 ValueChanged=@((x) => _onSettingsChangedAsync(nameof(Settings.NotSelectedString), x))
		                 Placeholder="@LOC("empty for no confirmation")"/>
		<TucValidationMessage Field="@(nameof(Settings.NotSelectedString))" Errors="ValidationErrors"/>
	</FluentGridItem>
</FluentGrid>
<FluentDivider Style="margin:1rem 0"/>
<FluentGrid>
	<FluentGridItem xs="12">
		<FluentInputLabel Label="@LOC("Options source type")"/>
		<FluentRadioGroup Name="source" Value=@Settings.Source
		                  ValueChanged="@((x) => _onSettingsChangedAsync(nameof(Settings.Source), x))"
		                  TValue="TfSelectViewColumnTypeSettingsSourceType">
			<FluentRadio Value="@TfSelectViewColumnTypeSettingsSourceType.ManuallySet">
				@TfSelectViewColumnTypeSettingsSourceType.ManuallySet.ToDescriptionString()
			</FluentRadio>
			<FluentRadio Value="@TfSelectViewColumnTypeSettingsSourceType.SpaceData">
				@TfSelectViewColumnTypeSettingsSourceType.SpaceData.ToDescriptionString()
			</FluentRadio>
		</FluentRadioGroup>
	</FluentGridItem>
</FluentGrid>
@if (Settings.Source == TfSelectViewColumnTypeSettingsSourceType.ManuallySet)
{
	<FluentGrid>
		<FluentGridItem xs="12">
			<FluentTextArea Label="@LOC("Options")" Resize="@TextAreaResize.Vertical"
			                Value="@Settings.OptionsString" Style="width:100%;" Rows="7"
			                ValueChanged=@((x) => _onSettingsChangedAsync(nameof(Settings.OptionsString), x))/>
			<TucValidationMessage Field="@(nameof(Settings.OptionsString))" Errors="ValidationErrors"/>
			<div class="tf-input-description">
				@((MarkupString)LOC(@"Options separated by new line. Each option supports comma separated settings:
		<br/>*value - required, text, converted automatically to column data type
		<br/>*label - text
		<br/>*iconName - text,fluent icon name
		<br/>*color - string or int. String is css color value, named color or TfColor value as string. Int is converted to enum of TfColor
		<br/>*backgroundColor - string or int. String is css color value, named color or TfColor value as string. Int is converted to enum of TfColor
		<br/>*hideLabel - text, converted to boolean"))
			</div>
		</FluentGridItem>
	</FluentGrid>
}
else if (Settings.Source == TfSelectViewColumnTypeSettingsSourceType.SpaceData)
{
	<FluentGrid>
		<FluentGridItem xs="6">
			<TucSelect TOption="TfDataset?"
			           SelectedOptionChanged="@((x) => _datasetChangedAsync(x))"
			           OptionSelected="@((x) => x?.Id == SelectedDataset?.Id)"
			           OptionValue="((x)=> x?.Id.ToString())"
			           OptionText="((x)=> x?.Name)" Items="@DatasetOptions"/>
			<TucValidationMessage Field="@(nameof(Settings.DatasetId))" Errors="ValidationErrors"/>
		</FluentGridItem>
		<FluentGridItem xs="6">
			@SelectedDataset?.Name
		</FluentGridItem>
	</FluentGrid>
	<FluentGrid>
		<FluentGridItem xs="6">
			<FluentTextField Label="@LOC("Value column name")"
			                 Value="@Settings.SpaceDataValueColumnName" Style="width:100%;"
			                 ValueChanged=@((x) => _onSettingsChangedAsync(nameof(Settings.SpaceDataValueColumnName), x))/>
			<div class="tf-input-description">@LOC("any column data")</div>
			<TucValidationMessage Field="@(nameof(Settings.SpaceDataValueColumnName))" Errors="ValidationErrors"/>
		</FluentGridItem>
		<FluentGridItem xs="6">
			<FluentTextField Label="@LOC("Label column name")"
			                 Value="@Settings.SpaceDataLabelColumnName" Style="width:100%;"
			                 ValueChanged=@((x) => _onSettingsChangedAsync(nameof(Settings.SpaceDataLabelColumnName), x))/>
			<div class="tf-input-description">@LOC("column data string or object that will be case to string")</div>
			<TucValidationMessage Field="@(nameof(Settings.SpaceDataLabelColumnName))" Errors="ValidationErrors"/>
		</FluentGridItem>
	</FluentGrid>
	<FluentGrid>
		<FluentGridItem xs="6">
			<FluentTextField Label="@LOC("Color column name")"
			                 Value="@Settings.SpaceDataColorColumnName" Style="width:100%;"
			                 ValueChanged=@((x) => _onSettingsChangedAsync(nameof(Settings.SpaceDataColorColumnName), x))/>
			<div
				class="tf-input-description">@LOC("column data string or int. String is css color value. Int is converted to enum of TfColor")</div>
			<TucValidationMessage Field="@(nameof(Settings.SpaceDataColorColumnName))" Errors="ValidationErrors"/>
		</FluentGridItem>
		<FluentGridItem xs="6">
			<FluentTextField Label="@LOC("Background color column name")"
			                 Value="@Settings.SpaceDataBackgroundColorColumnName" Style="width:100%;"
			                 ValueChanged=@((x) => _onSettingsChangedAsync(nameof(Settings.SpaceDataBackgroundColorColumnName), x))/>
			<div
				class="tf-input-description">@LOC("column datastring or int. String is css color value. Int is converted to enum of TfColor")</div>
			<TucValidationMessage Field="@(nameof(Settings.SpaceDataBackgroundColorColumnName))" Errors="ValidationErrors"/>
		</FluentGridItem>
	</FluentGrid>
	<FluentGrid>
		<FluentGridItem xs="6">
			<FluentTextField Label="@LOC("Icon column name")"
			                 Value="@Settings.SpaceDataIconColumnName" Style="width:100%;"
			                 ValueChanged=@((x) => _onSettingsChangedAsync(nameof(Settings.SpaceDataIconColumnName), x))/>
			<div class="tf-input-description">@LOC("column datastring, fluent icon name")</div>
			<TucValidationMessage Field="@(nameof(Settings.SpaceDataIconColumnName))" Errors="ValidationErrors"/>
		</FluentGridItem>
		<FluentGridItem xs="6"></FluentGridItem>
	</FluentGrid>
}
