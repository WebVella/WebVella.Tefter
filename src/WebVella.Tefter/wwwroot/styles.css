html:root {
  --tf-black: #000;
  --tf-white: #fff;
  --tf-red-50: oklch(97.1% 0.013 17.38);
  --tf-orange-50: oklch(98% 0.016 73.684);
  --tf-amber-50: oklch(98.7% 0.022 95.277);
  --tf-yellow-50: oklch(98.7% 0.026 102.212);
  --tf-lime-50: oklch(98.6% 0.031 120.757);
  --tf-green-50: oklch(98.2% 0.018 155.826);
  --tf-emerald-50: oklch(97.9% 0.021 166.113);
  --tf-teal-50: oklch(98.4% 0.014 180.72);
  --tf-cyan-50: oklch(98.4% 0.019 200.873);
  --tf-sky-50: oklch(97.7% 0.013 236.62);
  --tf-red-100: oklch(93.6% 0.032 17.717);
  --tf-blue-50: oklch(97% 0.014 254.604);
  --tf-red-200: oklch(88.5% 0.062 18.334);
  --tf-indigo-50: oklch(96.2% 0.018 272.314);
  --tf-red-300: oklch(80.8% 0.114 19.571);
  --tf-violet-50: oklch(96.9% 0.016 293.756);
  --tf-red-400: oklch(70.4% 0.191 22.216);
  --tf-purple-50: oklch(97.7% 0.014 308.299);
  --tf-red-500: oklch(63.7% 0.237 25.331);
  --tf-fuchsia-50: oklch(97.7% 0.017 320.058);
  --tf-red-600: oklch(57.7% 0.245 27.325);
  --tf-pink-50: oklch(97.1% 0.014 343.198);
  --tf-red-700: oklch(50.5% 0.213 27.518);
  --tf-rose-50: oklch(96.9% 0.015 12.422);
  --tf-red-800: oklch(44.4% 0.177 26.899);
  --tf-slate-50: oklch(98.4% 0.003 247.858);
  --tf-red-900: oklch(39.6% 0.141 25.723);
  --tf-red-950: oklch(0.258 0.092 26.042);
  --tf-gray-50: oklch(98.5% 0.002 247.839);
  --tf-zinc-50: oklch(98.5% 0 0);
  --tf-orange-100: oklch(95.4% 0.038 75.164);
  --tf-neutral-50: oklch(98.5% 0 0);
  --tf-orange-200: oklch(90.1% 0.076 70.697);
  --tf-stone-50: oklch(98.5% 0.001 106.423);
  --tf-orange-300: oklch(83.7% 0.128 66.29);
  --tf-orange-400: oklch(75% 0.183 55.934);
  --tf-orange-500: oklch(70.5% 0.213 47.604);
  --tf-orange-600: oklch(64.6% 0.222 41.116);
  --tf-orange-700: oklch(55.3% 0.195 38.402);
  --tf-orange-800: oklch(47% 0.157 37.304);
  --tf-orange-900: oklch(40.8% 0.123 38.172);
  --tf-orange-950: oklch(26.6% 0.079 36.259);
  --tf-amber-100: oklch(96.2% 0.059 95.617);
  --tf-amber-200: oklch(92.4% 0.12 95.746);
  --tf-amber-300: oklch(87.9% 0.169 91.605);
  --tf-amber-400: oklch(82.8% 0.189 84.429);
  --tf-amber-500: oklch(76.9% 0.188 70.08);
  --tf-amber-600: oklch(66.6% 0.179 58.318);
  --tf-amber-700: oklch(55.5% 0.163 48.998);
  --tf-amber-800: oklch(47.3% 0.137 46.201);
  --tf-amber-900: oklch(41.4% 0.112 45.904);
  --tf-amber-950: oklch(27.9% 0.077 45.635);
  --tf-yellow-100: oklch(97.3% 0.071 103.193);
  --tf-yellow-200: oklch(94.5% 0.129 101.54);
  --tf-yellow-300: oklch(90.5% 0.182 98.111);
  --tf-yellow-400: oklch(85.2% 0.199 91.936);
  --tf-yellow-500: oklch(79.5% 0.184 86.047);
  --tf-yellow-600: oklch(68.1% 0.162 75.834);
  --tf-yellow-700: oklch(55.4% 0.135 66.442);
  --tf-yellow-800: oklch(47.6% 0.114 61.907);
  --tf-yellow-900: oklch(42.1% 0.095 57.708);
  --tf-yellow-950: oklch(28.6% 0.066 53.813);
  --tf-lime-100: oklch(96.7% 0.067 122.328);
  --tf-lime-200: oklch(93.8% 0.127 124.321);
  --tf-lime-300: oklch(89.7% 0.196 126.665);
  --tf-lime-400: oklch(84.1% 0.238 128.85);
  --tf-lime-500: oklch(76.8% 0.233 130.85);
  --tf-lime-600: oklch(64.8% 0.2 131.684);
  --tf-lime-700: oklch(53.2% 0.157 131.589);
  --tf-lime-800: oklch(45.3% 0.124 130.933);
  --tf-lime-900: oklch(40.5% 0.101 131.063);
  --tf-lime-950: oklch(27.4% 0.072 132.109);
  --tf-green-100: oklch(96.2% 0.044 156.743);
  --tf-green-200: oklch(92.5% 0.084 155.995);
  --tf-green-300: oklch(87.1% 0.15 154.449);
  --tf-green-400: oklch(79.2% 0.209 151.711);
  --tf-green-500: oklch(72.3% 0.219 149.579);
  --tf-green-600: oklch(62.7% 0.194 149.214);
  --tf-green-700: oklch(52.7% 0.154 150.069);
  --tf-green-800: oklch(44.8% 0.119 151.328);
  --tf-green-900: oklch(39.3% 0.095 152.535);
  --tf-green-950: oklch(26.6% 0.065 152.934);
  --tf-emerald-100: oklch(95% 0.052 163.051);
  --tf-emerald-200: oklch(90.5% 0.093 164.15);
  --tf-emerald-300: oklch(84.5% 0.143 164.978);
  --tf-emerald-400: oklch(76.5% 0.177 163.223);
  --tf-emerald-500: oklch(69.6% 0.17 162.48);
  --tf-emerald-600: oklch(59.6% 0.145 163.225);
  --tf-emerald-700: oklch(50.8% 0.118 165.612);
  --tf-emerald-800: oklch(43.2% 0.095 166.913);
  --tf-emerald-900: oklch(37.8% 0.077 168.94);
  --tf-emerald-950: oklch(26.2% 0.051 172.552);
  --tf-teal-100: oklch(95.3% 0.051 180.801);
  --tf-teal-200: oklch(91% 0.096 180.426);
  --tf-teal-300: oklch(85.5% 0.138 181.071);
  --tf-teal-400: oklch(77.7% 0.152 181.912);
  --tf-teal-500: oklch(70.4% 0.14 182.503);
  --tf-teal-600: oklch(60% 0.118 184.704);
  --tf-teal-700: oklch(51.1% 0.096 186.391);
  --tf-teal-800: oklch(43.7% 0.078 188.216);
  --tf-teal-900: oklch(38.6% 0.063 188.416);
  --tf-teal-950: oklch(27.7% 0.046 192.524);
  --tf-cyan-100: oklch(95.6% 0.045 203.388);
  --tf-cyan-200: oklch(91.7% 0.08 205.041);
  --tf-cyan-300: oklch(86.5% 0.127 207.078);
  --tf-cyan-400: oklch(78.9% 0.154 211.53);
  --tf-cyan-500: oklch(71.5% 0.143 215.221);
  --tf-cyan-600: oklch(60.9% 0.126 221.723);
  --tf-cyan-700: oklch(52% 0.105 223.128);
  --tf-cyan-800: oklch(45% 0.085 224.283);
  --tf-cyan-900: oklch(39.8% 0.07 227.392);
  --tf-cyan-950: oklch(30.2% 0.056 229.695);
  --tf-sky-100: oklch(95.1% 0.026 236.824);
  --tf-sky-200: oklch(90.1% 0.058 230.902);
  --tf-sky-300: oklch(82.8% 0.111 230.318);
  --tf-sky-400: oklch(74.6% 0.16 232.661);
  --tf-sky-500: oklch(68.5% 0.169 237.323);
  --tf-sky-600: oklch(58.8% 0.158 241.966);
  --tf-sky-700: oklch(50% 0.134 242.749);
  --tf-sky-800: oklch(44.3% 0.11 240.79);
  --tf-sky-900: oklch(39.1% 0.09 240.876);
  --tf-sky-950: oklch(29.3% 0.066 243.157);
  --tf-blue-100: oklch(93.2% 0.032 255.585);
  --tf-blue-200: oklch(88.2% 0.059 254.128);
  --tf-blue-300: oklch(80.9% 0.105 251.813);
  --tf-blue-400: oklch(70.7% 0.165 254.624);
  --tf-blue-500: oklch(62.3% 0.214 259.815);
  --tf-blue-600: oklch(54.6% 0.245 262.881);
  --tf-blue-700: oklch(48.8% 0.243 264.376);
  --tf-blue-800: oklch(42.4% 0.199 265.638);
  --tf-blue-900: oklch(37.9% 0.146 265.522);
  --tf-blue-950: oklch(28.2% 0.091 267.935);
  --tf-indigo-100: oklch(93% 0.034 272.788);
  --tf-indigo-200: oklch(87% 0.065 274.039);
  --tf-indigo-300: oklch(78.5% 0.115 274.713);
  --tf-indigo-400: oklch(67.3% 0.182 276.935);
  --tf-indigo-500: oklch(58.5% 0.233 277.117);
  --tf-indigo-600: oklch(51.1% 0.262 276.966);
  --tf-indigo-700: oklch(45.7% 0.24 277.023);
  --tf-indigo-800: oklch(39.8% 0.195 277.366);
  --tf-indigo-900: oklch(35.9% 0.144 278.697);
  --tf-indigo-950: oklch(25.7% 0.09 281.288);
  --tf-violet-100: oklch(94.3% 0.029 294.588);
  --tf-violet-200: oklch(89.4% 0.057 293.283);
  --tf-violet-300: oklch(81.1% 0.111 293.571);
  --tf-violet-400: oklch(70.2% 0.183 293.541);
  --tf-violet-500: oklch(60.6% 0.25 292.717);
  --tf-violet-600: oklch(54.1% 0.281 293.009);
  --tf-violet-700: oklch(49.1% 0.27 292.581);
  --tf-violet-800: oklch(43.2% 0.232 292.759);
  --tf-violet-900: oklch(38% 0.189 293.745);
  --tf-violet-950: oklch(28.3% 0.141 291.089);
  --tf-purple-100: oklch(94.6% 0.033 307.174);
  --tf-purple-200: oklch(90.2% 0.063 306.703);
  --tf-purple-300: oklch(82.7% 0.119 306.383);
  --tf-purple-400: oklch(71.4% 0.203 305.504);
  --tf-purple-500: oklch(62.7% 0.265 303.9);
  --tf-purple-600: oklch(55.8% 0.288 302.321);
  --tf-purple-700: oklch(49.6% 0.265 301.924);
  --tf-purple-800: oklch(43.8% 0.218 303.724);
  --tf-purple-900: oklch(38.1% 0.176 304.987);
  --tf-purple-950: oklch(29.1% 0.149 302.717);
  --tf-fuchsia-100: oklch(95.2% 0.037 318.852);
  --tf-fuchsia-200: oklch(90.3% 0.076 319.62);
  --tf-fuchsia-300: oklch(83.3% 0.145 321.434);
  --tf-fuchsia-400: oklch(74% 0.238 322.16);
  --tf-fuchsia-500: oklch(66.7% 0.295 322.15);
  --tf-fuchsia-600: oklch(59.1% 0.293 322.896);
  --tf-fuchsia-700: oklch(51.8% 0.253 323.949);
  --tf-fuchsia-800: oklch(45.2% 0.211 324.591);
  --tf-fuchsia-900: oklch(40.1% 0.17 325.612);
  --tf-fuchsia-950: oklch(29.3% 0.136 325.661);
  --tf-pink-100: oklch(94.8% 0.028 342.258);
  --tf-pink-200: oklch(89.9% 0.061 343.231);
  --tf-pink-300: oklch(82.3% 0.12 346.018);
  --tf-pink-400: oklch(71.8% 0.202 349.761);
  --tf-pink-500: oklch(65.6% 0.241 354.308);
  --tf-pink-600: oklch(59.2% 0.249 0.584);
  --tf-pink-700: oklch(52.5% 0.223 3.958);
  --tf-pink-800: oklch(45.9% 0.187 3.815);
  --tf-pink-900: oklch(40.8% 0.153 2.432);
  --tf-pink-950: oklch(28.4% 0.109 3.907);
  --tf-rose-100: oklch(94.1% 0.03 12.58);
  --tf-rose-200: oklch(89.2% 0.058 10.001);
  --tf-rose-300: oklch(81% 0.117 11.638);
  --tf-rose-400: oklch(71.2% 0.194 13.428);
  --tf-rose-500: oklch(64.5% 0.246 16.439);
  --tf-rose-600: oklch(58.6% 0.253 17.585);
  --tf-rose-700: oklch(51.4% 0.222 16.935);
  --tf-rose-800: oklch(45.5% 0.188 13.697);
  --tf-rose-900: oklch(41% 0.159 10.272);
  --tf-rose-950: oklch(27.1% 0.105 12.094);
  --tf-slate-100: oklch(96.8% 0.007 247.896);
  --tf-slate-200: oklch(92.9% 0.013 255.508);
  --tf-slate-300: oklch(86.9% 0.022 252.894);
  --tf-slate-400: oklch(70.4% 0.04 256.788);
  --tf-slate-500: oklch(55.4% 0.046 257.417);
  --tf-slate-600: oklch(44.6% 0.043 257.281);
  --tf-slate-700: oklch(37.2% 0.044 257.287);
  --tf-slate-800: oklch(27.9% 0.041 260.031);
  --tf-slate-900: oklch(20.8% 0.042 265.755);
  --tf-slate-950: oklch(12.9% 0.042 264.695);
  --tf-gray-100: oklch(96.7% 0.003 264.542);
  --tf-gray-200: oklch(92.8% 0.006 264.531);
  --tf-gray-300: oklch(87.2% 0.01 258.338);
  --tf-gray-400: oklch(70.7% 0.022 261.325);
  --tf-gray-500: oklch(55.1% 0.027 264.364);
  --tf-gray-600: oklch(44.6% 0.03 256.802);
  --tf-gray-700: oklch(37.3% 0.034 259.733);
  --tf-gray-800: oklch(27.8% 0.033 256.848);
  --tf-gray-900: oklch(21% 0.034 264.665);
  --tf-gray-950: oklch(13% 0.028 261.692);
  --tf-zinc-100: oklch(96.7% 0.001 286.375);
  --tf-zinc-200: oklch(92% 0.004 286.32);
  --tf-zinc-300: oklch(87.1% 0.006 286.286);
  --tf-zinc-400: oklch(70.5% 0.015 286.067);
  --tf-zinc-500: oklch(55.2% 0.016 285.938);
  --tf-zinc-600: oklch(44.2% 0.017 285.786);
  --tf-zinc-700: oklch(37% 0.013 285.805);
  --tf-zinc-800: oklch(27.4% 0.006 286.033);
  --tf-zinc-900: oklch(21% 0.006 285.885);
  --tf-zinc-950: oklch(14.1% 0.005 285.823);
  --tf-neutral-100: oklch(97% 0 0);
  --tf-neutral-200: oklch(92.2% 0 0);
  --tf-neutral-300: oklch(87% 0 0);
  --tf-neutral-400: oklch(70.8% 0 0);
  --tf-neutral-500: oklch(55.6% 0 0);
  --tf-neutral-600: oklch(43.9% 0 0);
  --tf-neutral-700: oklch(37.1% 0 0);
  --tf-neutral-800: oklch(26.9% 0 0);
  --tf-neutral-900: oklch(20.5% 0 0);
  --tf-neutral-950: oklch(14.5% 0 0);
  --tf-stone-100: oklch(97% 0.001 106.424);
  --tf-stone-200: oklch(92.3% 0.003 48.717);
  --tf-stone-300: oklch(86.9% 0.005 56.366);
  --tf-stone-400: oklch(70.9% 0.01 56.259);
  --tf-stone-500: oklch(55.3% 0.013 58.071);
  --tf-stone-600: oklch(44.4% 0.011 73.639);
  --tf-stone-700: oklch(37.4% 0.01 67.558);
  --tf-stone-800: oklch(26.8% 0.007 34.298);
  --tf-stone-900: oklch(21.6% 0.006 56.043);
  --tf-stone-950: oklch(14.7% 0.004 49.25);
}
html:root {
  color-scheme: dark;
  --tf-topbar-height: 50px;
  --tf-aside-footer-height: 30px;
  --tf-space-header-height: var(--tf-topbar-height);
  --tf-space-actions-height: 60px;
  --tf-page-header-height: 50px;
  --tf-page-tabs-height: 50px;
  --tf-aside-width: 220px;
  --tf-padding: calc((10 + (var(--design-unit) * 2 * var(--density))) * 1px);
  --tf-card-space: calc(var(--tf-padding) * 2);
}
/*
 * Microsoft Fluent UI Blazor library - Reboot v1.0.2
 * Copyright 2024 Microsoft
 *
 * Normalization of HTML elements, copied and ajusted from Bootstrap's Reboot which is based on Normalize.css
 * Licensed under MIT (https://github.com/microsoft/fluentui-blazor/blob/main/LICENSE)
 *
 * Normalize is licensed under MIT (https://github.com/necolas/normalize.css/blob/master/LICENSE.md)
 * Bootstrap is licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 */
* {
  box-sizing: border-box;
}
@media (prefers-reduced-motion: no-preference) {
  :root {
    scroll-behavior: smooth;
  }
}
html {
  font-family: var(--body-font);
}
body,
.body {
  margin: 0;
  font-family: var(--body-font);
  font-size: var(--type-ramp-base-font-size);
  line-height: var(--type-ramp-base-line-height);
  font-weight: var(--font-weight);
  color: var(--neutral-foreground-rest);
  background-color: var(--neutral-fill-layer-rest);
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
body[data-theme="light"],
body[data-theme="system-light"] {
  color-scheme: light;
}
body[data-theme="dark"],
body[data-theme="system-dark"] {
  color-scheme: dark;
}
hr {
  margin: 1rem 0;
  color: inherit;
  border: 0;
  border-top: 1px solid;
  opacity: 0.25;
}
h6,
h5,
h4,
h3,
h2,
h1 {
  margin-top: 0;
  margin-bottom: 0.75rem;
  font-weight: 500;
  font-family: inherit;
}
h1 {
  font-size: var(--type-ramp-plus-5-font-size);
  line-height: var(--type-ramp-plus-5-line-height);
}
h2 {
  font-size: var(--type-ramp-plus-4-font-size);
  line-height: var(--type-ramp-plus-4-line-height);
}
h3 {
  font-size: var(--type-ramp-plus-3-font-size);
  line-height: var(--type-ramp-plus-3-line-height);
}
h4 {
  font-size: var(--type-ramp-plus-2-font-size);
  line-height: var(--type-ramp-plus-2-line-height);
}
h5 {
  font-size: var(--type-ramp-plus-1-font-size);
  line-height: var(--type-ramp-plus-1-line-height);
}
h6 {
  font-size: var(--type-ramp-base-font-size);
  line-height: var(--type-ramp-base-line-height);
}
p {
  font-size: var(--type-ramp-base-font-size);
  line-height: var(--type-ramp-base-line-height);
  font-weight: 400;
  margin-top: 0;
  margin-bottom: 1rem;
  font-family: var(--body-font);
}
blockquote {
  border-left: 5px solid var(--accent-fill-rest);
  border-right: none;
  font-size: var(--type-ramp-base-font-size);
  font-style: italic;
  padding: 2px 15px;
}
[dir='rtl'] blockquote {
  border-left: none;
  border-right: 5px solid var(--accent-fill-rest);
}
abbr[title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
}
address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}
ol,
ul {
  padding-left: 2rem;
}
ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}
ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}
dt {
  font-weight: 700;
}
dd {
  margin-bottom: 0.5rem;
  margin-left: 0;
}
/*
blockquote {
    margin: 0 0 1rem;
}*/
b,
strong {
  font-weight: bolder;
}
small {
  font-size: 0.875em;
}
mark {
  padding: 0;
  background-color: var(--highlight-bg);
}
sub,
sup {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
a {
  color: var(--accent-foreground-rest);
  text-decoration: underline;
}
a:hover {
  color: var(--accent-foreground-hover);
}
a:active {
  color: var(--accent-foreground-active);
}
a:not([href]):not([class]),
a:not([href]):not([class]):hover {
  color: inherit;
  text-decoration: none;
}
pre,
code,
kbd,
samp {
  font-family: var(--font-monospace);
  font-size: 1em;
}
pre {
  display: block;
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  font-size: 0.875em;
}
pre code {
  font-size: inherit;
  color: inherit;
  word-break: normal;
}
code {
  font-size: 0.875em;
  color: var(--accent-foreground-rest);
  word-wrap: break-word;
}
a > code {
  color: inherit;
}
kbd {
  padding: 0.1875rem 0.375rem;
  font-size: 0.875em;
  color: var(--neutral-base-color);
  background-color: var(--neutral-fill-layer-rest);
  border-radius: 0.25rem;
}
kbd kbd {
  padding: 0;
  font-size: 1em;
}
figure {
  margin: 0 0 1rem;
}
/*img,
svg {
    vertical-align: middle;
}*/
table {
  font-size: var(--type-ramp-base-font-size);
  line-height: var(--type-ramp-base-line-height);
  font-weight: 400;
  margin-top: 0;
  margin-bottom: 1rem;
  caption-side: bottom;
  border-collapse: collapse;
}
caption {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: #6c757d;
  text-align: left;
}
th {
  text-align: inherit;
  text-align: -webkit-match-parent;
}
thead,
tbody,
tfoot,
tr,
td,
th {
  border-color: inherit;
  border-style: solid;
  border-width: 0;
}
label {
  display: inline-block;
}
button {
  border-radius: var(--control-corner-radius);
}
button:focus:not(:focus-visible) {
  outline: 0;
}
input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  border: 1px solid black;
}
button,
select {
  text-transform: none;
}
[role=button] {
  cursor: pointer;
}
select {
  word-wrap: normal;
}
select:disabled {
  opacity: 1;
}
[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {
  display: none !important;
}
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}
button:not(:disabled),
[type=button]:not(:disabled),
[type=reset]:not(:disabled),
[type=submit]:not(:disabled) {
  cursor: pointer;
}
::-moz-focus-inner {
  padding: 0;
  border-style: none;
}
textarea {
  resize: vertical;
}
fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}
legend {
  float: left;
  width: 100%;
  padding: 0;
  margin-bottom: 0.5rem;
  font-size: calc(1.275rem + 0.3vw);
  line-height: inherit;
}
@media (min-width: 1200px) {
  legend {
    font-size: 1.5rem;
  }
}
legend + * {
  clear: left;
}
::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
  padding: 0;
}
::-webkit-inner-spin-button {
  height: auto;
}
[type=search] {
  outline-offset: -2px;
  -webkit-appearance: textfield;
}
/* rtl:raw:
[type="tel"],
[type="url"],
[type="email"],
[type="number"] {
  direction: ltr;
}
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-color-swatch-wrapper {
  padding: 0;
}
::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}
::file-selector-button {
  font: inherit;
  -webkit-appearance: button;
}
output {
  display: inline-block;
}
iframe {
  border: 0;
}
summary {
  display: list-item;
  cursor: pointer;
}
progress {
  vertical-align: baseline;
}
[hidden] {
  display: none !important;
}
/*Colors*/
html:root {
  --success: var(--tf-green-500);
  --warning: var(--tf-amber-500);
  --error: var(--tf-red-500);
  --info: var(--tf-sky-500);
  --highlight-bg: var(--tf-yellow-500);
  --neutral-layer-floating: var(--neutral-layer-2);
}
/* Inputs */
.fluent-input-label,
.tf-input-description {
  color: var(--neutral-foreground-hint) !important;
}
fluent-text-field.with-prefix::part(start) {
  color: var(--tf-font-color-mute);
}
fluent-text-field.with-prefix::part(control) {
  padding-left: 0;
}
fluent-switch::part(label) {
  margin-inline-end: 0;
}
fluent-select fluent-option {
  --neutral-fill-stealth-rest: transparent;
  --neutral-fill-stealth-hover: color-mix(in srgb, var(--fill-color), var(--accent-fill-rest) 10%);
}
.listbox {
  z-index: 20;
  position: relative;
}
/*Badge*/
.tf-input-badge {
  border-radius: calc(var(--control-corner-radius) * 1px);
}
.tf-input-badge::part(control) {
  padding: 7px 5px;
}
.tf-input-badge--error {
  background-color: var(--error);
  color: var(--foreground-on-accent-rest);
}
/*Message bar*/
div[class^='fluent-messagebar'],
.fluent-messagebar-notification,
.fluent-messagebar-message {
  animation: none !important;
}
.fluent-messagebar .title {
  display: block;
  font-size: var(--type-ramp-plus-1-font-size);
  line-height: var(--type-ramp-plus-1-line-height);
}
.fluent-messagebar.intent-success {
  --success: var(--tf-green-500);
  border-color: var(--tf-green-200) !important;
  background-color: var(--tf-green-50) !important;
}
.fluent-messagebar.intent-success.dark {
  border-color: var(--tf-green-800) !important;
  background-color: var(--tf-green-950) !important;
}
.fluent-messagebar.intent-warning {
  --warning: var(--tf-amber-500);
  border-color: var(--tf-amber-200) !important;
  background-color: var(--tf-amber-50) !important;
}
.fluent-messagebar.intent-warning.dark {
  border-color: var(--tf-amber-800) !important;
  background-color: var(--tf-amber-950) !important;
}
.fluent-messagebar.intent-error {
  --error: var(--tf-red-500);
  border-color: var(--tf-red-200) !important;
  background-color: var(--tf-red-50) !important;
}
.fluent-messagebar.intent-error.dark {
  border-color: var(--tf-red-800) !important;
  background-color: var(--tf-red-950) !important;
}
.fluent-messagebar.intent-info {
  border-color: var(--tf-sky-200) !important;
  background-color: var(--tf-sky-50) !important;
  --info: var(--tf-sky-500);
}
.fluent-messagebar.intent-info.dark {
  border-color: var(--tf-sky-800) !important;
  background-color: var(--tf-sky-950) !important;
}
/*Menu*/
fluent-menu {
  --neutral-layer-floating: var(--neutral-layer-2);
}
fluent-menu-item::part(start) {
  display: flex;
  align-items: center;
}
/*Dialog*/
.fluent-dialog-main::part(control) {
  --dialog-padding: var(--tf-padding) !important;
}
.fluent-dialog-main.right::part(control),
.fluent-dialog-main.left::part(control) {
  --dialog-padding: 0px;
}
.tf-modal-no-body-padding::part(control) {
  --dialog-padding: 0px !important;
}
.tf-card {
  border: 1px solid var(--neutral-stroke-rest);
  border-radius: calc(var(--layer-corner-radius) * 1px);
  background: var(--neutral-fill-secondary-active);
  padding: var(--tf-padding);
  box-shadow: var(--elevation-shadow-card-active);
  display: flex;
  flex-flow: column;
}
.tf-card__title {
  flex: 0 0 auto;
  background: transparent;
  border-radius: 0.5rem;
  margin-bottom: 0;
  font-size: var(--type-ramp-plus-2-font-size);
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.tf-card__title__left {
  flex: 0 0 auto;
  display: grid;
  grid-gap: 10px;
  grid-auto-flow: column;
}
.tf-card__title__right {
  flex: 0 0 auto;
  flex-wrap: nowrap;
  padding-left: 1rem;
  display: grid;
  grid-gap: 10px;
  grid-auto-flow: column;
}
.tf-card__subtitle {
  color: var(--neutral-foreground-hint);
  font-size: var(--type-ramp-minus-1-font-size);
}
.tf-card__title + .tf-card__content {
  padding-top: calc(var(--tf-padding) * 2);
}
.tf-card + .tf-card {
  margin-top: var(--tf-padding);
}
.tf-card--clickable {
  cursor: pointer;
}
.tf-card--clickable:hover {
  background: var(--neutral-fill-hover);
}
.tf-card__content {
  flex: 1 1 auto;
}
.tf-card__content fluent-anchor.stealth {
  --neutral-fill-stealth-rest: var(--neutral-foreground-rest);
}
.tf-card__footer {
  flex: 0 0 auto;
  padding-top: 1rem;
}
.tf-card--filter .tf-card > .tf-card__title {
  padding: 5px 10px;
}
.tf-card--filter .tf-filter-manage__item__title {
  font-size: var(--type-ramp-base-font-size);
  font-weight: normal;
}
.tf-card--filter .tf-filter-manage__item__suffix {
  color: var(--neutral-foreground-hint);
  font-size: var(--type-ramp-base-font-size);
  font-weight: normal;
}
.tf-card--filter .tf-filter-manage .card-logical.tf-card {
  padding: 0;
  border-radius: 0;
}
.tf-card--filter .tf-filter-manage .card-logical.tf-card > .tf-card__title {
  background: var(--fill-color);
  border-bottom: 1px solid var(--neutral-stroke-rest);
  border-radius: 0;
}
.tf-card--filter .tf-filter-manage .card-logical.tf-card > .tf-card__content {
  margin: 10px;
  padding: 0;
}
.tf-card--filter .tf-filter-manage .card-rule.tf-card {
  padding: 0;
  border-radius: 0;
}
.tf-card--filter .tf-filter-manage .card-rule.tf-card > .tf-card__title {
  background: var(--fill-color);
  border-radius: 0;
}
.tf-card--filter .tf-filter-manage .card-rule.tf-card > .tf-card__content {
  margin: 10px;
  padding: 0;
}
.tf-card--filter .tf-filter-manage .tf-card--no-body .tf-card__content {
  display: none;
}
.tf-card fluent-badge {
  --neutral-fill-secondary-rest: light-dark(var(--neutral-layer-4), var(--neutral-layer-2));
}
.tf-console-box {
  padding: 10px;
  background: var(--neutral-layer-3);
  max-height: 350px;
  overflow-y: auto;
  font-family: monospace;
}
.tf-console-box__row {
  display: flex;
  margin-bottom: 5px;
}
.tf-console-box__row__date {
  flex: 0 0 auto;
  padding-right: 10px;
  color: var(--neutral-base-color);
}
.tf-console-box__row__message .error {
  color: var(--error);
}
.tf-console-box__row__message .warning {
  color: var(--warning);
}
.tf-drag-container {
  position: relative;
}
.tf-drag-container__nodrag {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  z-index: 9;
}
.tf-drag-container__drag {
  visibility: hidden;
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  overflow: hidden;
}
.tf-drag-container__drag .tf-drag-drop-input {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
}
.tf-drag-container--dragging .tf-drag-container__nodrag {
  visibility: hidden;
  display: none;
  z-index: 1;
  overflow: hidden;
  left: -100000px !important;
}
.tf-drag-container--dragging .tf-drag-container__drag {
  display: block;
  visibility: visible;
  z-index: 9;
}
.tf-editor .toolbar {
  margin-bottom: 0.25rem;
  display: flex;
  align-items: center;
}
.tf-editor .toolbar button {
  border-radius: calc(var(--control-corner-radius)*1px);
  background: transparent;
  /*border: calc(var(--stroke-width) * 1px) solid var(--neutral-stroke-rest);*/
  border: calc(var(--stroke-width) * 1px) solid transparent;
  line-height: var(--type-ramp-base-line-height);
  height: calc((var(--base-height-multiplier) + var(--density))*var(--design-unit)*1px);
  min-width: calc((var(--base-height-multiplier) + var(--density))*var(--design-unit)*1px);
  fill: currentcolor;
  font-size: var(--type-ramp-base-font-size);
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
.tf-editor .toolbar button:hover {
  border-color: var(--neutral-stroke-hover);
}
.tf-editor .toolbar button svg {
  fill: var(--neutral-base-color) !important;
  width: 14px !important;
}
.tf-editor .toolbar button.ql-active {
  color: var(--foreground-on-accent-rest) !important;
  background: var(--neutral-base-color);
}
.tf-editor .toolbar button.ql-active svg {
  fill: var(--foreground-on-accent-rest) !important;
}
.tf-editor .toolbar .separator {
  background: var(--neutral-stroke-rest);
  flex-shrink: 0;
  align-self: center;
  width: 1px;
  height: 20px;
  margin: 2px 4px;
  display: inline-block;
}
.tf-editor .editor-area .ql-editor {
  min-height: 60px;
  border-radius: calc(var(--control-corner-radius)*1px);
  background: var(--neutral-fill-input-rest);
  border: calc(var(--stroke-width) * 1px) solid var(--neutral-stroke-input-active);
  outline: none;
  padding: 5px 10px;
  max-height: 200px;
  position: relative;
}
.tf-editor .editor-area .ql-editor:active,
.tf-editor .editor-area .ql-editor:focus,
.tf-editor .editor-area .ql-editor:hover {
  border: 1px solid var(--neutral-stroke-strong-hover);
}
.tf-editor--readonly .tf-editor .editor-area .ql-editor:hover {
  border-color: var(--neutral-stroke-input-rest) !important;
}
.tf-editor .editor-area .ql-editor.ql-blank::before {
  color: var(--neutral-stroke-rest);
  left: 10px;
  right: 10px;
}
/*	::deep .ql-editor ol > li[data-list=bullet] {
		list-style: none;
		margin-left: -10px;
	}

		::deep .ql-editor ol > li[data-list=bullet]:before {
			content: '\2022';
			padding-right: 5px;
		}*/
@keyframes gridLoadingBar {
  0% {
    left: 0%;
    right: 100%;
    width: 0%;
  }
  10% {
    left: 0%;
    right: 75%;
    width: 25%;
  }
  90% {
    right: 0%;
    left: 75%;
    width: 25%;
  }
  100% {
    left: 100%;
    right: 0%;
    width: 0%;
  }
}
.tf-grid {
  --tf-grid-td-color: var(--neutral-foreground-rest);
  --tf-grid-td-fill: transparent;
  table-layout: fixed;
  min-width: 100%;
  border-width: 0;
  border-color: var(--neutral-stroke-rest);
  border-collapse: separate !important;
  border-spacing: 0 !important;
  margin-bottom: 0;
  border-bottom: 1px solid var(--neutral-stroke-rest);
  position: relative;
  z-index: 0;
}
.fluent-dialog-body .tf-grid,
.tf-card .tf-grid {
  border-left: 1px solid var(--neutral-stroke-rest);
  border-right: 1px solid var(--neutral-stroke-rest);
}
.tf-grid thead {
  position: relative;
  z-index: 1;
}
.tf-grid thead > tr:not(.tf-grid-thead-bkg):not(.tf-grid-thead-loading) {
  position: relative;
  z-index: 2;
}
.tf-grid thead > tr:not(.tf-grid-thead-bkg):not(.tf-grid-thead-loading):first-child > th {
  border-top: none;
}
.tf-grid thead tr > th,
.tf-grid thead tr > td {
  border: 1px solid var(--neutral-stroke-rest);
  font-weight: 600;
  min-width: 60px;
  position: relative;
  --tf-cell-padding: calc(((var(--design-unit) * 3) + var(--focus-stroke-width) - var(--stroke-width)) * 1px);
}
.tf-grid thead tr > th .resize-handle,
.tf-grid thead tr > td .resize-handle {
  display: none;
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 5px;
  background: var(--neutral-stroke-rest);
  content: "";
  cursor: col-resize;
}
.tf-grid thead tr > th:hover .resize-handle,
.tf-grid thead tr > td:hover .resize-handle,
.tf-grid thead tr > th.tf-resizing .resize-handle,
.tf-grid thead tr > td.tf-resizing .resize-handle {
  display: block;
}
.tf-grid thead tr > th.tf-resizing .resize-handle,
.tf-grid thead tr > td.tf-resizing .resize-handle,
.tf-grid thead tr > th .resize-handle:hover,
.tf-grid thead tr > td .resize-handle:hover {
  background: var(--accent-fill-rest);
}
.tf-grid thead tr > th .tf-column-action,
.tf-grid thead tr > td .tf-column-action {
  display: flex;
  visibility: hidden;
  position: absolute;
  right: 0;
  top: 50%;
  margin-top: -10px;
  width: 20px;
  height: 20px;
  overflow: hidden;
  border-radius: 5px;
  background: var(--neutral-fill-secondary-rest);
  content: "";
  cursor: pointer;
  --tf-caret-color: var(--neutral-foreground-focus);
  justify-content: center;
  align-items: center;
}
.tf-grid thead tr > th .tf-column-action svg,
.tf-grid thead tr > td .tf-column-action svg {
  --accent-fill-rest: var(--neutral-foreground-focus);
}
.tf-grid thead tr > th .tf-column-action:hover,
.tf-grid thead tr > td .tf-column-action:hover {
  visibility: visible;
  background: var(--accent-fill-rest) !important;
  --tf-caret-color: var(--tf-white);
}
.tf-grid thead tr > th .tf-column-action--open,
.tf-grid thead tr > td .tf-column-action--open {
  visibility: visible;
}
.tf-grid thead tr > th:hover .tf-column-action,
.tf-grid thead tr > td:hover .tf-column-action {
  visibility: visible;
  background: var(--neutral-fill-layer-alt-rest);
}
.tf-grid thead tr > th .tf-column-sort,
.tf-grid thead tr > td .tf-column-sort {
  right: var(--tf-cell-padding);
}
.tf-grid thead tr > th .tf-column-sort svg,
.tf-grid thead tr > td .tf-column-sort svg {
  display: block;
}
.tf-grid thead tr > th .tf-column-sort--descending,
.tf-grid thead tr > td .tf-column-sort--descending,
.tf-grid thead tr > th .tf-column-sort--ascending,
.tf-grid thead tr > td .tf-column-sort--ascending {
  visibility: visible;
}
.tf-grid thead tr > th .tf-column-sort__caret,
.tf-grid thead tr > td .tf-column-sort__caret,
.tf-grid thead tr > th .tf-column-sort__caret-down,
.tf-grid thead tr > td .tf-column-sort__caret-down,
.tf-grid thead tr > th .tf-column-sort__caret-up,
.tf-grid thead tr > td .tf-column-sort__caret-up {
  display: none;
}
.tf-grid thead tr > th .tf-column-sort--none .tf-column-sort__caret,
.tf-grid thead tr > td .tf-column-sort--none .tf-column-sort__caret {
  display: block;
}
.tf-grid thead tr > th .tf-column-sort--ascending .tf-column-sort__caret-up,
.tf-grid thead tr > td .tf-column-sort--ascending .tf-column-sort__caret-up {
  display: block;
}
.tf-grid thead tr > th .tf-column-sort--descending .tf-column-sort__caret-down,
.tf-grid thead tr > td .tf-column-sort--descending .tf-column-sort__caret-down {
  display: block;
}
.tf-grid thead tr > th .tf-column-manage,
.tf-grid thead tr > td .tf-column-manage {
  right: calc(var(--tf-cell-padding) + 25px);
}
.tf-grid thead tr > th,
.tf-grid thead tr > td {
  border-left-width: 0;
}
.tf-grid-thead-bkg {
  position: absolute;
  content: "";
  top: 0;
  bottom: 0;
  left: 1px;
  right: 0;
  z-index: 1;
  pointer-events: none;
  background: var(--fill-color);
}
.fluent-dialog-body .tf-grid-thead-bkg,
.tf-card .tf-grid-thead-bkg {
  background: var(--neutral-fill-rest);
}
.tf-grid-thead-loading {
  position: absolute;
  content: "";
  height: 3px;
  bottom: -1px;
  left: 0;
  right: 0;
  z-index: 10;
  pointer-events: none;
  background: linear-gradient(90deg, transparent 33%, var(--accent-fill-rest) 66%, transparent 100%);
  width: 0;
  animation: gridLoadingBar 2s linear infinite;
}
.tf-grid tbody {
  position: relative;
  z-index: 2;
  --neutral-fill-input-rest: var(--neutral-fill-input-active);
  --neutral-stroke-input-rest: var(--neutral-stroke-input-active);
  --neutral-fill-input-hover: var(--neutral-fill-input-focus);
  --neutral-stroke-input-hover: var(--neutral-stroke-input-focus);
}
.tf-grid tbody tr {
  /*            &.tf-grid-tr--selected .tf-grid-td--check::after {
                      background: var(--tf-amber-400);
                  }*/
}
.tf-grid tbody tr > th,
.tf-grid tbody tr > td {
  color: var(--tf-grid-td-color);
  border-bottom-width: 0;
  border-left-width: 0;
  border-right-width: 1px;
  border-top-width: 1px;
  position: relative;
  vertical-align: top;
}
.tf-grid tbody tr > th::before,
.tf-grid tbody tr > td::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  z-index: 0;
  border-radius: 0;
}
.tf-grid tbody tr > th > *,
.tf-grid tbody tr > td > * {
  position: relative;
}
.tf-grid tbody tr > th > .tf-grid-td-color,
.tf-grid tbody tr > td > .tf-grid-td-color {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  z-index: 0;
  border-radius: 0;
  background: var(--tf-grid-td-fill);
}
.tf-grid tbody tr > th > .tf-grid-td-selection,
.tf-grid tbody tr > td > .tf-grid-td-selection {
  display: none;
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  z-index: 0;
  border-radius: 0;
}
.tf-grid tbody tr > th > .tf-grid-td-hover,
.tf-grid tbody tr > td > .tf-grid-td-hover {
  display: none;
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  z-index: 0;
  border-radius: 0;
  background: var(--neutral-fill-hover);
}
.tf-grid tbody tr > th > div:not(.tf-grid-td-color):not(.tf-grid-td-selection):not(.tf-grid-td-hover),
.tf-grid tbody tr > td > div:not(.tf-grid-td-color):not(.tf-grid-td-selection):not(.tf-grid-td-hover) {
  border-radius: calc(var(--control-corner-radius) * 1px);
  /*white-space: nowrap;*/
  text-overflow: ellipsis;
  padding: calc((var(--design-unit) + var(--focus-stroke-width) - var(--stroke-width)) * 1px) calc(((var(--design-unit) * 3) + var(--focus-stroke-width) - var(--stroke-width)) * 1px);
  min-height: 32px;
}
.tf-grid tbody tr > th.multiline-text,
.tf-grid tbody tr > td.multiline-text {
  white-space: break-spaces;
}
.tf-grid tbody tr > th a,
.tf-grid tbody tr > td a {
  text-decoration: none;
}
.tf-grid tbody tr > th a:hover,
.tf-grid tbody tr > td a:hover {
  text-decoration: underline;
}
.tf-grid tbody tr > th .td-description,
.tf-grid tbody tr > td .td-description {
  font-size: var(--type-ramp-minus-1-font-size);
  color: var(--neutral-foreground-hint);
  white-space: initial;
}
.tf-grid tbody tr.tf-grid-tr--selected .tf-grid-td-selection {
  display: block;
}
.tf-grid tbody tr.tf-grid-tr--selected .tf-grid-td-hover {
  background: color-mix(in srgb, var(--neutral-fill-rest), var(--accent-fill-rest) 15%);
}
.tf-grid tbody tr:hover .tf-grid-td-hover {
  display: block;
}
.tf-grid tbody tr:last-child > th,
.tf-grid tbody tr:last-child > td {
  border-bottom: 1px solid var(--neutral-stroke-rest);
}
.tf-grid tbody tr.tf-grid-tr--edited td > div:not(.tf-grid-td-color):not(.tf-grid-td-selection):not(.tf-grid-td-hover) {
  padding-right: 3px !important;
  padding-left: 3px !important;
}
.tf-grid tbody tr.tf-grid-tr--edited .tf-grid-td--check::after {
  content: "";
  position: absolute;
  border-radius: 0 5px 5px 0;
  top: 2px;
  bottom: 2px;
  width: 5px;
  left: -1px;
  background: var(--warning);
}
.tf-grid > tbody > div + tr > td,
.tf-grid > tbody > div + tr > th {
  border-top-width: 0;
}
.tf-grid td,
.tf-grid th {
  border-width: 1px;
  border-style: solid;
}
.tf-grid td > div,
.tf-grid th > div {
  display: flex;
  justify-content: start;
  align-items: start;
  flex-flow: column;
}
.tf-grid thead > tr > .tf-grid-th--check,
.tf-grid tbody > tr > .tf-grid-th--check,
.tf-grid thead > tr > .tf-grid-td--check,
.tf-grid tbody > tr > .tf-grid-td--check {
  padding: 0 !important;
  text-align: center;
  width: 40px;
  min-width: 40px;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content,
.tf-grid tbody > tr > .tf-grid-th--check .check-content,
.tf-grid thead > tr > .tf-grid-td--check .check-content,
.tf-grid tbody > tr > .tf-grid-td--check .check-content {
  padding: 0;
  display: flex;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content .loading-button,
.tf-grid tbody > tr > .tf-grid-th--check .check-content .loading-button,
.tf-grid thead > tr > .tf-grid-td--check .check-content .loading-button,
.tf-grid tbody > tr > .tf-grid-td--check .check-content .loading-button {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content.multi,
.tf-grid tbody > tr > .tf-grid-th--check .check-content.multi,
.tf-grid thead > tr > .tf-grid-td--check .check-content.multi,
.tf-grid tbody > tr > .tf-grid-td--check .check-content.multi {
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content.multi fluent-button,
.tf-grid tbody > tr > .tf-grid-th--check .check-content.multi fluent-button,
.tf-grid thead > tr > .tf-grid-td--check .check-content.multi fluent-button,
.tf-grid tbody > tr > .tf-grid-td--check .check-content.multi fluent-button {
  flex: 0 0 auto;
  background: transparent !important;
  border-radius: 3px !important;
  height: unset;
  margin: 2px 0;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content.multi fluent-button::part(control),
.tf-grid tbody > tr > .tf-grid-th--check .check-content.multi fluent-button::part(control),
.tf-grid thead > tr > .tf-grid-td--check .check-content.multi fluent-button::part(control),
.tf-grid tbody > tr > .tf-grid-td--check .check-content.multi fluent-button::part(control) {
  width: 100%;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content.multi fluent-button:hover,
.tf-grid tbody > tr > .tf-grid-th--check .check-content.multi fluent-button:hover,
.tf-grid thead > tr > .tf-grid-td--check .check-content.multi fluent-button:hover,
.tf-grid tbody > tr > .tf-grid-td--check .check-content.multi fluent-button:hover {
  background: var(--tf-white) !important;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content.multi fluent-button svg,
.tf-grid tbody > tr > .tf-grid-th--check .check-content.multi fluent-button svg,
.tf-grid thead > tr > .tf-grid-td--check .check-content.multi fluent-button svg,
.tf-grid tbody > tr > .tf-grid-td--check .check-content.multi fluent-button svg {
  --neutral-stroke-input-active: var(--neutral-stroke-rest);
}
.tf-grid thead > tr > .tf-grid-th--check .check-content.check fluent-button,
.tf-grid tbody > tr > .tf-grid-th--check .check-content.check fluent-button,
.tf-grid thead > tr > .tf-grid-td--check .check-content.check fluent-button,
.tf-grid tbody > tr > .tf-grid-td--check .check-content.check fluent-button {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: transparent !important;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content.check fluent-button::part(control),
.tf-grid tbody > tr > .tf-grid-th--check .check-content.check fluent-button::part(control),
.tf-grid thead > tr > .tf-grid-td--check .check-content.check fluent-button::part(control),
.tf-grid tbody > tr > .tf-grid-td--check .check-content.check fluent-button::part(control) {
  background: transparent !important;
  border: none;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content.check fluent-button:hover,
.tf-grid tbody > tr > .tf-grid-th--check .check-content.check fluent-button:hover,
.tf-grid thead > tr > .tf-grid-td--check .check-content.check fluent-button:hover,
.tf-grid tbody > tr > .tf-grid-td--check .check-content.check fluent-button:hover {
  background: transparent !important;
}
.tf-grid thead > tr > .tf-grid-th--check .check-content.check fluent-button svg,
.tf-grid tbody > tr > .tf-grid-th--check .check-content.check fluent-button svg,
.tf-grid thead > tr > .tf-grid-td--check .check-content.check fluent-button svg,
.tf-grid tbody > tr > .tf-grid-td--check .check-content.check fluent-button svg {
  --neutral-stroke-input-active: var(--neutral-stroke-rest);
}
.tf-grid thead > tr > th:first-child,
.tf-grid tbody > tr > th:first-child,
.tf-grid thead > tr > td:first-child,
.tf-grid tbody > tr > td:first-child {
  border-left-width: 0;
}
.tf-grid thead > tr > th:last-child,
.tf-grid tbody > tr > th:last-child,
.tf-grid thead > tr > td:last-child,
.tf-grid tbody > tr > td:last-child {
  border-right-width: 0;
}
.tf-grid thead > tr > td > div:not([class]):empty,
.tf-grid tbody > tr > td > div:not([class]):empty {
  height: 30px;
}
.tf-grid thead > tr .tr-actions,
.tf-grid tbody > tr .tr-actions {
  display: none;
}
.tf-grid thead > tr:hover .tr-actions,
.tf-grid tbody > tr:hover .tr-actions {
  display: flex;
}
.tf-grid thead th.tf--sticky,
.tf-grid tbody th.tf--sticky,
.tf-grid thead td.tf--sticky,
.tf-grid tbody td.tf--sticky {
  position: sticky;
  z-index: 2;
}
.tf-grid thead .tf--sticky-first::after,
.tf-grid tbody .tf--sticky-first::after {
  border-right-width: 1px;
  border-right-style: solid;
  content: "";
  display: block;
  width: 10px;
  top: 0;
  bottom: 0;
  left: -11px;
  box-shadow: inset -2px 0 5px var(--neutral-layer-2);
  position: absolute;
}
.tf-grid thead .tf--sticky-last::after,
.tf-grid tbody .tf--sticky-last::after {
  content: "";
  display: block;
  width: 10px;
  right: -10px;
  top: 0;
  bottom: 0;
  box-shadow: inset 5px 0 5px rgba(0, 0, 0, 0.1);
  position: absolute;
}
.tf-grid thead > tr > th,
.tf-grid tfoot > tr > th,
.tf-grid thead > tr > td,
.tf-grid tfoot > tr > td {
  white-space: nowrap;
  text-overflow: ellipsis;
  padding: calc((var(--design-unit) + var(--focus-stroke-width) - var(--stroke-width)) * 1px) calc(((var(--design-unit) * 3) + var(--focus-stroke-width) - var(--stroke-width)) * 1px);
}
.tf-grid .tf-grid-td-spacer {
  display: inline-block;
  width: 1rem;
}
.tf-grid--sticky thead {
  position: sticky;
  top: 0;
  z-index: 11;
}
.tf-grid--sticky tbody {
  position: unset;
}
.tf-grid__pager {
  margin-top: 1rem;
}
.tf-grid-tr.tf-grid-tr--selected .tf-grid-td-selection {
  background: color-mix(in srgb, var(--neutral-fill-rest), var(--accent-fill-rest) 10%);
}
.tf-grid-tr:hover .tf-grid-td-hover {
  background: var(--neutral-fill-hover);
}
.tf-grid .tf-grid-td {
  --tf-td-color-red: var(--tf-red-500);
  --tf-td-fill-red: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-red-500) 5%);
  --tf-td-color-orange: var(--tf-orange-500);
  --tf-td-fill-orange: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-orange-500) 5%);
  --tf-td-color-amber: var(--tf-amber-500);
  --tf-td-fill-amber: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-amber-500) 5%);
  --tf-td-color-yellow: var(--tf-yellow-500);
  --tf-td-fill-yellow: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-yellow-500) 5%);
  --tf-td-color-lime: var(--tf-lime-500);
  --tf-td-fill-lime: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-lime-500) 5%);
  --tf-td-color-green: var(--tf-green-500);
  --tf-td-fill-green: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-green-500) 5%);
  --tf-td-color-emerald: var(--tf-emerald-500);
  --tf-td-fill-emerald: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-emerald-500) 5%);
  --tf-td-color-teal: var(--tf-teal-500);
  --tf-td-fill-teal: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-teal-500) 5%);
  --tf-td-color-cyan: var(--tf-cyan-500);
  --tf-td-fill-cyan: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-cyan-500) 5%);
  --tf-td-color-sky: var(--tf-sky-500);
  --tf-td-fill-sky: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-sky-500) 5%);
  --tf-td-color-blue: var(--tf-blue-500);
  --tf-td-fill-blue: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-blue-500) 5%);
  --tf-td-color-indigo: var(--tf-indigo-500);
  --tf-td-fill-indigo: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-indigo-500) 5%);
  --tf-td-color-violet: var(--tf-violet-500);
  --tf-td-fill-violet: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-violet-500) 5%);
  --tf-td-color-purple: var(--tf-purple-500);
  --tf-td-fill-purple: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-purple-500) 5%);
  --tf-td-color-fuchsia: var(--tf-fuchsia-500);
  --tf-td-fill-fuchsia: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-fuchsia-500) 5%);
  --tf-td-color-pink: var(--tf-pink-500);
  --tf-td-fill-pink: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-pink-500) 5%);
  --tf-td-color-rose: var(--tf-rose-500);
  --tf-td-fill-rose: color-mix(in srgb, var(--neutral-fill-rest), var(--tf-rose-500) 5%);
}
.tf-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-left: var(--tf-padding);
  padding-right: var(--tf-padding);
  --tf-title-width: 400px;
}
.tf-header__left {
  flex: 0 0 auto;
}
.tf-header__right {
  flex: 0 0 auto;
  display: flex;
  justify-content: end;
  align-items: center;
  gap: 5px;
}
.tf-header__meta {
  display: flex;
  align-items: center;
}
.tf-header__meta__icon {
  flex: 0 0 24px;
  display: flex;
  justify-content: start;
  align-items: center;
  --accent-fill-rest: var(--neutral-strok-rest);
}
.tf-header__meta__title {
  flex: 1 1 var(--tf-title-width);
  width: var(--tf-title-width);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: var(--tf-font-size-xl);
}
.tf-header fluent-divider {
  height: 1rem;
  --neutral-stroke-divider-rest: var(--neutral-stroke-rest);
  margin: 0 1rem;
}
.tf-header fluent-button {
  color: var(--tf-button-color);
}
.tf-header fluent-button svg {
  --accent-fill-rest: var(--tf-button-color);
}
.tf-header-tabs {
  padding-left: var(--tf-padding);
  padding-right: var(--tf-padding);
  border-bottom: 1px solid var(--neutral-stroke-hover);
  --tf-tab-padding: calc(var(--tf-padding) / 3);
}
.tf-header-tabs fluent-tabs {
  margin-left: calc(-1 * var(--tf-tab-padding));
}
.tf-header-tabs fluent-tabs::part(activeIndicator) {
  width: 60%;
  position: relative;
  bottom: -7px;
}
.tf-header-tabs fluent-tab {
  padding-left: var(--tf-tab-padding);
  padding-right: var(--tf-tab-padding);
  --accent-fill-rest: var(--neutral-foreground-rest);
}
.tf-header-tabs fluent-tab svg {
  margin-right: 3px;
}
.tf-hover-switch__unhover {
  display: block;
}
.tf-hover-switch:hover .tf-hover-switch__unhover {
  display: none;
}
.tf-hover-switch__hover {
  display: none;
}
.tf-hover-switch:hover .tf-hover-switch__hover {
  display: block;
}
.tf-import-wizard {
  display: flex;
  --tf-wizard-padding: 10px;
}
.tf-import-wizard__aside {
  flex: 0 0 300px;
  display: flex;
  flex-flow: column;
  border-radius: calc(var(--layer-corner-radius) * 1px) 0 0 calc(var(--layer-corner-radius) * 1px);
  background: var(--neutral-layer-2);
  border-right: 1px solid var(--neutral-stroke-rest);
}
.tf-import-wizard__aside__header {
  flex: 0 0 auto;
  padding: var(--tf-wizard-padding);
  color: var(--neutral-foreground-hint);
  display: flex;
  align-items: center;
}
.tf-import-wizard__aside__header__left {
  flex: 0 0 auto;
}
.tf-import-wizard__aside__header__right {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
}
.tf-import-wizard__aside__header__right__count {
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
  margin-left: var(--tf-wizard-padding);
}
.tf-import-wizard__aside__header__right__count__number {
  display: flex;
  align-items: center;
  padding-left: 3px;
}
.tf-import-wizard__aside__content {
  flex: 1 1 auto;
  padding-bottom: calc(var(--tf-wizard-padding) * 3);
  max-height: 80vh;
  overflow-y: auto;
  scrollbar-width: thin;
}
.tf-import-wizard__aside__footer {
  flex: 0 0 auto;
  padding: var(--tf-wizard-padding);
}
.tf-import-wizard__aside__footer fluent-button {
  width: 100%;
}
.tf-import-wizard__content {
  flex: 1 1 auto;
  min-height: 300px;
  display: flex;
  flex-flow: column;
}
.tf-import-wizard__content__header {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  padding-top: var(--tf-wizard-padding);
  padding-bottom: var(--tf-wizard-padding);
  border-bottom: 1px solid var(--neutral-stroke-rest);
}
.tf-import-wizard__content__header__left {
  flex: 1 1 auto;
  display: flex;
  padding-left: var(--tf-wizard-padding);
  padding-right: var(--tf-wizard-padding);
  align-items: center;
  font-size: var(--type-ramp-plus-2-font-size);
  line-height: var(--type-ramp-plus-2-line-height);
}
.tf-import-wizard__content__header__center {
  flex: 0 0 auto;
  padding-right: calc(var(--tf-wizard-padding) * 2);
  display: flex;
  align-items: center;
  font-size: var(--type-ramp-base-font-size);
}
.tf-import-wizard__content__header__center__text {
  padding-left: 1px;
  padding-right: 1px;
}
.tf-import-wizard__content__header__right {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
  padding-right: var(--tf-wizard-padding);
}
.tf-import-wizard__content__header__right__count {
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
  padding-right: var(--tf-wizard-padding);
}
.tf-import-wizard__content__header__right__count__number {
  display: flex;
  align-items: center;
  padding-left: 3px;
}
.tf-import-wizard__content__body {
  flex: 1 1 auto;
  min-height: 400px;
  padding: var(--tf-wizard-padding);
}
.tf-import-wizard__content__footer {
  flex: 0 0 auto;
  display: flex;
  justify-content: space-between;
}
.tf-import-wizard__content__footer__left {
  padding: var(--tf-wizard-padding);
  flex: 0 0 auto;
}
.tf-import-wizard__content__footer__right {
  padding: var(--tf-wizard-padding);
  flex: 0 0 auto;
}
.tf-layout-centered-content {
  height: 100vh;
  width: 100%;
  display: flex;
  justify-content: center;
  padding-top: 5rem;
}
.tf-layout-grid-content {
  flex: 0 1 960px;
}
.tf-layout-grid-content-wrapper {
  height: 100vh;
  width: 100%;
  display: flex;
  justify-content: center;
}
.tf-layout-grid-content__title {
  padding-top: 2rem;
  text-align: center;
  font-size: 23px;
  font-weight: bold;
  padding-bottom: 1rem;
}
.tf-layout-grid-content__subtitle {
  text-align: center;
  padding-bottom: 1rem;
}
.tf-layout-grid-content__content {
  padding-top: 1rem;
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 1rem;
}
.tflg {
  display: flex;
  flex-flow: row;
  position: relative;
}
.tflg__aside {
  flex: 0 0 var(--tf-aside-width);
  display: flex;
  flex-flow: column;
  background: var(--neutral-fill-secondary-active);
  border-right: 1px solid var(--neutral-stroke-rest);
}
.tflg__aside__footer {
  flex: 0 0 var(--tf-aside-footer-height);
  display: flex;
  align-items: start;
  justify-content: start;
  color: var(--neutral-foreground-hint);
  font-size: var(--type-ramp-minus-1-font-size);
  padding-left: var(--tf-padding);
  padding-right: var(--tf-padding);
}
.tflg__aside__footer a {
  color: var(--neutral-foreground-hint);
  text-decoration: none;
}
.tflg__aside__footer a:hover {
  color: var(--neutral-foreground-rest);
}
.tflg__aside__footer sup {
  font-size: calc(var(--type-ramp-minus-1-font-size) - 4px);
}
.tflg__wrapper {
  flex: 1 1 auto;
  display: flex;
  flex-flow: column;
}
.tflg__space-header {
  flex: 0 0 var(--tf-space-header-height);
}
.tflg__space-actions {
  flex: 0 0 var(--tf-space-actions-height);
}
.tflg__sidenav {
  flex: 1 1 auto;
  height: calc(100vh - var(--tf-space-header-height) - var(--tf-space-actions-height) - var(--tf-aside-footer-height));
  overflow-y: auto;
  scrollbar-width: thin;
}
.tflg__page-topbar {
  flex: 0 0 var(--tf-topbar-height);
}
.tflg__page-content {
  flex: 1 1 auto;
}
.tflpc {
  display: flex;
  flex-flow: column nowrap;
}
.tflpc:not(.tflpc--has-page-tabs) {
  --tf-page-tabs-height: 0px;
}
.tflpc__header {
  flex: 0 0 var(--tf-page-header-height);
  display: flex;
  justify-content: space-between;
  align-items: start;
  padding: 0 var(--tf-padding);
}
.tflpc__header__left {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  min-height: 32px;
}
.tflpc__header__left__title {
  flex: 1 1 auto;
  font-weight: 600;
  font-size: var(--type-ramp-plus-3-font-size);
  line-height: var(--type-ramp-plus-3-line-height);
}
.tflpc__header__left__icon {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  padding-right: var(--tf-padding);
}
.tflpc__header__left__return {
  flex: 0 0 auto;
  padding-right: var(--tf-padding);
}
.tflpc__header__right {
  flex: 0 0 auto;
  min-height: 32px;
  display: flex;
  align-items: center;
  gap: 5px;
}
.tflpc__header__right fluent-search::part(root) {
  background: padding-box linear-gradient(var(--neutral-fill-input-active), var(--neutral-fill-input-active)), border-box var(--neutral-stroke-input-active);
}
.tflpc__header fluent-divider {
  height: 1rem;
  --neutral-stroke-divider-rest: var(--neutral-stroke-rest);
}
.tflpc__tabs {
  flex: 0 0 var(--tf-page-tabs-height);
  display: flex;
  flex-flow: column;
  justify-content: end;
  padding-left: var(--tf-padding);
  padding-right: var(--tf-padding);
}
.tflpc__content {
  flex: 1 1 auto;
  height: calc(100vh - var(--tf-topbar-height) - var(--tf-page-header-height) - var(--tf-page-tabs-height));
  width: calc(100vw - var(--tf-aside-width) - 1px);
  overflow-y: auto;
  overflow-x: auto;
  scrollbar-width: thin;
}
.tf-sidenav {
  padding-top: var(--tf-padding);
}
.tf-sidenav .tf-treemenu__item {
  padding-left: var(--tf-padding);
  padding-right: var(--tf-padding);
}
.tf-space-header {
  position: relative;
  padding-left: var(--tf-padding);
  padding-right: var(--tf-padding);
  --tf-space-pane-extra-space: 10px;
  display: flex;
  justify-items: center;
  align-items: center;
  height: 100%;
}
.tf-space-header__icon {
  --tf-icon-size: 27px;
  --tf-svg-size: 20px;
  flex: 0 0 var(--tf-icon-size);
  height: var(--tf-icon-size);
  width: var(--tf-icon-size);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--accent-fill-rest);
}
.tf-space-header__icon svg {
  --accent-fill-rest: var(--foreground-on-accent-rest-large);
  width: var(--tf-svg-size) !important;
  height: var(--tf-svg-size) !important;
}
.tf-space-header__meta {
  flex: 1 1 auto;
  padding-left: var(--tf-padding);
}
.tf-space-header__meta__title {
  overflow: hidden;
  line-height: var(--type-ramp-plus-1-line-height);
  font-size: var(--type-ramp-plus-1-font-size);
}
.tf-space-actions {
  position: relative;
  padding-left: var(--tf-padding);
  padding-right: var(--tf-padding);
  --tf-space-pane-extra-space: 10px;
  display: flex;
  justify-items: center;
  align-items: start;
  gap: 10px;
  height: 100%;
}
.tf-space-actions fluent-button {
  flex: 1 1 auto;
}
.tf-space-finder__space {
  box-shadow: none;
  border-color: var(--neutral-stroke-rest) !important;
  margin-top: 0.5rem !important;
}
.tf-space-finder__space:first-child {
  margin-top: 0;
}
.tf-space-finder__space--active {
  border-color: var(--accent-fill-rest) !important;
}
.tf-space-finder__space--active:hover {
  background: var(--neutral-fill-hover);
}
.tf-space-finder__space--active:focus,
.tf-space-finder__space--active:active {
  box-shadow: var(--neutral-fill-hover);
}
.tf-space-finder__space .tf-card__content {
  display: flex;
  align-items: center;
}
.tf-space-finder__space__icon {
  flex: 0 0 20px;
  display: flex;
  align-items: center;
}
.tf-space-finder__space__meta {
  flex: 1 1 auto;
  padding: 0 10px;
}
.tf-space-finder__space__meta mark {
  background: transparent;
  font-weight: bold;
}
.tf-space-finder__space__bookmark {
  flex: 0 0 20px;
}
.tf-page-topbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 100%;
  padding-left: calc(var(--tf-padding) - 5px);
  padding-right: calc(var(--tf-padding) - 5px);
}
.tf-page-topbar__left {
  flex: 0 0 auto;
}
.tf-page-topbar__right {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  justify-content: end;
  gap: 5px;
}
.tf-page-topbar fluent-breadcrumb-item::part(start) {
  --accent-fill-rest: var(--accent-fill-rest);
}
.tf-page-topbar fluent-breadcrumb-item::part(control) {
  display: flex;
  align-items: center;
  height: 23px;
  padding: 0 5px;
  border-radius: calc(var(--control-corner-radius) * 1px);
  margin-inline-end: 0;
  cursor: pointer;
  font-size: var(--type-ramp-minus-1-font-size);
  color: var(--neutral-foreground-hint);
}
.tf-page-topbar fluent-breadcrumb-item::part(separator) {
  color: var(--neutral-foreground-hint);
  margin: 0 5px;
}
.tf-page-topbar fluent-breadcrumb-item:hover::part(control) {
  background: color-mix(in srgb, var(--neutral-layer-1), var(--accent-fill-rest) 5%);
  color: var(--accent-fill-rest);
}
.tf-page-topbar fluent-divider {
  height: 1rem;
  margin: 0 0.5rem;
}
.tf-page-topbar fluent-anchor::part(control),
.tf-page-topbar fluent-button::part(control) {
  border-color: transparent;
}
.tf-page-topbar fluent-anchor:hover::part(control),
.tf-page-topbar fluent-button:hover::part(control) {
  border-color: var(--neutral-stroke-hover);
}
.tf-path {
  display: flex;
  overflow: hidden;
  border-top: 1px solid var(--neutral-stroke-rest);
  border-bottom: 1px solid var(--neutral-stroke-rest);
}
.tf-path__item {
  --tf-path-item-height: 50px;
  --tf-path-item-arrow-width: 20px;
  --tf-path-item-color: var(--fill-color);
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  position: relative;
  height: var(--tf-path-item-height);
  padding: 0 0 0 calc(var(--tf-path-item-arrow-width) + 10px);
  background: var(--tf-path-item-color);
}
.tf-path__item:first-child {
  padding-left: 10px;
}
.tf-path__item::before {
  content: " ";
  display: block;
  width: 0;
  height: 0;
  border-top: var(--tf-path-item-height) solid transparent;
  border-bottom: var(--tf-path-item-height) solid transparent;
  border-left: var(--tf-path-item-arrow-width) solid var(--neutral-stroke-rest);
  position: absolute;
  top: 50%;
  margin-top: calc(-1 * var(--tf-path-item-height));
  margin-left: 1px;
  left: 100%;
  z-index: 1;
}
.tf-path__item::after {
  content: " ";
  display: block;
  width: 0;
  height: 0;
  border-top: var(--tf-path-item-height) solid transparent;
  border-bottom: var(--tf-path-item-height) solid transparent;
  border-left: var(--tf-path-item-arrow-width) solid var(--tf-path-item-color);
  position: absolute;
  top: 50%;
  margin-top: calc(-1 * var(--tf-path-item-height));
  left: 100%;
  z-index: 2;
}
.tf-path__item__count {
  flex: 0 0 30px;
  padding-right: 5px;
  color: var(--accent-foreground-rest);
}
.tf-path__item__count > * {
  display: flex;
  justify-content: center;
  align-items: center;
}
.tf-path__item__count__icon {
  display: none;
}
.tf-path__item__meta {
  flex: 1 1 auto;
}
.tf-path__item__meta__subtitle {
  color: var(--neutral-foreground-hint);
  font-size: var(--type-ramp-minus-1-font-size);
}
.tf-path__item:hover {
  --tf-path-item-color: var(--neutral-layer-2);
  cursor: pointer;
}
.tf-path__item--selected {
  --tf-path-item-color: var(--neutral-layer-2);
}
.tf-path__item--completed {
  --tf-path-item-color: var(--tf-green-950);
}
.tf-path__item--completed .tf-path__item__count__icon {
  display: flex;
}
.tf-path__item--completed .tf-path__item__count__number {
  display: none;
}
.tf-plaintext-field {
  display: flex;
  align-items: center;
  -webkit-appearance: none;
  color: inherit;
  background: transparent;
  margin-top: auto;
  margin-bottom: auto;
  padding: 0 calc(var(--design-unit) * 2px + 1px);
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  width: 100%;
  background: padding-box linear-gradient(var(--neutral-fill-input-rest), var(--neutral-fill-input-rest)), border-box var(--neutral-stroke-input-rest);
  box-sizing: border-box;
  position: relative;
  border: calc(var(--stroke-width) * 1px) solid transparent;
  border-radius: calc(var(--control-corner-radius) * 1px);
  height: calc((var(--base-height-multiplier) + var(--density)) * var(--design-unit) * 1px);
}
.tf-plaintext-field__icon {
  flex: 0 0 auto;
  padding-right: 10px;
  display: flex;
  align-items: center;
}
.tf-plaintext-field__text {
  flex: 1 0 auto;
}
.tf-plaintext-field:hover {
  cursor: not-allowed;
  background: padding-box linear-gradient(var(--neutral-fill-input-hover), var(--neutral-fill-input-hover)), border-box var(--neutral-stroke-input-hover);
}
.tf-recipe {
  display: flex;
}
.tf-recipe__icon {
  flex: 0 0 50px;
  display: flex;
  flex-flow: column;
  justify-content: center;
}
.tf-recipe__icon svg {
  width: 36px !important;
}
.tf-recipe__meta {
  flex: 1 1 auto;
}
.tf-recipe__meta__name {
  font-weight: bold;
  font-size: 16px;
  margin-bottom: 5px;
}
.tf-recipe__meta__author {
  margin-top: 5px;
  color: var(--neutral-foreground-hint);
}
.tf-select-btn {
  justify-content: start;
  display: flex;
  align-items: center;
  font-size: var(--type-ramp-base-font-size);
}
.tf-select-btn--with-background {
  border-radius: calc(var(--control-corner-radius) * 1px);
  height: calc((var(--base-height-multiplier) + var(--density)) * var(--design-unit) * 1px);
  line-height: var(--type-ramp-base-line-height);
  padding: 0 calc((10 + (var(--design-unit) * 2 * var(--density))) * 1px);
}
.tf-select-btn::part(start) {
  flex: 0 0 auto;
}
.tf-select-btn::part(start) svg {
  width: 20px;
  vertical-align: bottom;
}
.tf-select-btn::part(content) {
  height: 32px;
  flex: 1 1 auto;
  text-align: left;
  display: flex;
  align-items: center;
}
.tf-btn-menu fluent-menu {
  max-width: 100%;
  overflow-y: scroll;
  scrollbar-width: thin;
  height: 300px;
  max-height: 300px;
}
.tf-select-component {
  width: 100%;
}
.tf-select-component .tf-card {
  border: calc(var(--stroke-width) * 1px) solid transparent;
  padding: 5px;
  border-radius: calc(var(--control-corner-radius) * 1px);
  background: padding-box linear-gradient(var(--neutral-fill-rest), var(--neutral-fill-rest)), border-box var(--neutral-stroke-control-rest);
  box-shadow: none !important;
}
.tf-select-component .tf-card__content {
  padding-top: 0;
}
.tf-select-component.disabled .tf-card {
  background: var(--neutral-fill-rest);
  border-color: var(--neutral-stroke-rest);
  cursor: not-allowed;
}
.tf-select-component:not(.disabled):not(.readonly) .tf-card:hover {
  background: padding-box linear-gradient(var(--neutral-fill-hover), var(--neutral-fill-hover)), border-box var(--neutral-stroke-control-hover);
}
.tf-select-component.readonly .tf-card {
  cursor: not-allowed;
}
.tf-select-component.readonly .tf-card:hover {
  background: padding-box linear-gradient(var(--neutral-fill-input-hover), var(--neutral-fill-input-hover)), border-box var(--neutral-stroke-input-hover);
  cursor: no-drop;
}
.tf-select-component .tf-component {
  display: flex;
  width: 100%;
}
.tf-select-component .tf-component-icon {
  flex: 0 0 40px;
  display: flex;
  align-items: center;
  justify-content: start;
}
.tf-select-component .tf-component-icon svg {
  width: 32px !important;
}
.tf-select-component .tf-component-meta {
  flex: 1 1 auto;
}
.tf-select-component .tf-component-title {
  font-size: 1.15em;
}
.tf-select-component .tf-component-description {
  color: var(--neutral-base-color);
}
.tf-select-component .tf-component-caret {
  flex: 0 0 20px;
  display: flex;
  align-items: center;
}
.tf-select-component .tf-component-caret svg {
  --accent-fill-rest: var(--neutral-foreground-rest);
}
.tf-select-component .tf-component--small .tf-component-icon {
  flex-basis: 32px;
}
.tf-select-component .tf-component--small .tf-component-icon svg {
  width: 18px !important;
}
.tf-select-component .tf-component--small .tf-component-title {
  font-size: 1em;
}
.tf-select-component .tf-component--small .tf-component-description {
  font-size: 0.85em;
}
.tf-select-component fluent-menu-item {
  padding-top: 2px;
  padding-bottom: 2px;
  padding-left: 1rem;
  height: auto;
  display: flex !important;
}
.tf-select-component fluent-menu-item::part(start) {
  display: none;
}
.tf-select-component fluent-menu-item::part(content) {
  flex: 1 1 auto;
}
.tf-select-menu {
  display: flex;
  flex-flow: column;
  overflow: hidden !important;
  border-radius: calc(var(--layer-corner-radius) * 1px);
  box-shadow: var(--elevation-shadow-flyout);
  padding: calc((var(--design-unit) - var(--stroke-width)) * 1px) 0;
  border: calc(var(--stroke-width) * 1px) solid transparent;
}
.tf-select-menu__header {
  flex: 0 0 auto;
  padding: 10px;
  display: flex;
  flex-flow: column;
  justify-content: center;
}
.tf-select-menu__body {
  padding-top: 5px;
  padding-bottom: 5px;
  flex: 1 1 auto;
  max-height: 300px;
  overflow-y: auto;
}
.tf-select-menu fluent-menu-item {
  --neutral-fill-stealth-rest: transparent;
  --neutral-fill-stealth-hover: color-mix(in srgb, var(--fill-color), var(--accent-fill-rest) 10%);
}
.tf-tabs {
  --tf-tabs-bottom-margin: 10px;
  --tf-tabs-padding: 10px;
  width: 100%;
  display: flex;
  height: calc(var(--tf-page-tabs-height) - var(--tf-tabs-bottom-margin));
  border-bottom: 1px solid var(--neutral-stroke-rest);
  margin-bottom: var(--tf-tabs-padding);
}
.tf-tabs__item {
  flex: 0 0 auto;
  position: relative;
  display: flex;
  align-items: center;
}
.tf-tabs__item--active::after {
  content: "";
  display: block;
  position: absolute;
  height: 2px;
  left: var(--tf-tabs-padding);
  right: var(--tf-tabs-padding);
  bottom: -1px;
  background: linear-gradient(90deg, transparent 0, var(--accent-fill-rest) 50%, transparent 100%);
}
.tf-tabs__item fluent-anchor {
  height: 100%;
  --accent-foreground-rest: var(--neutral-foreground-rest);
  --accent-fill-rest: var(--neutral-foreground-rest);
}
.tf-tabs__item fluent-anchor::part(start) {
  margin-inline-end: 5px;
  position: unset !important;
}
.tf-tabs__item fluent-anchor::part(end) {
  margin-inline-start: 5px;
  position: unset !important;
}
.tf-tabs__item fluent-anchor::part(control) {
  text-decoration: none;
  padding: 0 var(--tf-tabs-padding);
  display: flex;
  align-items: center;
}
.tf-treemenu {
  width: 100%;
  padding: 0 calc(var(--tf-padding) / 2);
}
.tf-submenu {
  padding-left: calc(var(--tf-padding) * 2);
  position: relative;
}
.tf-submenu:before {
  content: "";
  display: block;
  position: absolute;
  left: calc(var(--tf-padding) + 3px);
  top: 0;
  bottom: 0;
  width: 1px;
  background: linear-gradient(to bottom, var(--neutral-layer-2) 10%, var(--neutral-layer-3) 50%, var(--neutral-layer-2) 90%);
}
.tf-submenu .tf-submenu {
  padding-left: calc(var(--tf-padding) * 2);
}
.tf-submenu .tf-submenu .tf-submenu {
  padding-left: calc(var(--tf-padding) * 3);
}
.tf-submenu .tf-submenu .tf-submenu .tf-submenu {
  padding-left: calc(var(--tf-padding) * 4);
}
.tf-treemenu__item {
  display: flex;
  align-items: center;
  width: 100%;
  margin: calc(var(--design-unit) * 1px) 0;
  text-decoration: none;
  min-height: calc(((var(--base-height-multiplier) + var(--density)) * var(--design-unit) + 1) * 1px);
  padding-left: calc(var(--tf-padding) / 2);
  padding-right: calc(var(--tf-padding) / 2);
  color: var(--neutral-foreground-rest);
  border-radius: calc(var(--control-corner-radius) * 1px);
  position: relative;
}
.tf-treemenu__item:hover {
  color: var(--accent-foreground-hover);
  background: color-mix(in srgb, var(--neutral-layer-1), var(--accent-fill-rest) 5%);
}
.tf-treemenu__item:hover .tf-treemenu__item__expander {
  display: flex;
}
.tf-treemenu__item.tf-active:not(.tf-child-active) {
  position: relative;
  color: var(--accent-foreground-active);
  font-weight: 600;
}
.tf-treemenu__item.tf-active:not(.tf-child-active)::before {
  display: none !important;
}
.tf-treemenu__item.tf-active:not(.tf-child-active) svg {
  --accent-fill-rest: var(--accent-foreground-active);
}
.tf-treemenu__item.tf-active + .tf-submenu:before,
.tf-treemenu__item.tf-child-active + .tf-submenu:before {
  background: linear-gradient(to bottom, var(--neutral-layer-2) 10%, var(--accent-fill-rest) 50%, var(--neutral-layer-2) 90%);
}
.tf-treemenu__item__content {
  display: flex;
  width: 100%;
  align-items: center;
}
.tf-treemenu__item__icon {
  flex: 0 0 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  --accent-fill-rest: var(--neutral-foreground-hover);
}
.tf-treemenu__item__icon.spin {
  animation: tree-icon-rotation 2s infinite linear;
}
.tf-treemenu__item__icon svg {
  width: 20px;
}
.tf-treemenu__item__titleblock {
  flex: 1 1 auto;
  display: flex;
  flex-flow: column;
  overflow: hidden;
  text-overflow: ellipsis;
}
.tf-treemenu__item__title {
  flex: 1 1 auto;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: inline-block;
}
.tf-treemenu__item__icon + .tf-treemenu__item__title {
  padding-left: 7px;
}
.tf-treemenu__item__description {
  font-size: 0.85em;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: inline-block;
  line-height: 1em;
}
.tf-treemenu__item__expander {
  position: absolute;
  right: var(--tf-padding);
  top: 50%;
  margin-top: -12px;
  display: flex;
  /*pointer-events: none;*/
  border-radius: 50%;
  background: transparent;
  width: 24px;
  height: 24px;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.tf-treemenu__item__expander:hover {
  background: color-mix(in srgb, var(--accent-fill-rest), transparent 75%);
}
.tf-treemenu__item__expander svg {
  --accent-fill-rest: var(--neutral-foreground-hover);
  width: 16px !important;
}
@keyframes tree-icon-rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.tf-welcome {
  padding-left: var(--tf-padding);
  padding-right: var(--tf-padding);
  padding-top: 3rem;
}
.tf-welcome h1,
.tf-welcome h3 {
  text-align: center;
}
.tf-welcome__grid {
  justify-content: center;
  max-width: 1000px;
  margin: 0 auto;
  margin-top: 3rem;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: calc(var(--tf-padding) * 2);
}
.tf-welcome .tf-card {
  height: 100%;
}
.tf-welcome .tf-card__title em {
  font-style: normal;
  color: var(--accent-fill-rest);
}
.tf-wizard {
  display: flex;
  border: 1px solid var(--neutral-stroke-rest);
  min-height: 300px;
}
.tf-card__content .tf-wizard {
  margin: 0 calc(-1 * var(--tf-padding));
  border-left: none;
  border-right: none;
}
.tf-wizard__steps {
  flex: 0 0 200px;
  background: var(--neutral-fill-hover);
  padding: 30px 0;
}
.tf-wizard__steps__step {
  padding: 5px;
  display: flex;
  cursor: pointer;
  align-items: center;
}
.tf-wizard__steps__step:hover:not(.result) {
  background: var(--neutral-fill-secondary-hover);
}
.tf-wizard__steps__step__index {
  flex: 0 0 23px;
  text-align: right;
  padding-right: 5px;
}
.tf-wizard__steps__step__title {
  flex: 1 1 auto;
}
.tf-wizard__steps__step__icon {
  flex: 0 0 30px;
  display: flex;
  align-items: center;
  justify-content: end;
}
.tf-wizard__steps__step .check,
.tf-wizard__steps__step .arrow,
.tf-wizard__steps__step .error {
  display: none;
}
.tf-wizard__steps__step.completed .check {
  display: inline-block;
}
.tf-wizard__steps__step.completed .pending {
  display: none;
}
.tf-wizard__steps__step.active .arrow {
  display: inline-block;
}
.tf-wizard__steps__step.active .pending {
  display: none;
}
.tf-wizard__steps__step.result {
  cursor: auto;
}
.tf-wizard__steps__step.error .error {
  display: inline-block;
}
.tf-wizard__steps__step.error .pending {
  display: none;
}
.tf-wizard__content {
  flex: 1 1 0;
  padding: 30px 15px;
}
.tf-wizard__content__step__title {
  font-size: 18px;
  margin-bottom: 1rem;
  color: var(--accent-base-color);
}
.substep .tf-wizard__content__step__title {
  font-size: 15px;
  font-weight: bold;
  margin-bottom: 10px;
  margin-top: 1rem;
}
.substep:first-child .tf-wizard__content__step__title {
  margin-top: 0;
}
.tf-wizard__content__step__description {
  margin-top: -1rem;
  margin-bottom: 1rem;
  color: var(--neutral-foreground-hint);
}
.substep .tf-wizard__content__step__description {
  margin-top: -10px;
  margin-bottom: 10px;
}
.tf-wizard__content__step__form table:not(.tf-grid) th,
.tf-wizard__content__step__form table:not(.tf-grid) td {
  padding: 5px 10px;
  border: 1px solid var(--neutral-stroke-rest);
}
/*# sourceMappingURL=styles.css.map */