@namespace WebVella.Tefter.Web.ViewColumns
@inherits TucBaseViewColumn<TfSelectDisplayColumnComponentOptions>
@if (Context.Mode == TucComponentMode.Display)
{

	<div>
		@if (_selectedOption is not null)
		{
			<div style="@_getStyle()" class="tf-select-btn">
				@if (!String.IsNullOrWhiteSpace(_selectedOption?.IconName))
				{
					<div class="tf-select-btn__start">
						<FluentIcon Value="@TfConstants.GetIcon(_selectedOption.IconName)"
									Color="Color.Custom" CustomColor="@_selectedOption?.Color" />
					</div>
				}
				@if (!_selectedOption.HideLabel)
				{
					<div class="tf-select-btn__content">@_selectedOption?.Label</div>
				}
			</div>
		}
	</div>
}
else if (Context.Mode == TucComponentMode.Options)
{
	<FluentGrid>
		<FluentGridItem xs="12">
			<FluentInputLabel Label="@LOC("Options source type")" />
			<FluentRadioGroup Name="source" @bind-Value=@componentOptions.Source TValue="TfSelectDisplayColumnComponentOptionsSourceType">
				<FluentRadio Value="@TfSelectDisplayColumnComponentOptionsSourceType.ManuallySet">
					@TfSelectDisplayColumnComponentOptionsSourceType.ManuallySet.ToDescriptionString()
				</FluentRadio>
				<FluentRadio Value="@TfSelectDisplayColumnComponentOptionsSourceType.SpaceData">
					@TfSelectDisplayColumnComponentOptionsSourceType.SpaceData.ToDescriptionString()
				</FluentRadio>
			</FluentRadioGroup>
		</FluentGridItem>
	</FluentGrid>
	@if (componentOptions.Source == TfSelectDisplayColumnComponentOptionsSourceType.ManuallySet)
	{
		<FluentGrid>
			<FluentGridItem xs="12">
				<FluentTextArea Label="@LOC("Options")" Resize="@TextAreaResize.Vertical"
								Value="@componentOptions.OptionsString" Style="width:100%;" Rows="7"
								ValueChanged=@((x)=> OnOptionsChanged(nameof(componentOptions.OptionsString),x)) />
				<div class="tf-input-description">
					@((MarkupString)LOC(@"Options separated by new line. Each option supports comma separated settings:
			<br/>*value - required, text, converted automatically to column data type
			<br/>*label - text
			<br/>*iconName - text,fluent icon name
			<br/>*color - string or int. String is css color value, named color or fluent OfficeColor value as string. Int is converted to enum of fluent OfficeColor
			<br/>*backgroundColor - string or int. String is css color value, named color or fluent OfficeColor value as string. Int is converted to enum of fluent OfficeColor
			<br/>*hideLabel - text, converted to boolean"))
				</div>
			</FluentGridItem>
		</FluentGrid>
	}
	else if (componentOptions.Source == TfSelectDisplayColumnComponentOptionsSourceType.SpaceData)
	{
		<FluentGrid>
			<FluentGridItem xs="6">
				<FluentSelect TOption="TucSpaceData" Required=true
							  SelectedOption="_selectedSpaceData"
							  SelectedOptionChanged="@((x)=> _spaceDataChanged(x))"
							  OptionValue="((x)=> x.Id.ToString())"
							  OptionText="((x)=> x.Name)" Items="@TfAppState.Value.SpaceDataList" />
			</FluentGridItem>
			<FluentGridItem xs="6">
				<FluentInputLabel Label="@LOC("Hide Label")" />
				<FluentCheckbox Value="@componentOptions.SpaceDataHideLabel"
								ValueChanged=@((x)=> OnOptionsChanged(nameof(componentOptions.SpaceDataHideLabel),x))
								Label="@LOC("requires confirmation")" />
			</FluentGridItem>
		</FluentGrid>
		<FluentGrid>
			<FluentGridItem xs="6">
				<FluentTextField Label="@LOC("Value column name")"
								 Value="@componentOptions.SpaceDataValueColumnName" Style="width:100%;"
								 ValueChanged=@((x)=> OnOptionsChanged(nameof(componentOptions.SpaceDataValueColumnName),x)) />
				<div class="tf-input-description">@LOC("any column data")</div>
			</FluentGridItem>
			<FluentGridItem xs="6">
				<FluentTextField Label="@LOC("Label column name")"
								 Value="@componentOptions.SpaceDataLabelColumnName" Style="width:100%;"
								 ValueChanged=@((x)=> OnOptionsChanged(nameof(componentOptions.SpaceDataLabelColumnName),x)) />
				<div class="tf-input-description">@LOC("column data string or object that will be case to string")</div>
			</FluentGridItem>
		</FluentGrid>
		<FluentGrid>
			<FluentGridItem xs="6">
				<FluentTextField Label="@LOC("Color column name")"
								 Value="@componentOptions.SpaceDataColorColumnName" Style="width:100%;"
								 ValueChanged=@((x)=> OnOptionsChanged(nameof(componentOptions.SpaceDataColorColumnName),x)) />
				<div class="tf-input-description">@LOC("column data string or int. String is css color value. Int is converted to enum of fluent OfficeColor")</div>
			</FluentGridItem>
			<FluentGridItem xs="6">
				<FluentTextField Label="@LOC("Background color column name")"
								 Value="@componentOptions.SpaceDataBackgroundColorColumnName" Style="width:100%;"
								 ValueChanged=@((x)=> OnOptionsChanged(nameof(componentOptions.SpaceDataBackgroundColorColumnName),x)) />
				<div class="tf-input-description">@LOC("column datastring or int. String is css color value. Int is converted to enum of fluent OfficeColor")</div>
			</FluentGridItem>
		</FluentGrid>
		<FluentGrid>
			<FluentGridItem xs="6">
				<FluentTextField Label="@LOC("Icon column name")"
								 Value="@componentOptions.SpaceDataIconColumnName" Style="width:100%;"
								 ValueChanged=@((x)=> OnOptionsChanged(nameof(componentOptions.SpaceDataIconColumnName),x)) />
				<div class="tf-input-description">@LOC("column datastring, fluent icon name")</div>
			</FluentGridItem>
			<FluentGridItem xs="6"></FluentGridItem>
		</FluentGrid>
	}
}
else
{
	<div style="color:red">@LOC("Component Mode Not implemented")</div>
}


