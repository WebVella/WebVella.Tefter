@namespace WebVella.Tefter.Web.ViewColumns
@inherits TfBaseViewColumn<TfBooleanDisplayColumnComponentOptions>
@if (Context.Mode == TfComponentMode.Display)
{
	var value = GetDataObjectByAlias<bool>("Value", null);
	if (value is null) { }
	else if (value.Value)
	{
		if (!String.IsNullOrWhiteSpace(options.TrueValueOverrideText))
		{
			<div>@options.TrueValueOverrideText</div>
		}
		else if (options.TrueValueShowAsIcon)
		{
			<div style="text-align:center"><FluentIcon Value="@TfConstants.GetIcon("Checkmark")" Color="@Color.Success" /></div>
		}
		else
		{
			<div>@value.Value.ToString()</div>
		}
	}
	else
	{
		if (!String.IsNullOrWhiteSpace(options.FalseValueOverrideText))
		{
			<div>@options.FalseValueOverrideText</div>
		}
		else if (options.FalseValueShowAsIcon)
		{
			<div style="text-align:center"><FluentIcon Value="@TfConstants.GetIcon("Dismiss")" Color="@Color.Error" /></div>
		}
		else
		{
			<div>@value.Value.ToString()</div>
		}
	}
}
else if (Context.Mode == TfComponentMode.Options)
{

	<FluentInputLabel Label="TRUE value (text with priority)" />
	<FluentGrid>
		<FluentGridItem xs="6">
			<FluentTextField Value="@options.TrueValueOverrideText" Style="width:100%" Immediate ImmediateDelay="500"
							 ValueChanged=@((x)=> OptionsValueChanged(nameof(options.TrueValueOverrideText),x))
							 Placeholder="fill to override default value" />
		</FluentGridItem>
		<FluentGridItem xs="6">
			<FluentCheckbox Value="@options.TrueValueShowAsIcon"
							ValueChanged=@((x)=> OptionsValueChanged(nameof(options.TrueValueShowAsIcon),x))
							Label="render as icon" />
		</FluentGridItem>
	</FluentGrid>
	<FluentInputLabel Label="FALSE value (text with priority)" style="margin-top:1rem;" />
	<FluentGrid>
		<FluentGridItem xs="6">
			<FluentTextField Value="@options.FalseValueOverrideText" Style="width:100%" Immediate ImmediateDelay="500"
							 ValueChanged=@((x)=> OptionsValueChanged(nameof(options.FalseValueOverrideText),x))
							 Placeholder="fill to override default value" />
		</FluentGridItem>
		<FluentGridItem xs="6">
			<FluentCheckbox Value="@options.FalseValueShowAsIcon"
							ValueChanged=@((x)=> OptionsValueChanged(nameof(options.FalseValueShowAsIcon),x))
							Label="render as icon" />
		</FluentGridItem>
	</FluentGrid>
}
else
{
	<div style="color:red">@LOC("Component Mode Not implemented")</div>
}

