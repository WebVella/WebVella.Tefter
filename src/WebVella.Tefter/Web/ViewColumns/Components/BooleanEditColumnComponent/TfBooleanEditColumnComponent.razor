@namespace WebVella.Tefter.Web.ViewColumns
@inherits TfBaseViewColumn<TfBooleanEditColumnComponentOptions>
@if (Context.Mode == TfComponentMode.Display)
{
	var value = GetDataStructByAlias<bool>(_valueAlias, null);
	<div>
		@if (_isThreeState)
		{
			<FluentCheckbox ThreeState="true" @bind-Value="@_value" @bind-CheckState="_state"
							@bind-CheckState:after=_onValueChange
							Label="@_getLabel()" />
		}
		else
		{
			<FluentCheckbox ThreeState="false" @bind-Value="@_value"
							@bind-Value:after=_onValueChange
							Label="@_getLabel()" />
		}
	</div>

}
else if (Context.Mode == TfComponentMode.Options)
{
	<FluentGrid>
		<FluentGridItem xs="4">
			<FluentInputLabel Label="@LOC("Label")" />
			<FluentCheckbox Value="@options.ShowLabel" Style="height:32px;"
							ValueChanged=@((x)=> OnOptionsChanged(nameof(options.ShowLabel),x))
							Label="@LOC("show label")" />
		</FluentGridItem>
	</FluentGrid>
	<FluentGrid>
		<FluentGridItem xs="4">
			<FluentTextField Label="@LOC("TRUE label")"
							 Value="@options.TrueLabel" Style="width:100%"
							 ValueChanged=@((x)=> OnOptionsChanged(nameof(options.TrueLabel),x))
							 Placeholder="@LOC("empty shows a system one")" />
		</FluentGridItem>
		<FluentGridItem xs="4">
			<FluentTextField Label="@LOC("FALSE label")"
							 Value="@options.FalseLabel" Style="width:100%"
							 ValueChanged=@((x)=> OnOptionsChanged(nameof(options.FalseLabel),x))
							 Placeholder="@LOC("empty shows a system one")" />
		</FluentGridItem>
		<FluentGridItem xs="4">
			<FluentTextField Label="@LOC("NULL label")"
							 Value="@options.NullLabel" Style="width:100%"
							 ValueChanged=@((x)=> OnOptionsChanged(nameof(options.NullLabel),x))
							 Placeholder="@LOC("empty shows a system one")" />
		</FluentGridItem>
	</FluentGrid>
	<FluentGrid>
		<FluentGridItem xs="4">
			<FluentInputLabel Label="@LOC("Change confirmation")" />
			<FluentCheckbox Value="@options.ChangeRequiresConfirmation" Style="height:32px;"
							ValueChanged=@((x)=> OnOptionsChanged(nameof(options.ChangeRequiresConfirmation),x))
							Label="@LOC("requires confirmation")" />
		</FluentGridItem>
		<FluentGridItem xs="8">
			<FluentTextField Label="@LOC("Confirmation message")"
							 Value="@options.ChangeConfirmationMessage" Style="width:100%"
							 ValueChanged=@((x)=> OnOptionsChanged(nameof(options.ChangeConfirmationMessage),x))
							 Placeholder="@LOC("empty shows a system one")" />
		</FluentGridItem>
	</FluentGrid>
}
else
{
	<div style="color:red">@LOC("Component Mode Not implemented")</div>
}

