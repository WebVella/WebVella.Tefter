@inherits TfBaseComponent

@if (DataProviderDetailsState.Value.Provider is null || DataProviderDetailsState.Value.Provider.Columns is null
										|| DataProviderDetailsState.Value.Provider.Columns.Count == 0)
{
	<FluentMessageBar Title="@LOC("No columns")" AllowDismiss="false"
					  Intent="@MessageIntent.Info">@LOC("No columns are created yet for this data source")</FluentMessageBar>
}
else
{
	<FluentLabel Typo="Typography.H4" Style="margin:0 0 15px 0">@LOC("Synchronization key")</FluentLabel>
	<div class="tf-grid-wrapper">
		<table class="tf-grid">
			<thead class="tf-grid-thead">
				<tr class="tf-grid-tr">
					<th class="tf-grid-th" style="width:50px;"></th>
					<th class="tf-grid-th" style="width:250px;">name</th>
					<th class="tf-grid-th">details</th>
				</tr>
			</thead>
			<tbody class="tf-grid-tbody">
				@if (false)
				{
					<tr class="tf-grid-tr">
						<td class="tf-grid-td">
							<div>
								<FluentButton Appearance="@Appearance.Outline" IconStart="@(new Icons.Regular.Size20.Edit())"
											  Title="@LOC("Edit key")" />
								<FluentButton Appearance="@Appearance.Outline" Title="@LOC("Delete key")">
									<FluentIcon Color="@Color.Error" Value="@(new Icons.Regular.Size20.Delete())" />
								</FluentButton>
							</div>
						</td>
						<td class="tf-grid-td"><div>dasd</div></td>
						<td class="tf-grid-td">
							<div>
								<FluentStack>
									<FluentBadge Appearance="Appearance.Accent">Column1</FluentBadge>
									<span>+</span>
									<FluentBadge Appearance="Appearance.Accent">Column2</FluentBadge>
									<span>+</span>
									<FluentBadge Appearance="Appearance.Accent">Column3</FluentBadge>
								</FluentStack>
							</div>
						</td>
					</tr>
				}
			</tbody>
			<tfoot class="tf-grid-tfoot">
				<tr class="tf-grid-tr">
					<td class="tf-grid-td" colspan="2">
						<div>
							<FluentButton Appearance="@Appearance.Outline">
								@LOC("Synchronization key")
								<FluentIcon Value="@(new Icons.Regular.Size20.Add())" Color="@Color.Accent" Slot="start" />
							</FluentButton>
						</div>
					</td>
					<td class="tf-grid-td">
						<div style="color:var(--accent-fill-rest)">
							@LOC("without this key, data cannot be synchronized by this provider")
						</div>
					</td>
				</tr>
			</tfoot>
		</table>
	</div>
	<FluentStack Orientation="@Orientation.Horizontal" Style="justify-content:space-between;">
		<FluentLabel Typo="Typography.H4" Style="margin:0 0 15px 0">@LOC("Shared keys")</FluentLabel>

	</FluentStack>
	<div class="tf-grid-wrapper">
		<table class="tf-grid">
			<thead class="tf-grid-thead">
				<tr class="tf-grid-tr">
					<th class="tf-grid-th" style="width:50px;"></th>
					<th class="tf-grid-th">name</th>
					<th class="tf-grid-th">type</th>
					<th class="tf-grid-th" style="width:120px;">created on</th>
					<th class="tf-grid-th">details</th>
				</tr>
			</thead>
			<tbody class="tf-grid-tbody">
				@* 				@foreach (var context in DataProviderDetailsState.Value.Provider.Columns)
			{
			<tr @key=context.Id class="tf-grid-tr">
			<td class="tf-grid-td">
			<div>
			<FluentButton Appearance="@Appearance.Outline" IconStart="@(new Icons.Regular.Size20.Edit())"
			Title="@LOC("Edit column")" OnClick="@(()=> _editColumn(context))"/>
			<FluentButton Appearance="@Appearance.Outline" OnClick="@(()=> _deleteColumn(context))" Title="@LOC("Delete column")">
			<FluentIcon Color="@Color.Error" Value="@(new Icons.Regular.Size20.Delete())" />
			</FluentButton>
			</div>
			</td>
			<td class="tf-grid-td">
			<div>
			<div>@context.DbName</div>
			<div class="td-description">@context.SourceName</div>
			</div>
			</td>
			<td class="tf-grid-td">
			<div>
			<div>@context.DbType</div>
			<div class="td-description">@context.SourceType</div>
			</div>
			</td>
			<td class="tf-grid-td">
			<div title="@context.CreatedOn.ToShortDateString() @context.CreatedOn.ToShortTimeString()">@context.CreatedOn.ToShortDateString()</div>
			</td>
			<td class="tf-grid-td">
			<div>
			<FluentStack>
			@if (context.IsNullable)
			{
			<FluentBadge Appearance="@Appearance.Accent">nullable</FluentBadge>
			}
			@if (context.IsUnique)
			{
			<FluentBadge Appearance="@Appearance.Accent">unique</FluentBadge>
			}
			@if (context.IsSearchable)
			{
			<FluentBadge Appearance="@Appearance.Accent">searchable [@context.PreferredSearchType]</FluentBadge>
			}
			@if (context.IncludeInTableSearch)
			{
			<FluentBadge Appearance="@Appearance.Accent">global search</FluentBadge>
			}
			@if (context.IsSortable)
			{
			<FluentBadge Appearance="@Appearance.Accent">sortable</FluentBadge>
			}
			@if (context.AutoDefaultValue)
			{
			<FluentBadge Appearance="@Appearance.Accent">autogenerated</FluentBadge>
			}
			</FluentStack>
			</div>
			</td>
			</tr>
			} *@
			</tbody>
			<tfoot class="tf-grid-tfoot">
				<tr class="tf-grid-tr">
					<td class="tf-grid-td" colspan="5">
						<div>
							<FluentButton Appearance="@Appearance.Outline">
								@LOC("Shared key")
								<FluentIcon Value="@(new Icons.Regular.Size20.Add())" Color="@Color.Accent" Slot="start" />
							</FluentButton>
						</div>
					</td>
				</tr>
			</tfoot>
		</table>
	</div>

}

