@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@if (SpaceState.Value.Space is null)
{
	<FluentBodyContent Class="content-body">
		<div class="content-inner">
			<FluentMessageBar Title="No space found"
							  Style="@("border: 1px solid var(--neutral-base-color)")"
							  Intent="MessageIntent.Info"
							  Type="@MessageType.Notification"
							  AllowDismiss="false">
				No spaces found yet notification
			</FluentMessageBar>
		</div>
	</FluentBodyContent>
}
else if (SpaceState.Value.SpaceViewList.Count == 0)
{
	<FluentBodyContent Class="content-body">
		<div class="content-inner">
			<FluentMessageBar Title="No existing views"
							  Style="@("border: 1px solid var(--neutral-base-color)")"
							  Intent="MessageIntent.Info"
							  Type="@MessageType.Notification"
							  AllowDismiss="false">
				Space view created yet
			</FluentMessageBar>
		</div>
	</FluentBodyContent>
}
else if (SpaceState.Value.RouteSpaceViewId is null)
{
	<FluentBodyContent Class="content-body">
		<div class="content-inner">
			@* 			<FluentMessageBar Title="Missing redirect"
		Style="border: 1px solid var(--neutral-base-color)"
		Intent="MessageIntent.Warning"
		Type="@MessageType.Notification"
		AllowDismiss="false">
		Should redirect to the first view
		</FluentMessageBar> *@
		</div>
	</FluentBodyContent>
}
else if (SpaceState.Value.SpaceView is null && SpaceState.Value.RouteSpaceViewId is not null)
{
	<FluentBodyContent Class="content-body">
		<div class="content-inner">
			<FluentMessageBar Title="No space view found"
							  Style="@("border: 1px solid var(--neutral-base-color)")"
							  Intent="MessageIntent.Info"
							  Type="@MessageType.Notification"
							  AllowDismiss="false">
				Space view not found
			</FluentMessageBar>
		</div>
	</FluentBodyContent>
}
else
{
	@if (ScreenStateSidebarExpanded.Value)
	{
		<FluentStack Orientation="Orientation.Vertical" Class="sidebar with-toolbar" Style="@SpaceState.Value.SpaceSidebarStyle">
			<TfSpaceViewNavigation />
		</FluentStack>
	}
	<FluentBodyContent Class="content-body with-toolbar">
		<TfSpaceViewToolbar />
		<div class="content-inner">
			<div class="tfdt">
				<div class="tfdt__content">
					<div class="tf-grid-wrapper">
						<table class="tf-grid">
							<thead class="tf-grid-thead">
								<tr class="tf-grid-thead-bkg" style="@($"background-color:{SpaceState.Value.SpaceBackgkroundColor}")"></tr>
								<tr class="tf-grid-tr">
									<th class="tf-grid-th tf-grid-th--check"><FluentCheckbox /></th>
									@foreach (var column in SpaceState.Value.SpaceViewColumnList.OrderBy(x => x.Position))
									{
										<th class="tf-grid-th" data-query-name="@column.QueryName" style="@column.Style">
											<div>@column.Title</div>
										</th>
									}
								</tr>
							</thead>
							<tbody class="tf-grid-tbody">
								@if (UC.IsBusy)
								{
									<tr class="tf-grid-tr">
										<td class="tf-grid-td" colspan="@(SpaceState.Value.SpaceViewColumnList.Count + 1)"><div>@LOC("Loading...")</div></td>
									</tr>
								}
								else if (SpaceState.Value.SpaceViewData is null)
								{
									<tr class="tf-grid-tr">
										<td class="tf-grid-td" colspan="@(SpaceState.Value.SpaceViewColumnList.Count + 1)"><div>@LOC("Space data not found")</div></td>
									</tr>
								}
								else if (SpaceState.Value.SpaceViewData.Rows.Count == 0)
								{
									<tr class="tf-grid-tr">
										<td class="tf-grid-td" colspan="@(SpaceState.Value.SpaceViewColumnList.Count + 1)"><div>@LOC("No data")</div></td>
									</tr>
								}
								else
								{
									for (int i = 0; i < SpaceState.Value.SpaceViewData.Rows.Count; i++)
									{
										<tr @key=@i class="tf-grid-tr">
											<td class="tf-grid-td tf-grid-td--check"><div><FluentCheckbox /></div></td>
											@foreach (var column in SpaceState.Value.SpaceViewColumnList)
											{
												<td class="tf-grid-td">
													<DynamicComponent Type="column.ComponentType" Parameters="@_getColumnComponentContext(column, SpaceState.Value.SpaceViewData,i)" />
												</td>
											}
										</tr>
									}


								}
							</tbody>
						</table>

					</div>
				</div>
				<div class="tfdt__pager">
					<TfPager Page="@UC.Page" GoLast="@_goLastPage" GoNext="@_goNextPage"
							 GoFirst="@_goFirstPage" GoPrevious="@_goPreviousPage" GoOnPage="@_goOnPage" />
				</div>
			</div>
		</div>
	</FluentBodyContent>
}