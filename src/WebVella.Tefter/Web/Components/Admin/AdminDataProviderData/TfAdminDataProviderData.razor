@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent

@{
	var columnCount = 0;
}
@if (TfAppState.Value.AdminDataProviderData is not null)
{
	<div class="tfdt">
		<div class="tfdt__toolbar" style="flex:1 1 auto;display:flex;justify-content:space-between;">
			<div style="flex:1 1 auto">
				<FluentStack>
					<FluentSearch Value="@_search" ValueChanged="_searchChanged" />
					<FluentButton Id="view-filter-selector" Title="toggle system columns" OnClick="_toggleSystemColumns"
								  Appearance="@(_showSystemColumns ? Appearance.Accent : Appearance.Outline)">
						<span>system</span>
						<FluentBadge Appearance="Appearance.Neutral">@TfAppState.Value.AdminDataProvider.SystemColumns.Count</FluentBadge>
					</FluentButton>
					<FluentButton Id="view-filter-selector" Title="toggle shared key columns" OnClick="_toggleSharedKeyColumns"
								  Appearance="@(_showSharedKeyColumns ? Appearance.Accent : Appearance.Outline)">
						<span>shared key</span>
						<FluentBadge Appearance="Appearance.Neutral">@TfAppState.Value.AdminDataProvider.SharedColumns.Count</FluentBadge>
					</FluentButton>
					<FluentButton Id="view-filter-selector" Title="toggle custom columns" OnClick="_toggleCustomColumns"
								  Appearance="@(_showCustomColumns ? Appearance.Accent : Appearance.Outline)">
						<span>custom</span>
						<FluentBadge Appearance="Appearance.Neutral">@TfAppState.Value.AdminDataProvider.Columns.Count</FluentBadge>
					</FluentButton>
				</FluentStack>
			</div>
			<div style="flex:0 0 auto">
				<FluentButton OnClick="_deleteAllData" Appearance="@Appearance.Outline">
					<FluentIcon Value="@TfConstants.DeleteIcon" Slot="start" Color="@Color.Error" />
					@LOC("delete all data")
				</FluentButton>
			</div>
		</div>
		<div class="tfdt__content">
			<div class="tf-grid-wrapper">
				<table class="tf-grid">
					<thead class="tf-grid-thead">
						<tr class="tf-grid-thead-bkg" style="@($"background-color:{TfConstants.AdminBackgkroundColor}")"></tr>
						<tr class="tf-grid-tr">
							@foreach (var column in TfAppState.Value.AdminDataProviderData.Columns)
							{
								if (!_showSystemColumns && column.IsSystem && !column.IsShared) { continue; }
								if (!_showSharedKeyColumns && column.IsSystem && column.IsShared) { continue; }
								if (!_showCustomColumns && !column.IsSystem) { continue; }
								<th class="tf-grid-th">@column.Name</th>
								columnCount++;
							}
						</tr>
					</thead>
					<tbody class="tf-grid-tbody">
						@if (_isListBusy)
						{
							<tr class="tf-grid-tr">
								<td class="tf-grid-td" colspan="@columnCount">Loading...</td>
							</tr>
						}
						else
						{
							foreach (TfDataRow row in TfAppState.Value.AdminDataProviderData.Rows)
							{
								<tr @key=@row["tf_id"] class="tf-grid-tr">
									@foreach (var column in TfAppState.Value.AdminDataProviderData.Columns)
									{
										if (!_showSystemColumns && column.IsSystem && !column.IsShared) { continue; }
										if (!_showSharedKeyColumns && column.IsSystem && column.IsShared) { continue; }
										if (!_showCustomColumns && !column.IsSystem) { continue; }
										<td class="tf-grid-td">
											<div>@row[column.Name]</div>
										</td>
									}
								</tr>
							}
							@if (TfAppState.Value.AdminDataProviderData.Rows.Count == 0)
							{
								<tr class="tf-grid-tr">
									<td class="tf-grid-td" colspan="@columnCount">No records found</td>
								</tr>
							}
						}
					</tbody>
				</table>

			</div>
		</div>
		<div class="tfdt__pager">
			<TfPager Page="@TfAppState.Value.AdminDataProviderDataPage" GoLast="@_goLastPage" GoNext="@_goNextPage"
					 GoFirst="@_goFirstPage" GoPrevious="@_goPreviousPage" GoOnPage="@_goOnPage" />
		</div>
	</div>
}



