@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@{
	var columnCount = 0;
}
<TfLayoutBodyMain HeaderClass="aside-tabs">
	<Header>
		<TfPageHeader>@TfAppState.Value.AdminDataProvider?.Name</TfPageHeader>
	</Header>
	<HeaderAside>
		<TfAdminDataProviderDetailsNav />
	</HeaderAside>
	<Toolbar>
		<FluentStack>
			<FluentSearch Value="@TfAppState.Value.Route?.Search" ValueChanged="_onSearch" AutoComplete="off" Placeholder="@LOC("search...")" />
			<FluentButton Id="view-filter-selector" Title="toggle system columns" OnClick="_toggleSystemColumns"
						  Appearance="Appearance.Outline">
				<FluentIcon Slot="start" Value="@(_showSystemColumns ? TfConstants.GetIcon("Checkmark").WithColor(Color.Success) : TfConstants.GetIcon("Dismiss").WithColor(Color.Error))" />
				<span>system</span>
				<span slot="end">
					<FluentBadge Appearance="Appearance.Neutral">@TfAppState.Value.AdminDataProvider?.SystemColumns.Count</FluentBadge>
				</span>
			</FluentButton>
			<FluentButton Id="view-filter-selector" Title="toggle join key columns" OnClick="_toggleJoinKeyColumns"
						  Appearance="Appearance.Outline">
				<FluentIcon Slot="start" Value="@(_showJoinKeyColumns ? TfConstants.GetIcon("Checkmark").WithColor(Color.Success) : TfConstants.GetIcon("Dismiss").WithColor(Color.Error))" />
				<span>join key</span>
				<span slot="end">
					<FluentBadge Appearance="Appearance.Neutral">@TfAppState.Value.AdminDataProvider?.SharedColumns.Count</FluentBadge>
				</span>
			</FluentButton>
			<FluentButton Id="view-filter-selector" Title="toggle custom columns" OnClick="_toggleCustomColumns"
						  Appearance="@Appearance.Outline">
				<FluentIcon Slot="start" Value="@(_showCustomColumns ? TfConstants.GetIcon("Checkmark").WithColor(Color.Success) : TfConstants.GetIcon("Dismiss").WithColor(Color.Error))" />
				<span>custom</span>
				<span slot="end">
					<FluentBadge Appearance="Appearance.Neutral">@TfAppState.Value.AdminDataProvider?.Columns.Count</FluentBadge>
				</span>
			</FluentButton>
		</FluentStack>
	</Toolbar>
	<ToolbarAside>
		<FluentStack VerticalAlignment="@VerticalAlignment.Center">
			<div style="margin-right:10px;color:var(--neutral-foreground-hint)">@LOC("{0} total rows", _totalRows)</div>
			<FluentButton OnClick="_deleteAllData" Appearance="@Appearance.Outline">
				<FluentIcon Value="@TfConstants.DeleteIcon" Slot="start" Color="@Color.Error" />
				@LOC("delete all data")
			</FluentButton>
		</FluentStack>
	</ToolbarAside>
	<ChildContent>
		@if (TfAppState.Value.AdminDataProviderData is not null && (TfAppState.Value.AdminDataProviderData.Rows.Count > 0 || TfAppState.Value.Route.Page != 1))
		{
			<div class="tf-grid-wrapper">
				<table class="tf-grid">
					<thead class="tf-grid-thead">
						<tr class="tf-grid-thead-bkg"></tr>
						<tr class="tf-grid-tr">
							@foreach (var column in TfAppState.Value.AdminDataProviderData.Columns)
							{
								if (!_columnIsVisible(column)) { continue; }
								<th class="tf-grid-th">@column.Name</th>
								columnCount++;
							}
						</tr>
					</thead>
					<tbody class="tf-grid-tbody">
						@if (_isDataLoading)
						{
							<tr class="tf-grid-tr">
								<td class="tf-grid-td" colspan="@columnCount"><div>Loading...</div></td>
							</tr>
						}
						else
						{
							foreach (TfDataRow row in TfAppState.Value.AdminDataProviderData.Rows)
							{
								<tr @key=@row["tf_id"] class="tf-grid-tr">
									@foreach (var column in TfAppState.Value.AdminDataProviderData.Columns)
									{
										if (!_columnIsVisible(column)) { continue; }
										<td class="tf-grid-td">
											@if (column.IsJoinColumn)
											{
												<div>@(String.Join(", ", (List<string>)row[column.Name]))</div>
											}
											else
											{
												<div>@row[column.Name]</div>
											}
										</td>
									}
								</tr>
							}
							@if (TfAppState.Value.AdminDataProviderData.Rows.Count == 0)
							{
								<tr class="tf-grid-tr">
									<td class="tf-grid-td" colspan="@columnCount">No records found</td>
								</tr>
							}
						}
					</tbody>
				</table>

			</div>
		}
		else if (TfAppState.Value.AdminDataProviderData is not null && TfAppState.Value.AdminDataProviderData.Columns.Count == 0)
		{
			<FluentMessageBar AllowDismiss="false">@LOC("No columns are created for this data provider yet")</FluentMessageBar>
		}
		else
		{
			<FluentMessageBar AllowDismiss="false">@LOC("No records")</FluentMessageBar>
		}
	</ChildContent>
	<Footer>
		<div class="tf-grid__pager">
			<TfPager Page="@(TfAppState.Value.Route?.Page ?? 1)" GoLast="@_goLastPage" GoNext="@_goNextPage"
					 GoFirst="@_goFirstPage" GoPrevious="@_goPreviousPage" GoOnPage="@_goOnPage"
					 PageSize="@(TfAppState.Value.Route?.PageSize ?? TfConstants.PageSize)" ChangePageSize="_pageSizeChange" />
		</div>
	</Footer>
</TfLayoutBodyMain>

