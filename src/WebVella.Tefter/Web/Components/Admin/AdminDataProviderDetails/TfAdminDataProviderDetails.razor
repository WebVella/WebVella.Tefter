@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
<TfCard>
	<TitleTemplate>
		<TfAdminDataProviderDetailsActions />
	</TitleTemplate>
	<ChildContent>
		<FluentGrid>
			<FluentGridItem xs="5">
				<FluentTextField TextFieldType="@TextFieldType.Text" Value="@TfAppState.Value.AdminDataProvider?.Name"
								 Label="@LOC("Name")" Style="width:100%" ReadOnly="true" />
			</FluentGridItem>
			<FluentGridItem xs="5">
				<FluentTextField TextFieldType="@TextFieldType.Text" Value="@TfAppState.Value.AdminDataProvider?.ProviderType.Name"
								 Label="@LOC("Type")" Style="width:100%" ReadOnly="true" />
			</FluentGridItem>
			<FluentGridItem xs="2">
				<FluentNumberField TValue="int?" Value="@TfAppState.Value.AdminDataProvider?.Index"
								   Label="@LOC("Index")" Style="width:100%" ReadOnly="true" Disabled="true" />
			</FluentGridItem>
		</FluentGrid>
		<FluentGrid>
			<FluentGridItem xs="12">
				<FluentInputLabel>@LOC("Supported Source data types")</FluentInputLabel>
				@{
					var supportedDataTypes = TfAppState.Value.AdminDataProvider?.ProviderType.SupportedSourceDataTypes;
				}
				@if (supportedDataTypes is null || supportedDataTypes.Count == 0)
				{
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning" Title="@LOC("Warning")">
						<div>@LOC("The data provider does not support any  type of source data!")</div>
					</FluentMessageBar>
				}
				else
				{
					<FluentStack Orientation="@Orientation.Horizontal">
						@foreach (var item in supportedDataTypes.OrderBy(x => x.Name))
						{
							<FluentBadge Appearance="Appearance.Accent">@item.Name</FluentBadge>
						}
					</FluentStack>
				}
			</FluentGridItem>
		</FluentGrid>
		<FluentDivider Style="margin:15px 0" />
		<FluentGrid Style="margin-top:3px;">
			<FluentGridItem xs="12">
				@if (TfAppState.Value.AdminDataProvider?.ProviderType.SettingsComponentType is null) { }
				else if (TfAppState.Value.AdminDataProvider?.ProviderType.SettingsComponentType.Implements(typeof(ITfDynamicComponent<>),typeof(TfDataProviderSettingsComponentContext)) ?? false)
				{
					if (TfAppState.Value.AdminDataProvider?.ProviderType.SettingsComponentType is not null)
					{
						<TfErrorBoundry>
							<DynamicComponent Type="TfAppState.Value.AdminDataProvider?.ProviderType.SettingsComponentType" Parameters="@_getDynamicComponentParams()" />
						</TfErrorBoundry>
					}
				}
				else
				{
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning" Title="@LOC("Warning")">
						<div>@LOC(" Data provider settings component does not implement ITfDataProviderSettings and cannot be rendered!")</div>
					</FluentMessageBar>
				}
			</FluentGridItem>
		</FluentGrid>
	</ChildContent>
</TfCard>


