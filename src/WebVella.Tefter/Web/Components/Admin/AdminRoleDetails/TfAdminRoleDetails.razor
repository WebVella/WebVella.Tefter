@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@if (TfAppState.Value.AdminManagedRole is not null)
{
	<TfCard>
		<TitleTemplate>
			<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.SpaceBetween" VerticalAlignment="@VerticalAlignment.Center">
				<h3>@LOC("Details")</h3>
				<div>
					<TfAdminRoleDetailsActions />
				</div>
			</FluentStack>
		</TitleTemplate>
		<ChildContent>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" Value="@TfAppState.Value.AdminManagedRole?.Name"
									 ReadOnly="true" Label="@LOC("Email")" Style="width:100%" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentInputLabel>@LOC("Type")</FluentInputLabel>
					<TfPlainTextField>
						<FluentStack VerticalAlignment="@VerticalAlignment.Center" Class="fluent-plaintext-field">
							@if (TfAppState.Value.AdminManagedRole?.IsSystem ?? false)
							{
								<FluentIcon Value="@TfConstants.GetIcon("ShieldError").WithColor(Color.Accent)"></FluentIcon>
								<span>@LOC("system role")</span>
							}
							else
							{
								<FluentIcon Value="@TfConstants.GetIcon("Person").WithColor(Color.Info)"></FluentIcon>
								<span>@LOC("user created")</span>
							}
						</FluentStack>
					</TfPlainTextField>
				</FluentGridItem>
			</FluentGrid>
		</ChildContent>
	</TfCard>

	<TfCard Style="margin-top:30px;">
		<TitleTemplate>
			<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.SpaceBetween" VerticalAlignment="@VerticalAlignment.Center">
				<h3>@LOC("Users with the role")</h3>
				<div>
					<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.End">
						@if (_userOptions.Count > 0)
						{
							<FluentSelect OptionSelected="(x => x.Id == _selectedUser?.Id)"
										  @bind-SelectedOption="@_selectedUser"
										  Disabled="_submitting"
										  TOption="TucUser" Required="false"
										  Items="@_userOptions" Style="width:200px"
										  Placeholder="@LOC("select user")">
								<OptionTemplate Context="option">
									<span>@option.Email</span>
								</OptionTemplate>
							</FluentSelect>
						}
						else
						{
							<FluentTextField TextFieldType="@TextFieldType.Text" Value=@LOC("all users added") Style="width:200px" Disabled="true" />
						}
						<FluentButton OnClick="_addUser" IconStart="@TfConstants.AddIcon" Appearance="@Appearance.Outline" Disabled="@(_userOptions.Count == 0 || _submitting)">@LOC("Add new")</FluentButton>
					</FluentStack>
				</div>
			</FluentStack>
		</TitleTemplate>
		<ChildContent>
			@if (_roleUsers.Count == 0)
			{
				<FluentMessageBar Intent="@MessageIntent.Warning" AllowDismiss=false>@LOC("This role has no users assigned")</FluentMessageBar>
			}
			else
			{
				<div class="tf-grid-wrapper">
					<table class="tf-grid">
						<thead class="tf-grid-thead">
							<tr class="tf-grid-thead-bkg"></tr>
							<tr class="tf-grid-tr">
								<th class="tf-grid-th">email</th>
								<th class="tf-grid-th">name</th>
								<th class="tf-grid-th"></th>
							</tr>
						</thead>
						<tbody class="tf-grid-tbody">
							@foreach (var context in _roleUsers)
							{
								<tr @key=@Guid.NewGuid() class="tf-grid-tr">
									<td class="tf-grid-td">
										<div>@context.Email</div>
									</td>
									<td class="tf-grid-td">
										<div>@context.Names</div>
									</td>
									<td class="tf-grid-td" style="width:1%;">
										<div>
											@if (TfAppState.Value.CurrentUser.Id == context.Id
																			&& TfAppState.Value.AdminManagedRole.Id == TfConstants.ADMIN_ROLE_ID)
											{
												<FluentButton Appearance="@Appearance.Outline" Title="@LOC("the current user cannot unassign admin role to self")"
															  Disabled="true">
													<FluentIcon Value="@TfConstants.LockIcon" Slot="start" />
													<span>@LOC("locked")</span>
												</FluentButton>
											}
											else
											{
												<FluentButton Appearance="@Appearance.Outline" OnClick="@(() => _removeUser(context))" Title="@LOC("Remove the user")"
															  Disabled="_submitting">
													<FluentIcon Color="@Color.Error" Value="@TfConstants.DeleteIcon" Slot="start" />
													<span>@LOC("remove")</span>
												</FluentButton>
											}
										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
		</ChildContent>
	</TfCard>

}
else
{
	<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Info">@LOC("Role not found")</FluentMessageBar>
}

