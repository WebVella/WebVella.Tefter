<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Are you sure that you need this column deleted?" xml:space="preserve">
    <value>Сигурни ли сте, че искате да изтриете тази колона?</value>
  </data>
  <data name="Are you sure that you need this key deleted?" xml:space="preserve">
    <value>Сигурни ли сте, че искате да изтриете този ключ?</value>
  </data>
  <data name="Column successfully updated!" xml:space="preserve">
    <value>Колоната е редактирана успешно!</value>
  </data>
  <data name="Delete column" xml:space="preserve">
    <value>Изтриване на колоната</value>
  </data>
  <data name="Delete key" xml:space="preserve">
    <value>Изтриване на ключ</value>
  </data>
  <data name="Edit column" xml:space="preserve">
    <value>Редакция на колоната</value>
  </data>
  <data name="Edit key" xml:space="preserve">
    <value>Редакция на ключ</value>
  </data>
  <data name="Missing Synchronization Key" xml:space="preserve">
    <value>Липсващ ключ за синхронизация</value>
  </data>
  <data name="No keys" xml:space="preserve">
    <value>Няма ключове</value>
  </data>
  <data name="No shared columns are matching any of the join keys for this data source" xml:space="preserve">
    <value>Няма споделени колони, които да използват свързващ ключ на този източник</value>
  </data>
  <data name="No shared columns matched" xml:space="preserve">
    <value>Няма споделени колони</value>
  </data>
  <data name="No join keys are created yet for this data provider" xml:space="preserve">
    <value>Все още няма създадени свързващи ключове за този доставчик на данни</value>
  </data>
  <data name="Join key" xml:space="preserve">
    <value>Свързващ ключ</value>
  </data>
  <data name="The column is successfully deleted!" xml:space="preserve">
    <value>Колоната е успешно изтрита!</value>
  </data>
  <data name="The key is successfully deleted!" xml:space="preserve">
    <value>Ключът е успешно изтрит!</value>
  </data>
  <data name="The key was successfully updated!" xml:space="preserve">
    <value>Ключът е редактиран успешно!</value>
  </data>
  <data name="This data source is missing its syncronization key. No data syncronization is possible until this key is created. Once you have added the schema columns, you can do that in the next 'Join Keys' tab." xml:space="preserve">
    <value>За този доставчик на данни все още няма създаден синхронизационен ключ. Синхронизацията на данни е невъзможно без него. Щом добавите колони в схемата, може да го създадете в следващото меню 'Свързващи ключове'.</value>
  </data>
  <data name="This will delete all related data too!" xml:space="preserve">
    <value>Това ще изтрие и всички свързани данни!</value>
  </data>
  <data name="Columns that match one of the join keys implemented for this data source" xml:space="preserve">
    <value>Колони, които съвпадат с един от ключовете за присъединяване, имплементирани за този източник на данни</value>
  </data>
  <data name="Implemented Data Identities" xml:space="preserve">
    <value>Приложени Идентификатори на данни</value>
  </data>
  <data name="Joined Shared columns" xml:space="preserve">
    <value>Свързани споделени колони</value>
  </data>
  <data name="For data from different providers to be joined, they must implement at least one common join key." xml:space="preserve">
    <value>За да могат данните от различни доставчици да бъдат обединени, те трябва да реализират поне един общ ключ за присъединяване.</value>
  </data>
  <data name="Aux Data providers" xml:space="preserve">
    <value>Допълнителни източници на данни</value>
  </data>
  <data name="No data providers can be joined" xml:space="preserve">
    <value>Няма свързани източници на данни</value>
  </data>
  <data name="When data providers share at least one common identity, their data can be joined. Only the data from the primary provider is modifiable." xml:space="preserve">
    <value>Когато доставчиците на данни споделят поне една обща идентичност, техните данни могат да бъдат обединени. Могат да се променят само данните от основния доставчик.</value>
  </data>
</root>