@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@namespace WebVella.Tefter.Web.Components
@inherits TfFormBaseComponent
@* Header *@
<FluentDialogHeader ShowDismiss="true">
	<FluentLabel Typo="Typography.PaneHeader">@_title</FluentLabel>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	@if (String.IsNullOrWhiteSpace(_error) && !_isBusy)
	{
		<FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="_iconBtn"
					  Loading="_isSubmitting" Disabled="_isSubmitting">@_btnText</FluentButton>
	}
	<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">@LOC("Cancel")</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	<div>
		@if (_isBusy)
		{
			<TfLoadingPane />
		}
		else if (!string.IsNullOrWhiteSpace(_error))
		{
			<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>

		}
		else
		{
			<FluentEditForm EditContext="EditContext" OnValidSubmit="_save"
							FormName="submit-form" class="tf-form" novalidate>
				<DataAnnotationsValidator />
				<TfDivider Style="margin-bottom:15px" Title="PROVIDER" />
				<FluentGrid>
					<FluentGridItem xs="4">
						<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=@_form.DbName
										 Label="@LOC("column name")" Style="width:100%"
										 Disabled="!_isCreate" AutoComplete="off" />
						<FluentValidationMessage For="@(() => _form.DbName)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentSelect OptionSelected="(x => x.Name == _selectedDbType?.Name)"
									  @bind-SelectedOption="@_selectedDbType"
									  TOption="TucDatabaseColumnTypeInfo"
									  Items="@_selectedProviderType.SupportedDatabaseColumnTypes" Style="width:100%" Placeholder="@LOC("select SOURCE column type")"
									  OptionValue="@(p => p.Name)"
									  OptionText="@(p => p.Name)"
									  Label="@LOC("data type")" Disabled="!_isCreate" />
						<FluentValidationMessage For="@(() => _form.DbType)" />
					</FluentGridItem>
				</FluentGrid>
				<TfDivider Style="margin:15px 0" Title="SOURCE" />
				<FluentGrid>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Data Link")" />
						<FluentSwitch @bind-Value=@_form.IsDetached>@LOC("detached from source")</FluentSwitch>
						<FluentValidationMessage For="@(() => _form.IsDetached)" />
					</FluentGridItem>
					@if (!_form.IsDetached)
					{
						<FluentGridItem xs="4">
							<FluentTextField TextFieldType="@TextFieldType.Text" Value=@_form.SourceName ValueChanged="(x=> _sourceColumnNameChanged(x))"
											 Label="@LOC("column name")" Style="width:100%" AutoComplete="off"
											 Placeholder="@LOC("leave empty, if no source")" />
							<FluentValidationMessage For="@(() => _form.SourceName)" />
						</FluentGridItem>
						<FluentGridItem xs="4">
							<FluentSelect OptionSelected="(x => x.Name == _selectedProviderType?.Name)"
										  SelectedOption="@_selectedProviderType" TOption="TucDataProviderTypeDataTypeInfo"
										  SelectedOptionChanged="_selectionSourceTypeChanged"
										  Items="@_providerTypeOptions" Style="width:100%"
										  OptionValue="@(p => p.Name)"
										  OptionText="@(p => p.Name)"
										  Label="@LOC("column type")" />
							<FluentValidationMessage For="@(() => _form.SourceType)" />
						</FluentGridItem>
					}
					else
					{
						<FluentGridItem xs="8" Style="display:flex;align-items:end">
							<FluentMessageBar Intent="@MessageIntent.Info" AllowDismiss="false">@LOC("data stored but NOT synchronized")</FluentMessageBar>
						</FluentGridItem>
					}
				</FluentGrid>
				<TfDivider Style="margin:15px 0" Title="OPTIONS" />
				<FluentGrid>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Nullable")" />
						<FluentSwitch @bind-Value=@_form.IsNullable>@LOC("can be NULL")</FluentSwitch>
						<FluentValidationMessage For="@(() => _form.IsNullable)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=@_form.DefaultValue
										 Label="@LOC("Default value")" Style="width:100%" AutoComplete="off" />
						<FluentValidationMessage For="@(() => _form.DefaultValue)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						@if (_selectedDbType.SupportAutoDefaultValue)
						{
							<FluentInputLabel Label="@LOC("Autogenerated")" />
							<FluentSwitch @bind-Value=@_form.AutoDefaultValue>@LOC("autogenerate value")</FluentSwitch>
							<FluentValidationMessage For="@(() => _form.AutoDefaultValue)" />
						}
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Unique")" />
						<FluentSwitch @bind-Value=@_form.IsUnique>@LOC("only unique values")</FluentSwitch>
						<FluentValidationMessage For="@(() => _form.IsUnique)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Sortable")" />
						<FluentSwitch @bind-Value=@_form.IsSortable>@LOC("used for sorting")</FluentSwitch>
						<FluentValidationMessage For="@(() => _form.IsSortable)" />
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Searchable")" />
						<FluentSwitch @bind-Value=@_form.IsSearchable>@LOC("used in filters")</FluentSwitch>
						<FluentValidationMessage For="@(() => _form.IsSearchable)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Global search")" />
						<FluentSwitch @bind-Value=@_form.IncludeInTableSearch>@LOC("included")</FluentSwitch>
						<FluentValidationMessage For="@(() => _form.IncludeInTableSearch)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentSelect OptionSelected="(x => x.Name == _form.PreferredSearchType?.Name)"
									  @bind-SelectedOption="@_form.PreferredSearchType" TOption="TucDataProviderColumnSearchTypeInfo"
									  Items="@_searchTypes" Style="width:100%"
									  OptionValue="@(p => p.Name)"
									  OptionText="@(p => p.Name)"
									  Label="@LOC("Preferred search type")" />
						<FluentValidationMessage For="@(() => _form.PreferredSearchType)" />
					</FluentGridItem>
				</FluentGrid>
			</FluentEditForm>
		}
	</div>
</FluentDialogBody>
