@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@* Header *@
<FluentDialogHeader ShowDismiss="true">
	<FluentLabel Typo="Typography.PaneHeader">@_title</FluentLabel>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	@if (String.IsNullOrWhiteSpace(_error))
	{
		<FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="_iconBtn"
					  Loading="_isSubmitting" Disabled="_isSubmitting">@_btnText</FluentButton>
	}
	<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">@LOC("Cancel")</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	@if (!string.IsNullOrWhiteSpace(_error))
	{
		<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>
	}
	else if (_processor?.SettingsComponentType is null)
	{
		<FluentMessageBar Intent="@MessageIntent.Info" AllowDismiss="false">@LOC("This processor does not have settings")</FluentMessageBar>
	}
	else if (_processor?.SettingsComponentType.ImplementsGenericInterface(typeof(ITfDynamicComponent<>), typeof(TfTemplateProcessorSettingsComponentContext)) ?? false)
	{
		<TfErrorBoundry>
			<DynamicComponent @ref=_settingsComponent Type="_processor.SettingsComponentType" Parameters="@_getDynamicComponentParams()" />
		</TfErrorBoundry>
	}
	else
	{
		<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">
			<div>@LOC("Warning: Data provider settings component does not implement ITfDynamicComponent<TfTemplateProcessorSettingsComponentContext> and cannot be rendered!")</div>
		</FluentMessageBar>
	}
</FluentDialogBody>
