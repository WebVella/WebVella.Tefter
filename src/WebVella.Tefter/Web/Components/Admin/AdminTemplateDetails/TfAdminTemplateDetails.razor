@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@{
	var context = TfAppState.Value.AdminTemplateDetails;
}
<ErrorBoundary>
	<TfCard>
		<TitleTemplate>
			<FluentStack HorizontalAlignment="@HorizontalAlignment.Stretch" VerticalAlignment="@VerticalAlignment.Center">
				<div style="white-space: nowrap;">@LOC("General")</div>
				<FluentStack HorizontalAlignment="@HorizontalAlignment.Right">
					<FluentButton Appearance="@Appearance.Outline" OnClick="onUpdateClick">
						@LOC("Update")
						<FluentIcon Value="@TfConstants.EditIcon" Color="@Color.Accent" Slot="start" />
					</FluentButton>
				</FluentStack>
			</FluentStack>
		</TitleTemplate>
		<ChildContent>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" Value="@context.Name"
									 Label="@LOC("Name")" Style="width:100%" ReadOnly="true" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("Icon")" />
					<TfSelectIcon Value="@context.FluentIconName" Required="true" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextArea Value="@context.Description"
									Label="@LOC("Description")" Style="width:100%" ReadOnly="true" />
				</FluentGridItem>
				<FluentGridItem xs="3">
					<FluentInputLabel Label="@LOC("Status")" />
					@if (context.IsEnabled)
					{
						<FluentBadge Fill="somevalue" BackgroundColor="@OfficeColor.Excel.ToAttributeValue()" Color="white">enabled</FluentBadge>
					}
					else
					{
						<FluentBadge Fill="somevalue" BackgroundColor="@OfficeColor.Access.ToAttributeValue()" Color="white">disabled</FluentBadge>
					}
				</FluentGridItem>
				<FluentGridItem xs="3">
					<FluentInputLabel Label="@LOC("Usable")" />
					@if (context.IsSelectable)
					{
						<FluentBadge Fill="somevalue" BackgroundColor="@OfficeColor.Excel.ToAttributeValue()" Color="white">selectable</FluentBadge>
					}
					else
					{
						<FluentBadge Fill="somevalue" BackgroundColor="@OfficeColor.Access.ToAttributeValue()" Color="white">not selectable</FluentBadge>
					}
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="12">
					<FluentInputLabel Label="@LOC("Target Space Data")" />
					<div class="tf-grid-wrapper" style="margin-top:15px;">
						<table class="tf-grid">
							<thead class="tf-grid-thead">
								<tr class="tf-grid-thead-bkg" style="@($"background-color:{TfConstants.AdminBackgkroundColor}")"></tr>
								<tr class="tf-grid-tr">
									<th class="tf-grid-th">space</th>
									<th class="tf-grid-th">data name</th>
								</tr>
							</thead>
							<tbody class="tf-grid-tbody">
								@foreach (var row in _spaceDataSelection)
								{
									<tr @key=row.Id class="tf-grid-tr">
										<td class="tf-grid-td">
											<div>
												@row.SpaceName
											</div>
										</td>
										<td class="tf-grid-td">
											<div>
												@row.Name
											</div>
										</td>
									</tr>
								}
								@if (_spaceDataSelection.Count == 0)
								{
									<tr class="tf-grid-tr">
										<td class="tf-grid-td" colspan="4">
											<div>
												@LOC("No targeted space data found")
											</div>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</FluentGridItem>
			</FluentGrid>
		</ChildContent>
	</TfCard>
	<div style="margin:1rem 0">
		<TfSelectComponent TOption="ITfTemplateProcessor" Items="@TfAppState.Value.AdminTemplateProcessors"
						   Value="_processor"
						   OptionText="@(x=> x.Name)" OptionIcon="@(x=> x.FluentIconName)" OptionDescription="@(x=> x.Description)"
						   OptionMatch="@((x,y)=> x.Id == y.Id)" />
	</div>
	<TfCard>
		<TitleTemplate>
			<FluentStack HorizontalAlignment="@HorizontalAlignment.Stretch" VerticalAlignment="@VerticalAlignment.Center">
				<div style="white-space: nowrap;">@LOC("Template Settings")</div>
				<FluentStack HorizontalAlignment="@HorizontalAlignment.Right">
					<FluentButton Appearance="@Appearance.Outline" OnClick="onHelpClick">
						@LOC("Help")
						<FluentIcon Value="@TfConstants.GetIcon("QuestionCircle")" Color="@Color.Accent" Slot="start" />
					</FluentButton>
					<FluentButton Appearance="@Appearance.Outline" OnClick="onUpdateSettingsClick">
						@LOC("Update")
						<FluentIcon Value="@TfConstants.EditIcon" Color="@Color.Accent" Slot="start" />
					</FluentButton>
				</FluentStack>
			</FluentStack>
		</TitleTemplate>
		<ChildContent>
			<TfDynamicComponent Context="_dynamicComponentContext" Scope="@_dynamicComponentScope" Count="1" Placeholder="@LOC("Template does not require additional settings")" />
		</ChildContent>
	</TfCard>
</ErrorBoundary>

