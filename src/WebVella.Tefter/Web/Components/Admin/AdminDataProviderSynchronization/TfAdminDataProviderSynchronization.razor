@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent

<FluentGrid>
	<FluentGridItem xs="12" md="6">
		<TfColumnCard Title="@LOC("Row Identity key")" DataProvider="TfAppState.Value.AdminDataProvider" Items="_keyitems" ItemsChanged="_onColumnsChanged"
					  NoItemsMessage="@LOC("Data row position in the list will be used for comparison.")">
			<NoItemsTemplate>
				<FluentMessageBar Intent="@MessageIntent.Info" Title="@LOC("Row position")" AllowDismiss="false" Style="margin:3px 0">
					@LOC("When no columns are submitted to be used as identity key the row position in the list will be used to identify the row.")
				</FluentMessageBar>
			</NoItemsTemplate>
		</TfColumnCard>
	</FluentGridItem>
	<FluentGridItem xs="12" md="6">
		<TfCard>
			<TitleTemplate>
				<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.SpaceBetween"
							 VerticalAlignment="@VerticalAlignment.Center">
					<div style="white-space: nowrap;">@LOC("Synchronization schedule")</div>
					<FluentButton Appearance="@Appearance.Outline" IconStart="@TfConstants.EditIcon.WithColor(Color.Accent)" OnClick="_editSchedule">@LOC("Manage")</FluentButton>
				</FluentStack>
			</TitleTemplate>
			<ChildContent>
				<FluentGrid>
					<FluentGridItem xs="2">
						<FluentInputLabel Label="@LOC("Status")" />
						<div>
							@if (TfAppState.Value.AdminDataProvider?.SynchScheduleEnabled ?? false)
							{
								<FluentBadge Fill="somevalue" BackgroundColor="@TfColor.Emerald500.GetAttribute().Value" Color="white" Class="input-badge" Style="width:100%">ON</FluentBadge>
							}
							else
							{
								<FluentBadge Fill="somevalue" BackgroundColor="@TfColor.Red500.GetAttribute().Value" Color="white" Class="input-badge" Style="width:100%">OFF</FluentBadge>
							}
						</div>
					</FluentGridItem>
					<FluentGridItem xs="5">
						<FluentNumberField TValue="short?" Value="@TfAppState.Value.AdminDataProvider?.SynchScheduleMinutes"
										   Label="@LOC("Interval")" Style="width:100%" ReadOnly="true">
							<span slot="end">minutes</span>
						</FluentNumberField>
					</FluentGridItem>
					<FluentGridItem xs="5">
						<FluentTextField Value="@_nextSyncronization" Label="@LOC("Scheduled on")" Style="width:100%" ReadOnly="true" />
					</FluentGridItem>
				</FluentGrid>
			</ChildContent>
		</TfCard>
	</FluentGridItem>
</FluentGrid>




<TfCard Style="margin-top:1rem;">
	<TitleTemplate>
		<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.SpaceBetween"
					 VerticalAlignment="@VerticalAlignment.Center">
			<div style="white-space: nowrap;">@LOC("Synchronization tasks")</div>
			<FluentButton Appearance="@Appearance.Outline" IconStart="@TfConstants.GetIcon("ArrowSync").WithColor(Color.Accent)" OnClick="_synchronizeNow">@LOC("Synchronize now")</FluentButton>
		</FluentStack>
	</TitleTemplate>
	<ChildContent>
		<table class="tf-grid">
			<thead class="tf-grid-thead">
				<tr class="tf-grid-thead-bkg"></tr>
				<tr class="tf-grid-tr">
					<th class="tf-grid-th" style="width:140px;">created on</th>
					<th class="tf-grid-th">status</th>
					<th class="tf-grid-th" style="width:140px;">started on</th>
					<th class="tf-grid-th" style="width:140px;">completed on</th>
					<th class="tf-grid-th" style="width:1%;">log</th>
				</tr>
			</thead>
			<tbody class="tf-grid-tbody">
				@foreach (var context in TfAppState.Value.DataProviderSyncTasks)
				{
					<tr @key=context.Id class="tf-grid-tr">
						<td class="tf-grid-td">
							<div>@context.CreatedOn.ToString(TfConstants.DateTimeFormat)</div>
						</td>
						<td class="tf-grid-td">
							<div>@context.Status.ToDescriptionString()</div>
						</td>
						<td class="tf-grid-td">
							<div>@context.StartedOn?.ToString(TfConstants.DateTimeFormat)</div>
						</td>
						<td class="tf-grid-td">
							<div>@context.CompletedOn?.ToString(TfConstants.DateTimeFormat)</div>
						</td>
						<td class="tf-grid-td">
							<div>
								<FluentButton OnClick="@(()=> _onViewLogClick(context))" Appearance="@Appearance.Outline">
									@LOC("view")
								</FluentButton>
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
		<TfPager Page="@(TfAppState.Value.Route?.Page ?? 1)" GoLast="@_goLastPage" GoNext="@_goNextPage"
				 GoFirst="@_goFirstPage" GoPrevious="@_goPreviousPage" GoOnPage="@_goOnPage"
				 PageSize="@(TfAppState.Value.Route?.PageSize ?? TfConstants.PageSize)" />
	</ChildContent>
</TfCard>