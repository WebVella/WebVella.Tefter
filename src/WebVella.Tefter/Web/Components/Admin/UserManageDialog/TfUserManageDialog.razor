@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@namespace WebVella.Tefter.Web.Components
@inherits TfFormBaseComponent
@* Header *@
<FluentDialogHeader ShowDismiss="true">
	<FluentLabel Typo="Typography.PaneHeader">@_title</FluentLabel>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	@if (String.IsNullOrWhiteSpace(_error))
	{
		<FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="_iconBtn"
					  Loading="_isSubmitting" Disabled="_isSubmitting">@_btnText</FluentButton>
	}
	<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">@LOC("Cancel")</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	@if (!string.IsNullOrWhiteSpace(_error))
	{
		<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>

	}
	else
	{
		<FluentEditForm EditContext="EditContext" OnValidSubmit="_save"
						FormName="submit-form" class="tf-form" novalidate>
			<DataAnnotationsValidator />
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Email" @bind-Value=@_form.Email
									 Label="@LOC("Email")" Style="width:100%" AutoComplete="off" />
					<FluentValidationMessage For="@(() => _form.Email)" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("Status")" />
					<FluentCheckbox @bind-Value=@_form.Enabled Label="@LOC("Enabled")" Style="height:32px;" />
					<FluentValidationMessage For="@(() => _form.Enabled)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=@_form.FirstName
									 Label="@LOC("First Name")" Style="width:100%" AutoComplete="off" />
					<FluentValidationMessage For="@(() => _form.FirstName)" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=@_form.LastName
									 Label="@LOC("Last Name")" Style="width:100%" AutoComplete="off" />
					<FluentValidationMessage For="@(() => _form.LastName)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Password" @bind-Value=@_form.Password
									 Label="@LOC("Password")" Style="width:100%" AutoComplete="off" />
					<FluentValidationMessage For="@(() => _form.Password)" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					@if (!_isCreate && String.IsNullOrWhiteSpace(_form.Password))
					{
						<FluentTextField TextFieldType="@TextFieldType.Text" Value="@LOC("leave empty too keep the password")"
										 Label="@LOC("Confirm Password")" Disabled="true"
										 Style="width:100%" />
					}
					else
					{
						<FluentTextField TextFieldType="@TextFieldType.Password" @bind-Value=@_form.ConfirmPassword
										 Label="@LOC("ConfirmPassword")" AutoComplete="off" Style="width:100%" />
					}
					<FluentValidationMessage For="@(() => _form.ConfirmPassword)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentSelect @bind-SelectedOption="@_form.ThemeMode" TOption="DesignThemeModes"
								  Items="@(Enum.GetValues<DesignThemeModes>())" Style="width:100%"
								  OptionValue="@(p => ((int)p).ToString())"
								  OptionText="@(p => p.ToString())" Label="@LOC("Theme Mode")"></FluentSelect>
					<FluentValidationMessage For="@(() => _form.ThemeMode)" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("Theme Color")" />
					<TfSelectColor @bind-Value="@_form.ThemeColor" />
					<FluentValidationMessage For="@(() => _form.ThemeColor)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentSelect @bind-SelectedOption="@_form.Culture" TOption="TucCultureOption"
								  Items="@TfConstants.CultureOptions" Style="width:100%"
								  OptionValue="@(p => p.CultureCode)"
								  OptionText="@(p => p.Name)" Label="@LOC("Localization")" />
					<FluentValidationMessage For="@(() => _form.Culture)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="12">
					<FluentInputLabel Label="@LOC("Roles")" />
					<FluentStack Style="margin-top:10px;">
						@foreach (var role in TfAppState.Value.UserRoles)
						{
							<FluentCheckbox Value="@_form.Roles.Any(x=> x.Id == role.Id)" Label="@role.Name"
											ValueChanged="@(()=>_form.OnRoleChange(role))" Style="height:32px;" />
						}
					</FluentStack>
					<FluentValidationMessage For="@(() => _form.Roles)" />
				</FluentGridItem>
			</FluentGrid>
		</FluentEditForm>
	}
</FluentDialogBody>
