@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent

<div style="display:flex;justify-content:space-between;margin-bottom:1rem;">
	<div>
		<FluentSearch Placeholder="@LOC("column shared key...")" ValueChanged="_searchValueChanged" Value="@_search" AutoComplete="off" />
	</div>
	<div>
		<FluentButton Appearance="@Appearance.Outline" OnClick="_addColumn">
			@LOC("Shared column")
			<FluentIcon Value="@TfConstants.AddIcon" Color="@Color.Accent" Slot="start" />
		</FluentButton>
	</div>
</div>
@if (String.IsNullOrWhiteSpace(_search) && (TfAppState.Value.AdminSharedColumns is null || TfAppState.Value.AdminSharedColumns.Count == 0))
{
	<FluentMessageBar Title="@LOC("No columns")" AllowDismiss="false"
					  Intent="@MessageIntent.Info">@LOC("No shared columns are created yet")</FluentMessageBar>
}
else if (!String.IsNullOrWhiteSpace(_search) && (TfAppState.Value.AdminSharedColumns is null || TfAppState.Value.AdminSharedColumns.Count == 0))
{
	<FluentMessageBar Title="@LOC("No columns found")" AllowDismiss="false"
					  Intent="@MessageIntent.Info">@LOC("No shared columns are found for this search")</FluentMessageBar>
}
else
{
	<div class="tf-grid-wrapper">
		<table class="tf-grid">
			<thead class="tf-grid-thead">
				<tr class="tf-grid-thead-bkg" style="@($"background-color:{TfConstants.AdminBackgkroundColor}")"></tr>
				<tr class="tf-grid-tr">
					<th class="tf-grid-th" style="width:100px;min-width:100px;"></th>
					<th class="tf-grid-th" style="width:250px;min-width:270px;">name</th>
					<th class="tf-grid-th">data type</th>
					<th class="tf-grid-th">shared key</th>
					<th class="tf-grid-th">options</th>
				</tr>
			</thead>
			<tbody class="tf-grid-tbody">
				@foreach (var context in _getColumns())
				{
					<tr @key=context.Id class="tf-grid-tr">
						<td class="tf-grid-td">
							<div>
								<FluentStack Wrap="false">
									<FluentButton Appearance="@Appearance.Outline" IconStart="@TfConstants.EditIcon"
												  Title="@LOC("Edit column")" OnClick="@(()=> _editColumn(context))" />
									<FluentButton Appearance="@Appearance.Outline" Title="@LOC("Delete column")"
												  OnClick="@(() => _deleteColumn(context))">
										<FluentIcon Color="@Color.Error" Value="@TfConstants.DeleteIcon" />
									</FluentButton>
								</FluentStack>
							</div>
						</td>
						<td class="tf-grid-td">
							<div>
								<div>@context.DbName</div>
								<div class="td-description">@context.Id</div>
							</div>
						</td>
						<td class="tf-grid-td">
							<div>
								@context.DbType.Name
							</div>
						</td>
						<td class="tf-grid-td">
							<div>
								@context.SharedKeyDbName
							</div>
						</td>
						<td class="tf-grid-td">
							<div>
								<FluentStack>
									@if (context.IncludeInTableSearch)
									{
										<FluentBadge Appearance="@Appearance.Accent">global search</FluentBadge>
									}
								</FluentStack>
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

}

