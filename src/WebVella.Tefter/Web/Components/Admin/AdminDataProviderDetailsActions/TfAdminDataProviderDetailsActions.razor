@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent

@if (TfAppState.Value.Route is not null && TfAppState.Value.Route.HasNode(RouteDataNode.DataProviderId, 2))
{
	<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.End">
		<FluentButton Appearance="@Appearance.Outline" OnClick="_deleteProvider" Loading="_isDeleting" Disabled="_isDeleting">
			@LOC("Delete")
			<FluentIcon Value="@TfConstants.DeleteIcon" Color="@Color.Error" Slot="start" />
		</FluentButton>
		<FluentButton Appearance="@Appearance.Outline" OnClick="_editProvider">
			@LOC("Edit")
			<FluentIcon Value="@TfConstants.EditIcon" Color="@Color.Accent" Slot="start" />
		</FluentButton>
	</FluentStack>
}
else if (TfAppState.Value.Route is not null && TfAppState.Value.Route.HasNode(RouteDataNode.Schema, 2))
{
	<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.End" Style="margin-bottom:1rem">
		<FluentButton Appearance="@Appearance.Outline" OnClick="_importFromSource">
			@LOC("Import from source")
			<FluentIcon Value="@TfConstants.GetIcon("ArrowDownload")" Color="@Color.Accent" Slot="start" />
		</FluentButton>
		<FluentButton Appearance="@Appearance.Outline" OnClick="_addColumn">
			@LOC("Add Column")
			<FluentIcon Value="@TfConstants.AddIcon" Color="@Color.Accent" Slot="start" />
		</FluentButton>
	</FluentStack>
}