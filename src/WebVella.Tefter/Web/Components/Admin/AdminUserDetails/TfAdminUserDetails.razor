@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@if (TfAppState.Value.AdminManagedUser is not null)
{
	CultureInfo cultureInfo = null;

	if (!String.IsNullOrWhiteSpace(TfAppState.Value.AdminManagedUser?.Settings?.CultureName))
	{
		cultureInfo = TfConstants.CultureOptions.FirstOrDefault(x => x.CultureInfo.Name == TfAppState.Value.AdminManagedUser?.Settings?.CultureName)?.CultureInfo;
	}
	if (cultureInfo is null)
	{
		cultureInfo = TfConstants.CultureOptions[0].CultureInfo;

	}
	<TfCard>
		<TitleTemplate>
			<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.End">
				<TfAdminUserDetailsActions />
			</FluentStack>
		</TitleTemplate>
		<ChildContent>
			<FluentGrid>
				<FluentGridItem xs="1">
					<FluentInputLabel>@LOC("Status")</FluentInputLabel>
					@if (TfAppState.Value.AdminManagedUser?.Enabled ?? false)
					{
						<FluentBadge Appearance="Appearance.Neutral" Class="input-badge" Style="width:100%">ON</FluentBadge>
					}
					else
					{
						<FluentBadge Fill="somevalue" BackgroundColor="@TfColor.Red500.GetAttribute().Value" Color="white" Class="input-badge" Style="width:100%">OFF</FluentBadge>
					}
				</FluentGridItem>
				<FluentGridItem xs="5">
					<FluentTextField TextFieldType="@TextFieldType.Text" Value="@TfAppState.Value.AdminManagedUser?.Email"
									 ReadOnly="true" Label="@LOC("Email")" Style="width:100%" />
				</FluentGridItem>
				<FluentGridItem xs="3">
					<FluentDatePicker Value="@TfAppState.Value.AdminManagedUser?.CreatedOn"
									  ReadOnly="true" Label="@LOC("Created On")" Style="width:100%" />
				</FluentGridItem>
				<FluentGridItem xs="3">
					<FluentTimePicker Value="@TfAppState.Value.AdminManagedUser?.CreatedOn"
									  ReadOnly="true" Label="&nbsp;" Style="width:100%" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" Value="@TfAppState.Value.AdminManagedUser?.FirstName"
									 ReadOnly="true" Label="@LOC("First Name")" Style="width:100%" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" Value="@TfAppState.Value.AdminManagedUser?.LastName"
									 ReadOnly="true" Label="@LOC("Last Name")" Style="width:100%" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" Value="@TfAppState.Value.AdminManagedUser?.Settings?.ThemeMode.ToString()"
									 ReadOnly="true" Label="@LOC("Theme Mode")" Style="width:100%" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("Theme Color")" />
					<TfSelectColor Value="@(TfAppState.Value.AdminManagedUser?.Settings?.ThemeColor ?? TfColor.Emerald500)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" Value="@cultureInfo.Name"
									 ReadOnly="true" Label="@LOC("Localization")" Style="width:100%" />
				</FluentGridItem>
				<FluentGridItem xs="6">
				</FluentGridItem>
			</FluentGrid>
		</ChildContent>
	</TfCard>

	<TfCard Style="margin-top:30px;">
		<TitleTemplate>
			<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.SpaceBetween" VerticalAlignment="@VerticalAlignment.Center">
				<h3>@LOC("Roles")</h3>
				<div>
					<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.End">
						@if (_roleOptions.Count > 0)
						{
							<FluentSelect OptionSelected="(x => x.Id == _selectedRole?.Id)"
										  @bind-SelectedOption="@_selectedRole"
										  Disabled="_submitting"
										  TOption="TucRole" Required="false"
										  Items="@_roleOptions" Style="width:200px"
										  Placeholder="@LOC("select role")">
								<OptionTemplate Context="option">
									<span>@option.Name</span>
								</OptionTemplate>
							</FluentSelect>
						}
						else
						{
							<FluentTextField TextFieldType="@TextFieldType.Text" Value=@LOC("all users added") Style="width:200px" Disabled="true" />
						}
						<FluentButton OnClick="_addRole" IconStart="@TfConstants.AddIcon" Appearance="@Appearance.Outline" Disabled="@(_roleOptions.Count == 0 || _submitting)">@LOC("Add new")</FluentButton>
					</FluentStack>
				</div>
			</FluentStack>
		</TitleTemplate>
		<ChildContent>
			@if (TfAppState.Value.AdminManagedUser.Roles is null || TfAppState.Value.AdminManagedUser.Roles.Count == 0)
			{
				<FluentMessageBar Intent="@MessageIntent.Warning" AllowDismiss=false>@LOC("This user has no roles assigned")</FluentMessageBar>
			}
			else
			{
				<div class="tf-grid-wrapper">
					<table class="tf-grid">
						<thead class="tf-grid-thead">
							<tr class="tf-grid-thead-bkg"></tr>
							<tr class="tf-grid-tr">
								<th class="tf-grid-th">name</th>
								<th class="tf-grid-th"></th>
							</tr>
						</thead>
						<tbody class="tf-grid-tbody">
							@foreach (var context in TfAppState.Value.AdminManagedUser.Roles)
							{
								<tr @key=@Guid.NewGuid() class="tf-grid-tr">
									<td class="tf-grid-td">
										<div>@context.Name</div>
									</td>
									<td class="tf-grid-td" style="width:1%;">
										<div>
											@if (TfAppState.Value.CurrentUser.Id == TfAppState.Value.AdminManagedUser.Id
																			&& context.Id == TfConstants.ADMIN_ROLE_ID)
											{
												<FluentButton Appearance="@Appearance.Outline" Title="@LOC("the current user cannot unassign admin role to self")"
															  Disabled="true">
													<FluentIcon Value="@TfConstants.LockIcon" Slot="start" />
													<span>@LOC("locked")</span>
												</FluentButton>
											}
											else
											{
												<FluentButton Appearance="@Appearance.Outline" OnClick="@(()=> _removeRole(context))" Title="@LOC("Remove the role")"
															  Disabled="_submitting">
													<FluentIcon Color="@Color.Error" Value="@TfConstants.DeleteIcon" Slot="start" />
													<span>@LOC("remove")</span>
												</FluentButton>
											}
										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
		</ChildContent>
	</TfCard>
}
else
{
	<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Info">@LOC("User not found")</FluentMessageBar>
}

