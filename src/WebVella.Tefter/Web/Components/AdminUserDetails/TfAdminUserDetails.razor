@inherits TfBaseComponent
@{
	var rolesString = "";
	if (UserDetailsState.Value?.User?.Roles is not null)
	{
		rolesString = String.Join(", ", UserDetailsState.Value?.User?.Roles?.Select(x => x.Name));
	}
	CultureInfo cultureInfo = null;

	if (!String.IsNullOrWhiteSpace(UserDetailsState.Value?.User?.Settings?.CultureName))
	{
		cultureInfo = TfConstants.CultureOptions.FirstOrDefault(x => x.CultureInfo.Name == UserDetailsState.Value?.User?.Settings?.CultureName)?.CultureInfo;
	}
	if (cultureInfo is null)
	{
		cultureInfo = TfConstants.CultureOptions[0].CultureInfo;
		
	}
}
<TfCard>
	<FluentGrid>
		<FluentGridItem xs="1">
			<FluentInputLabel>@LOC("Status")</FluentInputLabel>
			@if (UserDetailsState.Value?.User?.Enabled ?? false)
			{
				<FluentBadge Appearance="Appearance.Accent">ON</FluentBadge>
			}
			else
			{
				<FluentBadge Appearance="Appearance.Neutral">OFF</FluentBadge>
			}
		</FluentGridItem>
		<FluentGridItem xs="5">
			<FluentTextField TextFieldType="@TextFieldType.Text" Value="@UserDetailsState.Value?.User?.Email"
							 ReadOnly="true" Label="@LOC("Email")" Style="width:100%" />
		</FluentGridItem>
		<FluentGridItem xs="3">
			<FluentDatePicker Value="@UserDetailsState.Value?.User?.CreatedOn"
							  ReadOnly="true" Label="@LOC("Created On")" Style="width:100%" />
		</FluentGridItem>
		<FluentGridItem xs="3">
			<FluentTimePicker Value="@UserDetailsState.Value?.User?.CreatedOn"
							  ReadOnly="true" Label="&nbsp;" Style="width:100%" />
		</FluentGridItem>
	</FluentGrid>
	<FluentGrid>
		<FluentGridItem xs="6">
			<FluentTextField TextFieldType="@TextFieldType.Text" Value="@UserDetailsState.Value?.User?.FirstName"
							 ReadOnly="true" Label="@LOC("First Name")" Style="width:100%" />
		</FluentGridItem>
		<FluentGridItem xs="6">
			<FluentTextField TextFieldType="@TextFieldType.Text" Value="@UserDetailsState.Value?.User?.LastName"
							 ReadOnly="true" Label="@LOC("Last Name")" Style="width:100%" />
		</FluentGridItem>
	</FluentGrid>
	<FluentGrid>
		<FluentGridItem xs="6">
			<FluentTextField TextFieldType="@TextFieldType.Text" Value="@UserDetailsState.Value?.User?.Settings?.ThemeMode.ToString()"
							 ReadOnly="true" Label="@LOC("Theme Mode")" Style="width:100%" />
		</FluentGridItem>
		<FluentGridItem xs="6">
			<FluentTextField TextFieldType="@TextFieldType.Text" Value="@UserDetailsState.Value?.User?.Settings?.ThemeColor.ToString()"
							 ReadOnly="true" Label="@LOC("Theme Color")" Style="width:100%">
				<FluentIcon Value="@(new Icons.Filled.Size20.RectangleLandscape())"
							Color="Color.Custom" Slot="start"
							CustomColor="@(UserDetailsState.Value?.User?.Settings?.ThemeColor.ToAttributeValue() != "default" ? UserDetailsState.Value?.User?.Settings?.ThemeColor.ToAttributeValue() : "#036ac4" )" />
			</FluentTextField>
		</FluentGridItem>
	</FluentGrid>
	<FluentGrid>
		<FluentGridItem xs="6">
			<FluentTextField TextFieldType="@TextFieldType.Text" Value="@cultureInfo.Name"
							 ReadOnly="true" Label="@LOC("Localization")" Style="width:100%" />
		</FluentGridItem>
		<FluentGridItem xs="6">
		</FluentGridItem>
	</FluentGrid>
	<FluentGrid>
		<FluentGridItem xs="12">
			<FluentTextField TextFieldType="@TextFieldType.Text" Value="@rolesString"
							 ReadOnly="true" Label="@LOC("Roles")" Style="width:100%" />
		</FluentGridItem>
	</FluentGrid>
</TfCard>


