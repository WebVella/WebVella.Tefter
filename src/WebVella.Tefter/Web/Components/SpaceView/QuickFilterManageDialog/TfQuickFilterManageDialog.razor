@namespace WebVella.Tefter.Web.Components
@inherits TfFormBaseComponent
@* Header *@
<FluentDialogHeader ShowDismiss="false" Visible="false">
	<FluentLabel Typo="Typography.PaneHeader">@LOC("Manage Quick Filter")</FluentLabel>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	<FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="@TfConstants.SaveIcon.WithColor(Color.Neutral)"
				  Loading="_isSubmitting" Disabled="_isSubmitting">@LOC("Save")</FluentButton>
	<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">@LOC("Cancel")</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	<div>
		<FluentEditForm EditContext="EditContext" class="tf-form" novalidate>
			<TfCard>
				<FluentGrid>
					<FluentGridItem xs="4">
						<FluentTextField Required="true"
										 TextFieldType="@TextFieldType.Text"
										 @bind-Value=@_form.Name AutoComplete="off"
										 Label="@LOC("Name")" Style="width:100%" />
						<FluentValidationMessage For="@(() => _form.Name)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentTextField TextFieldType="@TextFieldType.Text"
										 Value=@(_form.IsGroup ? LOC("group") : LOC("quick filter")) Disabled="true"
										 Label="@LOC("Type")" Style="width:100%" />
						<FluentValidationMessage For="@(() => _form.IsGroup)" />
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Parent Group")" />
						<FluentStack>
							<FluentSelect Required="false"
										  OptionSelected="(x => x.Id == _selectedParent?.Id)"
										  @bind-SelectedOption="@_selectedParent"
										  TOption="TucSpaceViewPreset"
										  Items="@Content.Parents" Style="width:100%"
										  OptionValue="@((p)=> p.Id.ToString())"
										  OptionText="@(x=> x.Name)" Placeholder="@LOC("without group")" />
							@if (_selectedParent is not null)
							{
								<FluentButton Disabled="@(_selectedParent is null)" IconStart="@TfConstants.CloseIcon.WithColor(Color.Error)" OnClick="@(_ => _selectedParent = null)" />
							}
						</FluentStack>
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Color")" />
						<TfSelectColor @bind-Value=@_form.Color />
						<FluentValidationMessage For="@(() => _form.Color)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Icon")" />
						<TfSelectIcon @bind-Value=@_form.Icon />
						<FluentValidationMessage For="@(() => _form.Icon)" />
					</FluentGridItem>
				</FluentGrid>
			</TfCard>
			@if (_form.IsGroup)
			{
				<FluentMessageBar Style="margin-top:2rem" AllowDismiss="false" Intent="@MessageIntent.Info">@LOC("Groups do not have filter and sort selection.")</FluentMessageBar>
			}
			else
			{
				<FluentLabel Typo="Typography.PaneHeader" Style="margin:1rem 0">@LOC("Filters")</FluentLabel>
				<TfFilterCard DataProvider="Content.DataProvider" @bind-Items="_form.Filters" />
				<FluentLabel Typo="Typography.PaneHeader" Style="margin:1rem 0">@LOC("Sort")</FluentLabel>
				<TfSortCard DataProvider="Content.DataProvider" @bind-Items="_form.SortOrders" />
			}
		</FluentEditForm>
	</div>
</FluentDialogBody>
