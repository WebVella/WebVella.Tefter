@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
<style>
	.sidebar-nav{
		--tf-space-color: @TfAppState.Value.SpaceColorString;
		--tf-space-border-color: @TfAppState.Value.SpaceBorderColor;
	}
</style>
<div class="@($"sidebar-nav {(TfUserState.Value.SidebarExpanded ? "expanded" : "collapsed")}")">
	<div class="sidebar-toolbar">
		<div class="sidebar-toolbar-mode">
			<FluentToolbar Class="modebar">
				<FluentButton @ref=_viewsBtn Class="@($"btn views {_getActiveClass(TfSpaceViewNavigationActiveTab.Views)}")" Title="views"
							  OnClick="@(()=>_setActiveTab(TfSpaceViewNavigationActiveTab.Views))"
							  Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.SpaceViewIcon" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
				</FluentButton>
				<FluentButton @ref=_bookmarksBtn Class="@($"btn bookmarks {_getActiveClass(TfSpaceViewNavigationActiveTab.Bookmarks)}")" Title="bookmarks"
							  OnClick="@(()=>_setActiveTab(TfSpaceViewNavigationActiveTab.Bookmarks))"
							  Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.BookmarkOFFIcon" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
				</FluentButton>
				<FluentButton @ref=_savesBtn Class="@($"btn saves {_getActiveClass(TfSpaceViewNavigationActiveTab.Saves)}")" Title="saved URLs"
							  OnClick="@(()=>_setActiveTab(TfSpaceViewNavigationActiveTab.Saves))"
							  Appearance="Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("Link")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
				</FluentButton>
			</FluentToolbar>
		</div>
		<div class="sidebar-toolbar-search">
			<FluentTextField Class="search" Placeholder="@LOC("search...")" Immediate="true" ImmediateDelay="500" Value=@search ValueChanged="onSearch" />
		</div>
		<div class="sidebar-toolbar-actions">
			<FluentButton Id="space-settings" Title="space actions"
						  OnClick="() => _settingsMenuVisible = !_settingsMenuVisible" Appearance="@Appearance.Outline">
				<FluentIcon Value="@TfConstants.GetIcon("Settings")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			</FluentButton>
			<FluentMenu Anchor="space-settings" @bind-Open="_settingsMenuVisible" Width="200px" UseMenuService="false">
				<FluentMenuItem OnClick="onManageSpaceClick">
					@LOC("Manage Space")
					<FluentIcon Value="@TfConstants.EditIcon" Slot="start" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
				</FluentMenuItem>
				<FluentMenuItem OnClick="onDataListClick">
					@LOC("Space Data")
					<FluentIcon Value="@TfConstants.SpaceDataIcon" Slot="start" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
				</FluentMenuItem>
				<FluentDivider></FluentDivider>
				<FluentMenuItem OnClick="onAddClick">
					@LOC("Create View")
					<FluentIcon Value="@TfConstants.AddIcon" Slot="start" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
				</FluentMenuItem>

			</FluentMenu>
		</div>
	</div>
	<div class="sidebar-inner">
		@{
			var menuItems = _getMenu();
		}
		<FluentNavMenu Style="width:100%">
			@foreach (var item in menuItems)
			{
				<FluentNavLink Href="@item.Url" Class="@(item.Active ? "selected" : "")" Data="item" Id="@item.Id"
							   Icon="item.Icon" IconColor="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString">@item.Title</FluentNavLink>
			}
		</FluentNavMenu>
		@if (menuItems.Count == 0)
		{
			<div style="padding-left:5px;padding-top:5px">@LOC("No records")</div>
		}
	</div>
</div>

