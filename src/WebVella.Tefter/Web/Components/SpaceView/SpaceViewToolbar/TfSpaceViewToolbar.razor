@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
<div class="content-toolbar">
	<div class="content-toolbar-left">
		<FluentSearch Value="@TfAppState.Value.Route.Search" ValueChanged="_searchChanged" AutoComplete="off" Placeholder="@LOC("search...")" />
		<FluentButton Id="view-filter-selector" OnClick="OnFilterClick" Title="data filters" Appearance="@Appearance.Outline">
			@if ((TfAppState.Value.SpaceViewFilters?.Count ?? 0) > 0)
			{
				<FluentIcon Value="@TfConstants.GetIcon("Filter")" Slot="start" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
				<FluentBadge Appearance="Appearance.Accent">@(TfAppState.Value.SpaceViewFilters?.Count ?? 0)</FluentBadge>
			}
			else
			{
				<FluentIcon Value="@TfConstants.GetIcon("Filter")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			}
		</FluentButton>
		<FluentButton Id="view-sort-selector" OnClick="OnSortClick" Title="data sort" Appearance="@Appearance.Outline">
			@if ((TfAppState.Value.SpaceViewSorts?.Count ?? 0) > 0)
			{
				<FluentIcon Value="@TfConstants.GetIcon("ArrowSort")" Slot="start" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
				<FluentBadge Appearance="Appearance.Accent">@(TfAppState.Value.SpaceViewSorts?.Count ?? 0)</FluentBadge>
			}
			else
			{
				<FluentIcon Value="@TfConstants.GetIcon("ArrowSort")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			}
		</FluentButton>
		@if (_showClearFilter)
		{
			<FluentButton OnClick="OnClearFilterClick" Title="@LOC("clear filters and sort")" Appearance="@Appearance.Outline">
				<FluentIcon Value="@TfConstants.GetIcon("Dismiss")" Color="@Color.Error" />
			</FluentButton>
		}
		@* 		<FluentButton Id="grid-properties-selector" OnClick="OnGridPropertiesClick" Title="grid properties" Appearance="@Appearance.Outline">
		<FluentIcon Value="@TfConstants.GetIcon("TableSettings")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
		</FluentButton> *@
	</div>
	<div class="content-toolbar-right">
		@foreach (var comp in TfAppState.Value.SpaceViewAddonComponents.Where(x => x.Region == TfScreenRegion.SpaceViewToolbarActions))
		{
			if (comp.ComponentType is not null)
			{
				<TfErrorBoundry>
					<DynamicComponent Type="comp.ComponentType" />
				</TfErrorBoundry>
			}
		}
		@if (TfAppState.Value.SpaceView.Settings.CanCreateRows)
		{
			<FluentButton OnClick="_onAddRowClick" Appearance="@Appearance.Outline">
				<FluentIcon Value="@TfConstants.AddIcon" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			</FluentButton>
		}
		<FluentButton Id="view-action-selector" OnClick="OnActionClick" Appearance="@Appearance.Outline">
			@if (TfAppState.Value.SelectedDataRows.Count > 0)
			{
				<FluentBadge Appearance="Appearance.Accent">@TfAppState.Value.SelectedDataRows.Count</FluentBadge>
				<FluentIcon Value="@TfConstants.GetIcon("Connector")" Slot="start" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			}
			else
			{
				<FluentIcon Value="@TfConstants.GetIcon("Connector")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			}

		</FluentButton>
		@if (TfAppState.Value.ActiveSpaceViewBookmark is not null)
		{
			<FluentButton Id="view-bookmark-selector" OnClick="OnBookmarkClick" Appearance="@Appearance.Outline">
				<FluentIcon Value="@TfConstants.BookmarkOFFIcon" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			</FluentButton>
		}
		@if (TfAppState.Value.ActiveSpaceViewSavedUrl is not null)
		{
			@if (Navigator.IsSpaceViewSavedUrlChanged(TfAppState.Value.ActiveSpaceViewSavedUrl.Url))
			{
				<FluentButton Id="view-save-selector" OnClick="OnSaveLinkClick" Appearance="@Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("Link")" Color="@Color.Warning" />
				</FluentButton>
			}
			else
			{
				<FluentButton Id="view-save-selector" OnClick="OnSaveLinkClick" Appearance="@Appearance.Outline">
					<FluentIcon Value="@TfConstants.GetIcon("Link")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
				</FluentButton>
			}
		}
		<FluentButton Id="view-export-selector" OnClick="OnExportClick" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.GetIcon("ShareAndroid")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
		</FluentButton>
		<FluentButton Id="view-setting-selector" OnClick="OnSettingsClick" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.GetIcon("Settings")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
		</FluentButton>
	</div>
</div>
@* <TfSpaceViewPropertiesSelector @ref="_propertiesSelector" /> *@
<TfSpaceViewSettingsSelector @ref="_settingSelector" />
<TfSpaceViewActionSelector @ref="_actionSelector" />
<TfSpaceViewShareSelector @ref="_shareSelector" />
<TfSpaceViewBookmarkSelector @ref="_bookmarkSelector" />
<TfSpaceViewLinkSaveSelector @ref="_saveSelector" />


