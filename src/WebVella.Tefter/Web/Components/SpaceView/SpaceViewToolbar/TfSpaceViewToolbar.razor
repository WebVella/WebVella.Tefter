@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent

<div class="content-toolbar">
	<div class="content-toolbar-left">
		<FluentSearch Value="@TfAppState.Value.SpaceViewSearch" ValueChanged="_searchChanged" AutoComplete="off" Placeholder="@LOC("search...")" />
		<FluentButton Id="view-filter-selector" OnClick="OnFilterClick" Title="data filters" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.GetIcon("Filter")" Slot="start" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			<FluentBadge Appearance="Appearance.Neutral">@(TfAppState.Value.SpaceViewFilters?.Count ?? 0)</FluentBadge>
		</FluentButton>
		<FluentButton Id="view-sort-selector" OnClick="OnSortClick" Title="data sort" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.GetIcon("ArrowSort")" Slot="start" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			<FluentBadge Appearance="Appearance.Neutral">@(TfAppState.Value.SpaceViewSorts?.Count ?? 0)</FluentBadge>
		</FluentButton>
		<FluentButton Id="grid-properties-selector" OnClick="OnGridPropertiesClick" Title="grid properties" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.GetIcon("TableSettings")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
		</FluentButton>
	</div>
	<div class="content-toolbar-right">
		@foreach (var comp in _regionComponents)
		{
			if (comp.ComponentType is not null)
			{
				<TfErrorBoundry>
					<DynamicComponent Type="comp.ComponentType" @key=@comp.Id />
				</TfErrorBoundry>
			}
		}
		<FluentButton Id="view-action-selector" OnClick="OnActionClick" Appearance="@Appearance.Outline">
			@if (TfAppState.Value.SelectedDataRows.Count > 0)
			{
				<FluentBadge Appearance="Appearance.Accent">@TfAppState.Value.SelectedDataRows.Count</FluentBadge>
				<FluentIcon Value="@TfConstants.GetIcon("Connector")" Slot="start" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			}
			else
			{
				<FluentIcon Value="@TfConstants.GetIcon("Connector")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
			}

		</FluentButton>
		<FluentButton Id="view-export-selector" OnClick="OnExportClick" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.BookmarkONIcon" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
		</FluentButton>
		<FluentButton Id="view-export-selector" OnClick="OnExportClick" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.GetIcon("Link")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
		</FluentButton>
		<FluentButton Id="view-export-selector" OnClick="OnExportClick" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.GetIcon("ShareAndroid")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
		</FluentButton>
		<FluentButton Id="view-setting-selector" OnClick="OnSettingsClick" Appearance="@Appearance.Outline">
			<FluentIcon Value="@TfConstants.GetIcon("Settings")" Color="@Color.Custom" CustomColor="@TfAppState.Value.SpaceIconColorString" />
		</FluentButton>
	</div>
</div>
<TfSpaceViewPropertiesSelector @ref="_propertiesSelector" />
<TfSpaceViewSettingsSelector @ref="_settingSelector" />
<TfSpaceViewActionSelector @ref="_actionSelector" />
<TfSpaceViewShareSelector @ref="_shareSelector" />


