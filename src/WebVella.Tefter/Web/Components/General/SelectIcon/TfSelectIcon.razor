@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@if (_isReadonly)
{
	<FluentTextField ReadOnly="true" Value="@Value.ToString()" Style="width:100%">
		<FluentIcon Value="@TfConstants.GetIcon(Value)" Slot="start" />
	</FluentTextField>
}
else
{
	<div class="tf-select-icon">
		<FluentButton Id="@_elementId" Style="width:100%"
					  IconStart="Icons.GetInstance(_icon)"
					  OnClick="@(_=> _onOpenChanged(true))">
			@if (!String.IsNullOrWhiteSpace(Value))
			{
				<span>@Value</span>
			}
			else if (!String.IsNullOrWhiteSpace(Placeholder))
			{
				<span class="text-muted">@Placeholder</span>
			}
			else
			{
				<span class="text-muted">@LOC("select...")</span>
			}
			<FluentIcon Slot="end" Value="@TfConstants.GetIcon("ChevronDown")" CustomColor="var(--neutral-fill-strong-focus)" Color="@Color.Custom" />
		</FluentButton>
		@if (_open)
		{
			<FluentOverlay Visible="@true" OnClose="@(_=> _onOpenChanged(false))" Transparent="true" FullScreen="true" />
			<FluentAnchoredRegion Anchor="@_elementId" Style="max-height:300px;overflow:scroll;position:relative;"
								  AutoFocus="true" FixedPlacement="true" Class="tf-select-menu"
								  HorizontalDefaultPosition="HorizontalPosition.Center"
								  VerticalDefaultPosition="VerticalPosition.Bottom"
								  HorizontalPositioningMode="AxisPositioningMode.Dynamic"
								  VerticalPositioningMode="AxisPositioningMode.Dynamic"
								  HorizontalScaling="AxisScalingMode.Anchor">
				<div class="tf-select-menu__header">
					<FluentSearch Style="width:100%;" @ref=_searchInput @bind-Value="@_search" Immediate="true" ImmediateDelay="500" AutoComplete="off" />
				</div>
				<div class="tf-select-menu__body">
					<FluentNavMenu>
						<Virtualize TItem="string" Items="@_icons" Context="option" ItemSize="32">
							<FluentMenuItem @key=@option OnClick="@(()=> _optionChanged(option))" Class="@(option == Value ? "tf-menu-item-selected" : "")">
								<FluentIcon Value="@TfConstants.GetIcon(option)" Slot="start" />
								<FluentLabel>@option</FluentLabel>
							</FluentMenuItem>
						</Virtualize>
					</FluentNavMenu>
				</div>
			</FluentAnchoredRegion>
		}

	</div>
}

