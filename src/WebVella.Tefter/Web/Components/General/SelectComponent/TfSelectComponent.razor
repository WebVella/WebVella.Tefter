@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@typeparam TOption

@{
	RenderFragment<TOption> CardIcon = option =>
	@<div class="tf-component-icon">
		@if (!String.IsNullOrWhiteSpace(_getOptionIcon(option)))
	{
		<FluentIcon Value="@TfConstants.GetIcon(_getOptionIcon(option))" />
	}
	</div>;
	RenderFragment<TOption> CardMeta = option =>
	@<div class="tf-component-meta">
		<div class="tf-component-title">@_getOptionText(option)</div>
		@if (!String.IsNullOrWhiteSpace(_getOptionDescription(option)))
	{
		<div class="tf-component-description">@_getOptionDescription(option)</div>
	}
	</div>;
}

<div class="tf-select-component">
	@if (_isReadonly)
	{
		<TfCard Style="border:1px solid var(--neutral-fill-input-alt-active) !important">
			<div class="tf-component">
				@CardIcon(Value)
				@CardMeta(Value)
			</div>
		</TfCard>
	}
	else
	{
		<TfCard Id="@_elementId" OnClick="@(_=> _onOpenChanged(true))" Style="border:1px solid var(--neutral-fill-input-alt-active) !important">
			<div class="tf-component">
				@CardIcon(Value)
				@CardMeta(Value)
				<div class="tf-component-caret"><FluentIcon Value="@TfConstants.GetIcon("ChevronDown")" CustomColor="var(--neutral-fill-strong-focus)" Color="@Color.Custom" /></div>
			</div>
		</TfCard>
		@if (_open)
		{
			<FluentOverlay Visible="@true" OnClose="@(_=> _onOpenChanged(false))" Transparent="true" FullScreen="true" />
			<FluentAnchoredRegion Anchor="@_elementId" Style="max-height:300px;overflow:scroll;position:relative;"
								  AutoFocus="true" FixedPlacement="true" Class="tf-select-menu"
								  HorizontalDefaultPosition="HorizontalPosition.Center"
								  VerticalDefaultPosition="VerticalPosition.Bottom"
								  HorizontalPositioningMode="AxisPositioningMode.Dynamic"
								  VerticalPositioningMode="AxisPositioningMode.Dynamic"
								  HorizontalScaling="AxisScalingMode.Anchor">
				<div class="tf-select-menu__body">
					<FluentNavMenu>
						<Virtualize TItem="TOption" Items="@Items" Context="option" ItemSize="32">
							<FluentMenuItem @key=@option OnClick="@(()=> _optionChanged(option))" Class="@(_matchOptions(Value,option) ? "tf-menu-item-selected" : "")">
								<div class="tf-component tf-component--small">
									@CardIcon(option)
									@CardMeta(option)
								</div>
							</FluentMenuItem>
						</Virtualize>
					</FluentNavMenu>
				</div>
			</FluentAnchoredRegion>
		}
	}
</div>
