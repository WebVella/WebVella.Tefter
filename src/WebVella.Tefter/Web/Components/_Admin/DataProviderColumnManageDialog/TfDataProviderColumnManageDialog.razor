@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@namespace WebVella.Tefter.Web.Components
@inherits TfFormBaseComponent
@* Header *@
<FluentDialogHeader ShowDismiss="true">
	<FluentLabel Typo="Typography.PaneHeader">@_title</FluentLabel>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	@if (String.IsNullOrWhiteSpace(_error) && !_isBusy)
	{
		<FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="_iconBtn"
					  Loading="_isSubmitting" Disabled="_isSubmitting">@_btnText</FluentButton>
	}
	<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">@LOC("Cancel")</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	<div>
		@if (_isBusy)
		{
			<TfLoadingPane />
		}
		else if (!string.IsNullOrWhiteSpace(_error))
		{
			<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>

		}
		else
		{
			<FluentEditForm EditContext="EditContext" OnValidSubmit="_save"
							FormName="submit-form" class="tf-form" novalidate>
				<DataAnnotationsValidator />
				<FluentGrid>
					<FluentGridItem xs="6">
						<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=UC.ColumnForm.SourceName
										 Label="@LOC("SOURCE column name")" Style="width:100%" AutoComplete="new-password" />
						<FluentValidationMessage For="@(() => UC.ColumnForm.SourceName)" />
					</FluentGridItem>
					<FluentGridItem xs="6">
						<FluentSelect SelectedOption="@_selectedProviderType" TOption="TucDataProviderTypeDataTypeInfo"
									  SelectedOptionChanged="_selectionSourceTypeChanged"
									  Items="@_providerTypeOptions" Style="width:100%"
									  OptionText="@(p => p.Name)" Label="@LOC("SOURCE column type")"></FluentSelect>
						<FluentValidationMessage For="@(() => UC.ColumnForm.SourceType)" />
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid>
					<FluentGridItem xs="6">
						<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=UC.ColumnForm.DbName
										 Label="@LOC("PROVIDER column name")" Style="width:100%"
										 Disabled="!_isCreate" AutoComplete="new-password" />
						<FluentValidationMessage For="@(() => UC.ColumnForm.DbName)" />
					</FluentGridItem>
					<FluentGridItem xs="6">
						<FluentSelect @bind-SelectedOption="@_selectedDbType"
									  TOption="TucDatabaseColumnTypeInfo"
									  Items="@_selectedProviderType.SupportedDatabaseColumnTypes" Style="width:100%"
									  OptionText="@(p => p.Name)" Label="@LOC("PROVIDER data type")" Disabled="!_isCreate"></FluentSelect>
						<FluentValidationMessage For="@(() => UC.ColumnForm.SourceType)" />
					</FluentGridItem>
				</FluentGrid>
				<FluentDivider Style="margin:15px 0" />
				<FluentGrid>
					<FluentGridItem xs="12">
						<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=UC.ColumnForm.DefaultValue
										 Label="@LOC("Default value")" Style="width:100%" AutoComplete="new-password" />
						<FluentValidationMessage For="@(() => UC.ColumnForm.DefaultValue)" />
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid Style="margin-top:15px;">
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Nullable")" />
						<FluentSwitch @bind-Value=UC.ColumnForm.IsNullable>@LOC("can be NULL")</FluentSwitch>
						<FluentValidationMessage For="@(() => UC.ColumnForm.IsNullable)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Unique")" />
						<FluentSwitch @bind-Value=UC.ColumnForm.IsUnique>@LOC("only unique values")</FluentSwitch>
						<FluentValidationMessage For="@(() => UC.ColumnForm.IsUnique)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						@if (_selectedDbType.SupportAutoDefaultValue)
						{
							<FluentInputLabel Label="@LOC("Autogenerated")" />
							<FluentSwitch @bind-Value=UC.ColumnForm.AutoDefaultValue>@LOC("autogenerate value")</FluentSwitch>
							<FluentValidationMessage For="@(() => UC.ColumnForm.AutoDefaultValue)" />
						}
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid Style="margin-top:15px;">
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Searchable")" />
						<FluentSwitch @bind-Value=UC.ColumnForm.IsSearchable>@LOC("used in filters")</FluentSwitch>
						<FluentValidationMessage For="@(() => UC.ColumnForm.IsSearchable)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Global search")" />
						<FluentSwitch @bind-Value=UC.ColumnForm.IncludeInTableSearch>@LOC("included")</FluentSwitch>
						<FluentValidationMessage For="@(() => UC.ColumnForm.IncludeInTableSearch)" />
					</FluentGridItem>
					<FluentGridItem xs="4">
						<FluentSelect @bind-SelectedOption="@UC.ColumnForm.PreferredSearchType" TOption="TucDataProviderColumnSearchTypeInfo"
									  Items="@UC.SearchTypes" Style="width:100%"
									  OptionText="@(p => p.Name)" Label="@LOC("Preferred search type")"></FluentSelect>
						<FluentValidationMessage For="@(() => UC.ColumnForm.PreferredSearchType)" />
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid Style="margin-top:15px;">
					<FluentGridItem xs="4">
						<FluentInputLabel Label="@LOC("Sortable")" />
						<FluentSwitch @bind-Value=UC.ColumnForm.IsSortable>@LOC("used for sorting")</FluentSwitch>
						<FluentValidationMessage For="@(() => UC.ColumnForm.IsSortable)" />
					</FluentGridItem>
				</FluentGrid>
			</FluentEditForm>
		}
	</div>
</FluentDialogBody>
