@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@namespace WebVella.Tefter.Web.Components
@inherits TfBaseComponent
@* Header *@
<FluentDialogHeader ShowDismiss="true">
	<FluentLabel Typo="Typography.PaneHeader">@LOC("Use template")</FluentLabel>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	<FluentStack HorizontalAlignment="@HorizontalAlignment.Stretch">
		<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">@LOC("Cancel")</FluentButton>
		<FluentStack HorizontalAlignment="@HorizontalAlignment.Right">
			@if (_currentStep == TfUseTemplateDialogStep.SelectTemplate)
			{
				<FluentButton Appearance="Appearance.Neutral" OnClick="@_next" IconEnd="@TfConstants.GetIcon("ArrowRight")">@LOC("Next")</FluentButton>
			}
			else if (_currentStep == TfUseTemplateDialogStep.ResultPreview)
			{
				<FluentButton Appearance="Appearance.Neutral" OnClick="@_back" IconStart="@TfConstants.GetIcon("ArrowLeft")">@LOC("Back")</FluentButton>
				<FluentButton Appearance="Appearance.Neutral" OnClick="@_next" IconEnd="@TfConstants.GetIcon("LauncherSettings")">@LOC("Submit")</FluentButton>
			}
		</FluentStack>
	</FluentStack>
	@if (String.IsNullOrWhiteSpace(_error))
	{
		@*         <FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="_iconBtn"
                      Loading="_isSubmitting" Disabled="_isSubmitting">
            @_btnText
        </FluentButton> *@
	}

</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	@if (_loading)
	{
		<TfLoadingPane />
	}
	else if (!string.IsNullOrWhiteSpace(_error))
	{
		<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>
	}
	else if (_currentStep == TfUseTemplateDialogStep.SelectTemplate)
	{
		@((MarkupString)_getEmbeddedStyles())
		<FluentSearch Placeholder="@LOC("search...")" AutoComplete="off" Value="@_search" ValueChanged="onSearch" Immediate="true" ImmediateDelay="500" />
		<div class="tf-grid-wrapper" style="margin-top:15px;">
			<table class="tf-grid">
				<thead class="tf-grid-thead">
					<tr class="tf-grid-thead-bkg" style="@($"background-color:{Content.SpaceBackgroundColorString}")"></tr>
					<tr class="tf-grid-tr">
						<th class="tf-grid-th" style="width:120px;min-width:120px;"></th>
						<th class="tf-grid-th" style="width:30px;min-width:30px;">icon</th>
						<th class="tf-grid-th">name</th>
					</tr>
				</thead>
				<tbody class="tf-grid-tbody">
					@foreach (var row in _templates)
					{
						var selected = row.Id == _selectedTemplate?.Id;
						<tr @key=row.Id class="@($"tf-grid-tr {(selected ? "tf-grid-tr--selected" : "")}")">
							<td class="tf-grid-td">
								<div class="tf-grid-td-selection"></div>
								<div>
									@if (selected)
									{
										<FluentButton OnClick="@(_=> _selectTemplate(row))" BackgroundColor="@Content.SpaceColorString" Color="white" Style="width:100%">selected</FluentButton>
									}
									else
									{
										<FluentButton OnClick="@(_=> _selectTemplate(row))" Appearance="Appearance.Neutral" Style="width:100%">select</FluentButton>
									}

								</div>
							</td>
							<td class="tf-grid-td">
								<div class="tf-grid-td-selection"></div>
								<div>
									<FluentIcon Value="@TfConstants.GetIcon(row.FluentIconName).WithColor(Color.Accent)" />
								</div>
							</td>
							<td class="tf-grid-td">
								<div class="tf-grid-td-selection"></div>
								<div>
									<div>@row.Name</div>
									<div class="td-description">@row.Description</div>
								</div>
							</td>
						</tr>
					}
					@if (_templates.Count == 0)
					{
						<tr class="tf-grid-tr">
							<td class="tf-grid-td" colspan="4">
								<div>
									@LOC("There are no templates applicable for this space data!")
								</div>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	}
	else if (_currentStep == TfUseTemplateDialogStep.ResultPreview)
	{
		<div class="tf-grid-wrapper">
			<table class="tf-grid">
				<tbody class="tf-grid-tbody">
					<tr class="@($"tf-grid-tr")">
						<td class="tf-grid-td" style="max-width:50px;width:50px;">
							<div>
								<FluentIcon Value="@TfConstants.GetIcon(_selectedTemplate.FluentIconName).WithColor(Color.Accent)" />
							</div>
						</td>
						<td class="tf-grid-td">
							<div class="tf-grid-td-selection"></div>
							<div>
								<div>@_selectedTemplate.Name</div>
								<div class="td-description">@_selectedTemplate.Description</div>
							</div>
						</td>
						<td class="tf-grid-td" style="max-width:120px;width:120px;">
							<div>
								@LOC("{0} rows",Content.SelectedRowIds.Count)
							</div>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	}
</FluentDialogBody>