@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@inherits TfFormBaseComponent
@* Header *@
<FluentDialogHeader ShowDismiss="true">
	<FluentLabel Typo="Typography.PaneHeader">@_title</FluentLabel>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	@if (String.IsNullOrWhiteSpace(_error) && !_isBusy)
	{
		<FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="_iconBtn"
					  Loading="_isSubmitting" Disabled="_isSubmitting">@_btnText</FluentButton>
	}
	<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">@LOC("Cancel")</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	@if (_isBusy)
	{
		<TfLoadingPane />
	}
	else if (!string.IsNullOrWhiteSpace(_error))
	{
		<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>

	}
	else
	{
		<FluentEditForm EditContext="EditContext" OnValidSubmit="_save"
						FormName="submit-form" class="tf-form" novalidate>
			<DataAnnotationsValidator />
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=_form.SourceName
									 Label="@LOC("Source column name")" Style="width:100%" />
					<FluentValidationMessage For="@(() => _form.SourceName)" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentSelect @bind-SelectedOption="@_form.SourceType" TOption="string"
								  Items="@_provider.SupportedSourceDataTypes" Style="width:100%"
								  OptionText="@(p => p.ToString())" Label="@LOC("Source column type")"></FluentSelect>
					<FluentValidationMessage For="@(() => _form.SourceType)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=_form.DbName
									 Label="@LOC("Provider column name")" Style="width:100%" />
					<FluentValidationMessage For="@(() => _form.DbName)" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentSelect @bind-SelectedOption="@_form.DbType" TOption="DatabaseColumnType"
								  Items="@(Enum.GetValues<DatabaseColumnType>())" Style="width:100%"
								  OptionText="@(p => p.ToString())" Label="@LOC("Provider column type")"></FluentSelect>
					<FluentValidationMessage For="@(() => _form.SourceType)" />
				</FluentGridItem>
			</FluentGrid>

			@for (int i = 0; i < 8; i++)
			{
				<TfCard Small="true" Style="margin-top:10px;">
					<FluentStack Orientation="@Orientation.Horizontal">
						<div>text</div>
						<FluentSpacer />
						<FluentCheckbox @bind-Value=_form.IsUnique />
					</FluentStack>
				</TfCard>
			}

			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("Composite key")" />
					<FluentCheckbox @bind-Value=_form.IsCompositeKeyPart Label="@LOC("part of the composite key")" Style="margin-top:5px;" />
					<FluentValidationMessage For="@(() => _form.IsCompositeKeyPart)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=_form.DefaultValue
									 Label="@LOC("Default value")" Style="width:100%" Placeholder="Type 'NULL' or leave empty for 'empty string''" />
					<FluentValidationMessage For="@(() => _form.DefaultValue)" />
				</FluentGridItem>
				<FluentGridItem xs="3">
					<FluentInputLabel Label="@LOC("Nullable")" />
					<FluentCheckbox @bind-Value=_form.IsNullable Label="@LOC("can be NULL")" Style="margin-top:5px;" />
					<FluentValidationMessage For="@(() => _form.IsNullable)" />
				</FluentGridItem>
				<FluentGridItem xs="3">
					<FluentInputLabel Label="@LOC("Autogenerated")" />
					<FluentCheckbox @bind-Value=_form.AutoDefaultValue Label="@LOC("autogenerate value")" Style="margin-top:5px;" />
					<FluentValidationMessage For="@(() => _form.AutoDefaultValue)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("Unique")" />
					<FluentCheckbox @bind-Value=_form.IsUnique Label="@LOC("only unique values")" Style="margin-top:5px;" />
					<FluentValidationMessage For="@(() => _form.IsUnique)" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("Sortable")" />
					<FluentCheckbox @bind-Value=_form.IsSortable Label="@LOC("used for sorting")" Style="margin-top:5px;" />
					<FluentValidationMessage For="@(() => _form.IsSortable)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("Searchable")" />
					<FluentCheckbox @bind-Value=_form.IsSearchable Label="@LOC("used in filters")" Style="margin-top:5px;" />
					<FluentValidationMessage For="@(() => _form.IsSearchable)" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentSelect @bind-SelectedOption="@_form.PreferredSearchType" TOption="TfDataProviderColumnSearchType"
								  Items="@(Enum.GetValues<TfDataProviderColumnSearchType>())" Style="width:100%"
								  OptionText="@(p => p.ToString())" Label="@LOC("Preferred search type")"></FluentSelect>
					<FluentValidationMessage For="@(() => _form.PreferredSearchType)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("Global search")" />
					<FluentCheckbox @bind-Value=_form.IncludeInTableSearch Label="@LOC("include in global table search")" Style="margin-top:5px;" />
					<FluentValidationMessage For="@(() => _form.IncludeInTableSearch)" />
				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentInputLabel Label="@LOC("System")" />
					<FluentCheckbox @bind-Value=_form.IsSystem Label="@LOC("system column")" Style="margin-top:5px;" />
					<FluentValidationMessage For="@(() => _form.IsSystem)" />
				</FluentGridItem>
			</FluentGrid>
		</FluentEditForm>
	}
</FluentDialogBody>
