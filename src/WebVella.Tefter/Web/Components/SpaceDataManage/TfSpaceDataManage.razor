@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@inherits TfFormBaseComponent
@if (!string.IsNullOrWhiteSpace(_error))
{
	<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>

}
else
{
	<TfCard>
		<FluentEditForm EditContext="EditContext"
						FormName="submit-form" class="tf-form" novalidate>
			<DataAnnotationsValidator />
			<FluentGrid>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" Value=@UC.SpaceDataManageForm.Name
									 Label="@LOC("Name")" Style="width:100%" ReadOnly="true" />

				</FluentGridItem>
				<FluentGridItem xs="6">
					<FluentTextField TextFieldType="@TextFieldType.Text" Value=@SelectedProvider.Name
									 Label="@LOC("Data provider")" Style="width:100%" ReadOnly="true" />
				</FluentGridItem>
			</FluentGrid>
		</FluentEditForm>
	</TfCard>
	<FluentLabel Typo="Typography.PaneHeader" Style="margin:1rem 0">@LOC("Columns")</FluentLabel>
	<TfCard Small="true">
		<TitleTemplate>
			<FluentStack Orientation="@Orientation.Horizontal" HorizontalAlignment="@HorizontalAlignment.End">
				<FluentSelect @bind-SelectedOption="@_selectedColumn"
							  TOption="string" Required="false"
							  Items="@_columnOptions" Style="width:200px"
							  Placeholder="@LOC("select provider column")"></FluentSelect>
				<FluentButton OnClick="_addColumn" IconStart="@TfConstants.AddIcon" Appearance="@Appearance.Outline">@LOC("Add new")</FluentButton>
			</FluentStack>
		</TitleTemplate>
		<ChildContent>
			@if (UC.SpaceDataManageForm.Columns.Count == 0)
			{
				@LOC("This dataset will return all data provider columns. Select columns for limitation.")
			}
			else
			{
				<div class="tf-grid-wrapper">
					<table class="tf-grid">
						<tbody class="tf-grid-tbody">
							@foreach (var context in UC.SpaceDataManageForm.Columns.Order())
							{
								<tr @key=@Guid.NewGuid() class="tf-grid-tr">
									<td class="tf-grid-td" style="width:30px;">
										<div>
											<FluentButton Appearance="@Appearance.Outline" OnClick="@(()=> _deleteColumn(context))" Title="@LOC("Delete column")">
												<FluentIcon Color="@Color.Error" Value="@TfConstants.DeleteIcon" />
											</FluentButton>
										</div>
									</td>
									<td class="tf-grid-td">
										<div>
											<div>@context</div>
										</div>
									</td>
									<td class="tf-grid-td" style="width:100px;">
										<div>
											@if (AllColumnOptions.Contains(context))
											{
												<FluentBadge Fill="somevalue" Color="white" BackgroundColor="@Color.Success.ToAttributeValue()">found in provider</FluentBadge>
											}
											else
											{
												<FluentBadge Fill="somevalue" Color="white" BackgroundColor="@Color.Error.ToAttributeValue()">not in provider</FluentBadge>
											}
										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
		</ChildContent>
	</TfCard>
	<FluentLabel Typo="Typography.PaneHeader" Style="margin:1rem 0">@LOC("Query Filters")</FluentLabel>
	<CascadingValue IsFixed="false" Name="TfSpaceDataManage" Value="this" TValue="TfSpaceDataManage">
		<TfCard Small="true">
			<TitleTemplate>
				<FluentStack VerticalAlignment="@VerticalAlignment.Center">
					<FluentStack HorizontalGap="0" HorizontalAlignment="@HorizontalAlignment.Left">
						<FluentLabel Typo="@Typography.Body" Color="@Color.Accent">AND</FluentLabel>
						<FluentLabel Typo="@Typography.Body" Style="margin-left:0.5rem;color:var(--neutral-foreground-rest);opacity:0.5">rule</FluentLabel>
					</FluentStack>
					<FluentStack HorizontalAlignment="@HorizontalAlignment.Right" VerticalAlignment="@VerticalAlignment.Center">
						@if (SelectedProvider is null)
						{
							<FluentBadge Appearance="Appearance.Accent">@LOC("no data provider")</FluentBadge>
						}
						else if (SelectedProvider.ColumnsTotal.Count == 0)
						{
							<FluentBadge Appearance="Appearance.Accent">@LOC("no columns")</FluentBadge>
						}
						else
						{
							<FluentSelect @bind-SelectedOption="@_selectedFilterColumn"
										  TOption="string" Required="false"
										  Items="@AllColumnOptions" Style="width:140px"
										  Placeholder="@LOC("select...")"></FluentSelect>
							<FluentButton Class="" OnClick="@_addColumnFilterHandler" IconStart="@TfConstants.AddIcon.WithColor(Color.Accent)" Appearance="@Appearance.Outline">@LOC("Column")</FluentButton>
						}
						<FluentButton Class="" OnClick="@(() => AddFilter(typeof(TucFilterAnd),null,null))" IconStart="@TfConstants.AddIcon.WithColor(Color.Accent)" Appearance="@Appearance.Outline">@LOC("AND")</FluentButton>
						<FluentButton Class="" OnClick="@(() => AddFilter(typeof(TucFilterOr),null,null))" IconStart="@TfConstants.AddIcon.WithColor(Color.Accent)" Appearance="@Appearance.Outline">@LOC("OR")</FluentButton>
					</FluentStack>
				</FluentStack>
			</TitleTemplate>
			<ChildContent>
				@if (UC.SpaceDataManageForm.Filters.Count == 0)
				{
					<div>@LOC("No filters added yet")</div>
				}
				@foreach (var item in UC.SpaceDataManageForm.Filters)
				{
					<TfFilterManage Item="item" />
				}
			</ChildContent>
		</TfCard>
	</CascadingValue>

@* 	<textarea style="height:1000px;width:100%">
		@JsonSerializer.Serialize(Form, new JsonSerializerOptions() { WriteIndented = true })
	</textarea> *@
}

