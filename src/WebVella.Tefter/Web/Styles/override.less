
:root .tf-select-menu {
	background: var(--neutral-layer-3) !important;
}

/*Overrides*/
fluent-data-grid-row:has([row-selected]) {
	background-color: var(--neutral-fill-stealth-hover)
}

fluent-select::part(listbox) {
	max-height: 200px;
}

.tf-input-label {
	color: var(--neutral-foreground-hover) !important;
}

.fluent-messagebar-message .title {
	display: block;
}

div[class ^='fluent-messagebar'],
.fluent-messagebar-notification,
.fluent-messagebar-message {
	animation: none !important;
}

fluent-button.accent svg {
	fill: var(--neutral-layer-1) !important;
}

.tf-input-description {
	color: var(--neutral-foreground-active);
	font-size: 11px;
}
fluent-anchored-region > div{
	box-shadow: none !important;
	background-color: transparent !important;
}

fluent-anchored-region fluent-menu-item {
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
	max-width: 100%;
	position: relative;
}

fluent-anchored-region fluent-menu-item > .tf-addon {
	position: absolute;
	content: "";
	left: 0;
	top: 2px;
	bottom: 2px;
	width: 3px;
	display: block;
	padding:0;
}



.tf-menu-item-selected{
	position:relative;
}

.tf-menu-item-selected::before {
	content: "";
	display: block;
	position: absolute;
	top: 25%;
	left: 0;
	bottom: 25%;
	width: 3px;
	background: var(--accent-fill-rest);
}

.fluent-dialog-main.right::part(control),
.fluent-dialog-main.left::part(control) {
	--dialog-padding: 0px;
}

fluent-text-field[readonly]::part(root),
fluent-number-field[readonly]::part(root),
fluent-select[readonly]::part(control),
fluent-text-area[readonly]::part(control) {
	background: transparent !important;
	border-color: var(--neutral-fill-input-alt-active) !important;
}
.fluent-input-label {
	color: var(--neutral-foreground-hint) !important;
}

fluent-switch::part(label) {
	margin-inline-end: 0;
}