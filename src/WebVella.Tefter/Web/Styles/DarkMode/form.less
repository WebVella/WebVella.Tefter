@import '../variables.less';
@import 'fluent.less';

html:root .tf-select-menu {
	&__body {
		background: var(--neutral-layer-floating) !important;

		fluent-menu-item .fluent-typography {
			color: var(--neutral-foreground-rest);
		}
	}
}

/*.tf-input-label {
	color: var(--neutral-foreground-rest) !important;
}
*/
.tf-input-description {
	color: var(--neutral-foreground-hint);
	font-size: 11px;
}


fluent-text-field,
fluent-search,
fluent-number-field,
fluent-text-area {
	--neutral-fill-input-rest: var(--tf-zinc-900);
	--neutral-fill-input-hover: var(--tf-zinc-900);
	--neutral-fill-input-active: var(--tf-zinc-900);
	--neutral-fill-input-focus: var(--tf-zinc-900);
	--neutral-stroke-input-rest: var(--tf-zinc-700);
	--neutral-stroke-input-hover: var(--tf-zinc-500);
	--neutral-stroke-input-active: var(--tf-zinc-400);
	--neutral-stroke-input-focus: var(--tf-zinc-600);
}

fluent-text-field[readonly]::part(root),
fluent-text-field.disabled::part(root),
fluent-search[readonly]::part(root),
fluent-search.disabled::part(root),
fluent-number-field[readonly]::part(root),
fluent-number-field.disabled::part(root),
fluent-text-area[readonly]::part(control),
fluent-text-area.disabled::part(control) {
	background: transparent;
	border-color: var(--neutral-stroke-input-rest);
}

fluent-select,
fluent-combobox {
	--neutral-fill-rest: var(--tf-zinc-900);
	--neutral-fill-hover: var(--tf-zinc-900);
	--neutral-fill-active: var(--tf-zinc-900);
	--neutral-fill-focus: var(--tf-zinc-900);
	--neutral-stroke-control-rest: var(--tf-zinc-700);
	--neutral-stroke-control-hover: var(--tf-zinc-500);
	--neutral-stroke-control-active: var(--tf-zinc-400);
	--neutral-stroke-control-focus: var(--tf-zinc-600);

	&::part(listbox) {
		background-color: var(--tf-zinc-800) !important;
	}

	&::part(switch) {
		background-color: var(--tf-zinc-800) !important;
	}

	fluent-option {
		background: transparent !important;
		color: var(--tf-zinc-200);

		&:hover {
			background-color: var(--tf-zinc-700) !important;
		}
	}
}

fluent-select[readonly]::part(control),
fluent-select.disabled::part(control),
fluent-combobox[readonly]::part(control),
fluent-combobox.disabled::part(control) {
	background: transparent;
	border-color: var(--neutral-stroke-input-rest);
}

fluent-switch{
	--neutral-foreground-rest: var(--tf-zinc-700);
	&::part(switch) {
		background: var(--tf-zinc-900);
	}

	&.checked::part(switch) {
		background: var(--accent-base-color);
	}
}

fluent-checkbox,
fluent-radio {
	--neutral-fill-input-alt-rest: var(--tf-zinc-900);
	--neutral-stroke-strong-rest: var(--tf-zinc-700);
}

.fluent-input-label {
	color: var(--neutral-foreground-hover) !important;
}



.sortable-item {
	/*	background-color: var(--neutral-fill-layer-active) !important;
	border-color: var(--neutral-fill-layer-active) !important;*/

	.sortable-grab {
		/*background-color: var(--neutral-fill-layer-hover) !important;*/
	}
}



fluent-button {

	&:hover {
		background: rgba(255,255,255,0.05);
	}

	&.accent {
		--foreground-on-accent-rest: var(--tf-white);
		--foreground-on-accent-hover: var(--tf-white);
		--foreground-on-accent-active: var(--tf-white);
		--foreground-on-accent-focus: var(--tf-white);
		--neutral-layer-1: var(--tf-white);

		svg {
			--accent-fill-rest: var(--foreground-on-accent-rest);
		}
	}

	&:not(.tf-select-btn).neutral {
		--neutral-foreground-rest: var(--neutral-stroke-rest);
	}
}

fluent-anchor {
	&::part(control) {
		background: var(--neutral-fill-layer-rest);
	}

	&:hover::part(control) {
		background: var(--neutral-fill-layer-active);
	}
}
