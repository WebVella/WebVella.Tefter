@namespace WebVella.Tefter.TemplateProcessors.Email.Addons
@inherits TfFormBaseComponent
@if (_loading)
{
	<TucLoadingPane />
}
else
{
	<FluentEditForm EditContext="EditContext" FormName="dp-settings" class="tf-form" novalidate>

		<FluentTabs @bind-ActiveTabId="@_activeTab">
			<FluentTab Label="@LOC("Content")" Id="@SettingsComponentTabs.Content.ToDescriptionString()" Style="padding-top:15px">
				<FluentGrid>
					<FluentGridItem xs="6">
						<FluentInputLabel Label="@LOC("From")" />
						<FluentTextField @bind-Value=@_form.Sender
										 @bind-Value:after=_valueChanged
										 TextFieldType="TextFieldType.Text" Style="width:100%" />
						<FluentValidationMessage For="@(() => _form.Sender)" />
					</FluentGridItem>
					<FluentGridItem xs="6">
						<FluentInputLabel Label="@LOC("To")" />
						<FluentTextField @bind-Value=@_form.Recipients
										 @bind-Value:after=_valueChanged TextFieldType="TextFieldType.Text" Style="width:100%" />
						<FluentValidationMessage For="@(() => _form.Recipients)" />
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid>
					<FluentGridItem xs="6">
						<FluentInputLabel Label="@LOC("Cc")" />
						<FluentTextField @bind-Value=@_form.CcRecipients @bind-Value:after=_valueChanged TextFieldType="TextFieldType.Text" Style="width:100%" />
						<FluentValidationMessage For="@(() => _form.CcRecipients)" />
					</FluentGridItem>
					<FluentGridItem xs="6">
						<FluentInputLabel Label="@LOC("Bcc")" />
						<FluentTextField @bind-Value=@_form.BccRecipients @bind-Value:after=_valueChanged TextFieldType="TextFieldType.Text" Style="width:100%" />
						<FluentValidationMessage For="@(() => _form.BccRecipients)" />
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid>
					<FluentGridItem xs="12">
						<FluentInputLabel Label="@LOC("Subject")" />
						<FluentTextField @bind-Value=@_form.Subject @bind-Value:after=_valueChanged TextFieldType="TextFieldType.Text" Style="width:100%" />
						<FluentValidationMessage For="@(() => _form.Subject)" />
					</FluentGridItem>
				</FluentGrid>
				<FluentGrid>
					<FluentGridItem xs="12">
						<FluentInputLabel Label="@LOC("Content")" />
						<TucEditor @bind-Value=@_form.HtmlContent @bind-Value:after=_valueChanged Size="TfEditorSize.Large" />
						<FluentValidationMessage For="@(() => _form.HtmlContent)" />
					</FluentGridItem>
				</FluentGrid>
			</FluentTab>
			<FluentTab Id="@SettingsComponentTabs.Attachments.ToDescriptionString()" Style="padding-top:15px">
				<Header>
					<span style="margin-right:5px;">@LOC("Attachments")</span>
					<FluentBadge Appearance="@Appearance.Accent">@_attachmentsSelection.Count</FluentBadge>
				</Header>
				<ChildContent>
					<FluentInputLabel Label="@LOC("Applicable Templates")" />
					<TucSelect Style="width:100%" TOption="TfTemplate" SelectedOption="_selectedOption" SelectedOptionChanged="_selectedOptionChanged"
								  Placeholder="@LOC("select template to add...")"
								  OptionValue="@((p)=> p.Id.ToString())"
								  Items="_templatesOptions">
						<OptionTemplate Context="option">
							<span>@option.Name</span>
							<FluentIcon Slot="start" Value="@TfConstants.GetIcon(option.FluentIconName)" />
						</OptionTemplate>
					</TucSelect>
					<table class="tf-grid" style="margin-top:15px;">
						<thead class="tf-grid-thead">
							<tr class="tf-grid-thead-bkg"></tr>
							<tr class="tf-grid-tr">
								<th class="tf-grid-th" style="width:30px;min-width:30px;"></th>
								<th class="tf-grid-th" style="width:60px;min-width:60px;">status</th>
								<th class="tf-grid-th" style="width:30px;min-width:30px;">icon</th>
								<th class="tf-grid-th">name</th>
							</tr>
						</thead>
						<tbody class="tf-grid-tbody">
							@foreach (var row in _attachmentsSelection)
							{
								<tr @key=row.TemplateId class="tf-grid-tr">
									<td class="tf-grid-td">
										<div>
											<FluentButton IconStart="@TfConstants.GetIcon("Delete")!.WithColor(Color.Error)" OnClick="@(_ => _removeItem(row))" />
										</div>
									</td>
									<td class="tf-grid-td">
										<div>
											@if (row.Template.IsEnabled)
											{
												<FluentBadge Style="display:block" Appearance="@Appearance.Neutral">@LOC("ON")</FluentBadge>
											}
											else
											{
												<FluentBadge Style="display:block" Fill="somevalue" BackgroundColor="@TfColor.Emerald500.GetColor().Value" Color="white">@LOC("OFF")</FluentBadge>
											}
										</div>
									</td>
									<td class="tf-grid-td">
										<div>
											<FluentIcon Value="@TfConstants.GetIcon(row.Template.FluentIconName)" />
										</div>
									</td>
									<td class="tf-grid-td">
										<div>
											@row.Template.Name
										</div>
									</td>
								</tr>
							}
							@if (_attachmentsSelection.Count == 0)
							{
								<tr class="tf-grid-tr">
									<td class="tf-grid-td" colspan="4">
										<div>
											@LOC("No attachments added")
										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</ChildContent>
			</FluentTab>
			<FluentTab Id="@SettingsComponentTabs.GroupBy.ToDescriptionString()" Style="padding-top:15px">
				<Header>
					<span style="margin-right:5px;">@LOC("Group by")</span>
					<FluentBadge Appearance="@Appearance.Accent">@_form.GroupBy.Count</FluentBadge>
				</Header>
				<ChildContent>
					<FluentGrid>
						<FluentGridItem xs="12">
							<FluentInputLabel Label="@LOC("Group by columns")" />
							<TucSelectList @bind-Values=@_form.GroupBy
										   @bind-Values:after=_valueChanged
										   Placeholder="@LOC("type a column name + ENTER")"
										   NoItemsMessage="@LOC("no data grouping will be applied")" />
							<FluentValidationMessage For="@(() => _form.GroupBy)" />
						</FluentGridItem>
					</FluentGrid>
				</ChildContent>
			</FluentTab>
		</FluentTabs>
	</FluentEditForm>
}