@namespace WebVella.Tefter.TemplateProcessors.ExcelFile.Addons
@inherits TfBaseComponent
@if (_isLoading)
{
	<TfLoadingPane />
}
else if (RegionContext is null || RegionContext.Template is null || RegionContext.SpaceData is null)
{
	<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@LOC("Result cannot be generated as arguments are missing from the provided context")</FluentMessageBar>
}
else if (_result is null)
{
	<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@LOC("Result is from the wrong object type")</FluentMessageBar>
}
else if (_result.Errors.Count > 0)
{
	<h4>@LOC("Errors")</h4>
	<FluentMessageBar Intent="@MessageIntent.Warning" AllowDismiss="false">@LOC("Errors occurred while generating the preview")</FluentMessageBar>
	<div class="tf-grid-wrapper" style="margin-top:15px;">
		<table class="tf-grid">
			<thead class="tf-grid-thead">
				<tr class="tf-grid-tr">
					<th class="tf-grid-th">@LOC("property")</th>
					<th class="tf-grid-th">@LOC("error")</th>
				</tr>
			</thead>
			<tbody class="tf-grid-tbody">
				@foreach (var error in _result.Errors)
				{
					<tr @key=@(Guid.NewGuid())>
						<td class="tf-grid-td">
							<div>
								@error.PropertyName
							</div>
						</td>
						<td class="tf-grid-td">
							<div>@error.Message</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}
else if (_result.Items.Count == 0)
{
	<FluentMessageBar Intent="@MessageIntent.Warning" AllowDismiss="false">@LOC("No files will be generated")</FluentMessageBar>
}
else if (_result.ItemsWithErrorsCount > 0)
{
	<FluentMessageBar Intent="@MessageIntent.Warning" AllowDismiss="false">@LOC("{0} files have errors", _result.ItemsWithErrorsCount)</FluentMessageBar>
	<h4 style="margin-top:1rem;">@LOC("File errors")</h4>
	<div class="tf-grid-wrapper" style="margin-top:15px;">
		<table class="tf-grid">
			<thead class="tf-grid-thead">
				<tr class="tf-grid-thead-bkg"></tr>
				<tr class="tf-grid-tr">
					<th class="tf-grid-th">@LOC("file name")</th>
					<th class="tf-grid-th" style="width:80px;max-width:80px;">@LOC("used rows")</th>
					<th class="tf-grid-th">@LOC("errors")</th>
				</tr>
			</thead>
			<tbody class="tf-grid-tbody">
				@foreach (var item in _result.Items)
				{
					<tr @key=@(Guid.NewGuid())>
						<td class="tf-grid-td">
							<div>
								<a href="@item.DownloadUrl" target="_blank">@item.FileName</a>
							</div>
						</td>
						<td class="tf-grid-td">
							<div>@item.NumberOfRows</div>
						</td>
						<td class="tf-grid-td">
							<div style="white-space:normal">
								@if (item.Errors.Count > 0)
								{
									<ul>
										@foreach (var error in item.Errors)
										{
											<li style="color:var(--error)">
												@if (String.IsNullOrWhiteSpace(error.PropertyName))
												{
													<span>@error.Message</span>
												}
												else
												{
													<span><i>@error.PropertyName :</i> <span>@error.Message</span></span>
												}
											</li>
										}
									</ul>
								}
								else
								{
									<span>@LOC("no errors")</span>
								}
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}
else
{
	<FluentMessageBar Intent="@MessageIntent.Success" AllowDismiss="false">@LOC("Template file generation is successful")</FluentMessageBar>
	<div class="tf-grid-wrapper" style="margin-top:15px;">
		<table class="tf-grid">
			<tbody class="tf-grid-tbody">
				<tr>
					<td class="tf-grid-td">
						<div>
							@LOC("{0} files are generated", _result.Items.Count)
						</div>
					</td>
					<td class="tf-grid-td" style="width:120px;max-width:120px;">
						<div>
							@if (!_showDetails)
							{
								<a href="javascript:void(0)" @onclick=@(_=> _showDetails = true)>@LOC("show details")</a>
							}
							else
							{
								<a href="javascript:void(0)" @onclick=@(_=> _showDetails = false)>@LOC("hide details")</a>
							}
						</div>
					</td>
					<td class="tf-grid-td" style="width:160px;max-width:160px;">
						<div style="text-align:right;">
							<FluentAnchor Target="_blank" Appearance="Appearance.Accent" Href="@_result.ZipDownloadUrl" IconStart="@TfConstants.GetIcon("ArrowDownload").WithColor(Color.Neutral)">@LOC("download")</FluentAnchor>
						</div>
					</td>
				</tr>

				@if (_showDetails)
				{
					@foreach (var item in _result.Items)
					{
						<tr @key=@(Guid.NewGuid())>
							<td class="tf-grid-td" colspan="3">
								<div>
									<a href="@item.DownloadUrl" target="_blank">@item.FileName</a>
								</div>
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
}




