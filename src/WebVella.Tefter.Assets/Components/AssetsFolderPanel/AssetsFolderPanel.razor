@namespace WebVella.Tefter.Assets.Components
@using WebVella.Tefter.UI.Components
@inherits TfFormBaseComponent

<FluentDialogHeader Style="display:none" />
<FluentDialogFooter Style="display:none" />
<FluentDialogBody>
	<div>
		@if (_isLoading)
		{
			<TucLoadingPane />
		}
		else if (Content.FolderId is null)
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">@LOC("Error")</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="@TfConstants.GetIcon("Dismiss")" />
					</div>
				</div>
				<div class="asset-panel__body" style="padding:10px">
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("No folder is configured for this column!")</FluentMessageBar>
				</div>
			</div>
		}
		else if (_folder is null)
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">@LOC("Error")</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="@TfConstants.GetIcon("Dismiss")" />
					</div>
				</div>
				<div class="asset-panel__body" style="padding:10px">
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("No folder is selected for this view column!")</FluentMessageBar>
				</div>
			</div>
		}
		else if (String.IsNullOrWhiteSpace(_folder.DataIdentity))
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">@LOC("Error")</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="@TfConstants.GetIcon("Dismiss")" />
					</div>
				</div>
				<div class="asset-panel__body" style="padding:10px">
					<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("The folder has no join key set!")</FluentMessageBar>
				</div>
			</div>
		}
		else if (String.IsNullOrWhiteSpace(_dataIdentityValue))
		{
			<div class="talk-panel">
				<div class="talk-panel__left">
					<div class="talk-panel__left__header">
						<div class="talk-channel-label">@LOC("Error")</div>
						<div class="talk-panel__left__header_actions">
							<FluentButton Appearance="@Appearance.Stealth"
										  OnClick="_cancel"
										  IconStart="@TfConstants.GetIcon("Dismiss")" />
						</div>
					</div>
					<div class="talk-panel__left__body" style="padding:10px">
						<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Warning">@LOC("The selected dataset does not support the data identity '{0}' of folder '{1}'!", _folder.DataIdentity, _folder.Name)</FluentMessageBar>
					</div>
				</div>
			</div>
		}
		else
		{
			<div class="asset-panel">
				<div class="asset-panel__header">
					<div class="asset-panel__header__content">
						@($"{_folder.Name}")
					</div>
					<div class="asset-panel__header__actions">
						<FluentButton Appearance="@Appearance.Stealth"
									  OnClick="_cancel"
									  IconStart="@TfConstants.GetIcon("Dismiss")" />
					</div>
				</div>
				<div class="asset-panel__subheader">
					<div class="asset-panel__subheader__left">
						<FluentButton Style="width:100%" OnClick="_addFile"
									  Appearance="Appearance.Outline" IconStart="@TfConstants.GetIcon("Document")">@LOC("Add file")</FluentButton>

					</div>
					<div class="asset-panel__subheader__right">
						<FluentButton Style="width:100%" OnClick="_addLink"
									  Appearance="Appearance.Outline" IconStart="@TfConstants.GetIcon("Link")">@LOC("Add link")</FluentButton>
					</div>
				</div>
				<div class="asset-panel__body">
					@if (_items.Count == 0)
					{
						<FluentMessageBar AllowDismiss="false" Intent="@MessageIntent.Info">@LOC("No assets in this folder yet")</FluentMessageBar>
					}
					<div class="items-wrapper">
						@foreach (var asset in _items)
						{
							var assetMeta = _getAssetMeta(asset);

							<div class="asset-item" @key=@asset.Id>
								<div class="asset-item__icon">
									@if (!String.IsNullOrWhiteSpace(assetMeta.FavIcon))
									{
										<div class="image-wrapper">
											<img src="@assetMeta.FavIcon" alt="" />
										</div>
									}
									else
									{
										<FluentIcon Value="@assetMeta.Icon" />
									}
								</div>
								<a href="@assetMeta.Url" target="_blank" class="asset-item__meta">
									<div class="asset-item__meta__title">@assetMeta.Title</div>
									<div class="asset-item__meta__description">@((MarkupString)assetMeta.Description)</div>
								</a>
								<div class="asset-item__action">
									<FluentButton OnClick="@(_=> _actionMenuIdOpened = asset.Id)" StopPropagation="true"
												  Id="@($"tf-{asset.Id}")" Style="@(_actionMenuIdOpened == asset.Id ? "visibility:visible;" : "")"
												  Appearance="@Appearance.Stealth" IconStart="@TfConstants.GetIcon("MoreVertical").WithColor(Color.Neutral)" />
									<FluentMenu UseMenuService="true"
												Open="(_actionMenuIdOpened == asset.Id)"
												OpenChanged="@(x => _actionMenuIdOpened = x ? asset.Id : null)"
												Anchor="@($"tf-{asset.Id}")">
										<FluentMenuItem OnClick="@(_=> _deleteAsset(asset))">
											<FluentIcon Value="@TfConstants.GetIcon("Delete").WithColor(Color.Error)" Slot="start" />
											<FluentLabel>@LOC("Delete")</FluentLabel>
										</FluentMenuItem>
										<FluentMenuItem OnClick="@(_=> _editAsset(asset))">
											<FluentIcon Value="@TfConstants.GetIcon("Edit")" Slot="start" />
											<FluentLabel>@LOC("Update")</FluentLabel>
										</FluentMenuItem>
										<FluentMenuItem OnClick="@(_=> _getAsset(asset))">
											@if (asset.Type == AssetType.File)
											{
												<FluentIcon Value="@TfConstants.GetIcon("ArrowDownload")" Slot="start" />
												<FluentLabel>@LOC("Download")</FluentLabel>
											}
											else
											{
												<FluentIcon Value="@TfConstants.GetIcon("GlobeSearch")" Slot="start" />
												<FluentLabel>@LOC("Browse URL")</FluentLabel>
											}

										</FluentMenuItem>
									</FluentMenu>
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		}
	</div>
</FluentDialogBody>
