@namespace WebVella.Tefter.Assets.Components
@inherits TfFormBaseComponent
@* Header *@
<FluentDialogHeader ShowDismiss="true">
	<FluentLabel Typo="Typography.PaneHeader">@_title</FluentLabel>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
	<FluentStack HorizontalAlignment="@(Content.IsAddOnly ? HorizontalAlignment.Center : HorizontalAlignment.Right)">
		@if (String.IsNullOrWhiteSpace(_error))
		{
			<FluentButton Appearance="Appearance.Accent" OnClick="@_save" IconStart="_iconBtn"
						  Loading="_isSubmitting" Disabled="_isSubmitting">@_btnText</FluentButton>
		}
		<FluentButton Appearance="Appearance.Neutral" OnClick="@_cancel">@LOC("Cancel")</FluentButton>
	</FluentStack>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
	@if (!string.IsNullOrWhiteSpace(_error))
	{
		<FluentMessageBar Intent="@MessageIntent.Error" AllowDismiss="false">@_error</FluentMessageBar>

	}
	else
	{
		<FluentEditForm EditContext="EditContext" OnValidSubmit="_save"
						FormName="submit-form" class="tf-form" novalidate>
			<DataAnnotationsValidator />
			<FluentGrid>
				<FluentGridItem xs="12">
					<FluentTextField Required="true" TextFieldType="@TextFieldType.Text" Value=@_form.Url
									 ValueChanged="@((x)=> _urlChanged(x))"
									 Label="@LOC("Url")" Style="width:100%" AutoComplete="off" />
					<FluentValidationMessage For="@(() => _form.Url)" />
				</FluentGridItem>
			</FluentGrid>
			<FluentGrid>
				<FluentGridItem xs="12">
					<FluentInputLabel Label="@LOC("Label")" Required="true" />
					<FluentStack>

						<FluentTextField TextFieldType="@TextFieldType.Text" @bind-Value=@_form.Label
										 Style="width:100%" AutoComplete="off">
							@if (String.IsNullOrWhiteSpace(_form.IconUrl))
							{
								<FluentIcon Value="@TfConstants.GetIcon("Link")" Slot="start" Color="Color.Neutral" />
							}
							else
							{
								<img slot="start" style="width:20px; max-height:20px" src="@_form.IconUrl" alt="" />
							}


						</FluentTextField>
						<FluentButton IconStart="@(TfConstants.GetIcon("CloudArrowDown"))" Title="@LOC("get from URL")"
									  OnClick="@(()=>_getNameFromUrl(true))" Appearance="@Appearance.Outline"
									  Loading="_isGetUrlLoading" Disabled="_isGetUrlLoading" />
					</FluentStack>
					<FluentValidationMessage For="@(() => _form.Label)" />
				</FluentGridItem>
			</FluentGrid>
		</FluentEditForm>
	}
</FluentDialogBody>
